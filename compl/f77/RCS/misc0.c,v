head     1.1;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.1
date     87.03.09.22.28.15;  author alex;  state Exp;
branches ;
next     ;


desc
@Фортран-77, версия 2.6.
@



1.1
log
@Версия_2.6
@
text
@#include "defs"

ptr ckalloc(n)
register int n;
{
	register ptr p;
	ptr calloc();

	if( p = calloc(1, (unsigned) n) )
		return(p);
	fatal("out of memory");
	/* NOTREACHED */
}

hextoi(c)
register int c;
{
	register char *p;
	static char p0[17] = "0123456789abcdef";

	for(p = p0 ; *p ; ++p)
		if(*p == c)
			return( p-p0 );
	return(16);
}

char *copyn(n, s)
register int n;
register char *s;
{
	register char *p, *q;

	p = q = ckalloc(n);
	while(--n >= 0)
		*q++ = *s++;
	return(p);
}

char *copys(s)
char *s;
{
	return( copyn( strlen(s)+1 , s) );
}

eqn(n, a, b)
register int n;
register char *a, *b;
{
while(--n >= 0)
	if(*a++ != *b++)
		return(NO);
return(YES);
}


double convcd(n, s)
int n;
register char *s;
{
double atof();
char v[100];
register char *t;
if(n > 90)
	{
	err("too many digits in floating constant");
	n = 90;
	}
for(t = v ; n-- > 0 ; s++)
	*t++ = (*s=='d' ? 'e' : *s);
*t = '\0';
return( atof(v) );
}
@
