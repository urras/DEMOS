
            дддд   ееееее   м     м    oooo     сссс
           д   д   е        мм   мм   o    o   с    с
          д    д   е        м м м м   o    o   с    с
          д    д   еееее    м  м  м   o    o   с
          д    д   е        м     м   o    o   с
          д    д   е        м     м   o    o   с    с
         дддддддд  ееееее   м     м    oooo     сссс



          демосдемосдемосдемосдемосдемосдемосдемосде
          емосдемосдемосдемосдемосдемосдемосдемосдем
          мо                                      мо
          ос                                      ос
          сд        ОПЕРАЦИОННАЯ СИСТЕМА          сд
          де                                      де
          ем               ДЕМОС                  ем
          мо                                      мо
          ос                                      ос
          сд                                      сд
          де             Версия 1.0               де
          ем                                      ем
          мо                                      мо
          сдемосдемосдемосдемосдемосдемосдемосдемосд
          демосдемосдемосдемосдемосдемосдемосдемосде







                    ОПИСАНИЕ ПРИМЕНЕНИЯ






               Паремский Михаил Владимирович
                Аншуков Сергей Александрович
                Бардин Валерий Владимирович
                  Руднев Алексей Петрович
               Черногрядская Наталья Юрьевна










                       МОСКВА - 1985








                                                           1







   Документ содержит общую характеристику диалоговой  единой
мобильной операционной системы ДЕМОС. Описывается назначение
системы и ее состав, рассматриваются основные системные  по-
нятия.  Перечисляются  технические  средства, поддерживаемые
системой.






















































2




         1. НАЗНАЧЕНИЕ И УСЛОВИЯ ПРИМЕНЕНИЯ СИСТЕМЫ



   1.1. Общая характеристика системы.


   ДЕМОС - это универсальная операционная система,  предназ-
наченная для решения широкого круга научно-технических, эко-
номиеских и управленческих задач.

   Вариант системы ДЕМОС для ЭВМ типа СМ-4  является  первым
этапом  проекта создания серии программно совместимых ОС для
всех основных  типов  вычислительных  машин,  выпускаемых  в
СССР.

   Реализация единого  интерфейса  ОС  позволит  решить  ряд
принципиальных  проблем программного обеспечения, в частнос-
ти:

   - Oблегчить возможность создания мобильных пакетов  прог-
     рамм для ЭВМ различных типов;

   - предоставить средства для создания унифицированной сре-
     ды пользователя для разнотипных ЭВМ;

   - снизить затраты на переобучение пользователей и  обслу-
     живающего персонала при переходе с одной вычислительной
     установки на другую.

   Применительно к данному варианту системы,  это  означает,
что  при  реализации долговременных проектов, предполагающих
замену или развитие аппаратной базы, выбор ОС ДЕМОС является
предпочтительным.

   ДЕМОС входит в семейство операционных систем  совместимых
с  ОС  UNIX, интерфес которой постепенно становится междуна-
родным стандартом среды пользователя. Широкое распостранение
систем этого типа об'ясняется не только их простотой, логич-
ностью, преимуществами использования унифицированной  среды,
но  и  рядом  удачных конструктивных решений, позволяющих им
успешно конкурировать с оригинальными ОС для конкретных ЭВМ.

   При проектировании интерфейса системы  учитывались  такие
особенности  применения  средств  вычислительной  техники  в
СССР, как значительная доля вычислительных машин, работающих
вне  локальных  сетей,  необходимость использования символов
русского  алфавита  и  коллективный  характер  использования
сравнительно  небольших установок. Все это привело к необхо-
димости создания системы для мини-ЭВМ обладающей достаточным
уровнем сервиса без существенного снижения эффективности ра-
боты системы.

   Если попытаться определить место  ОС  ДЕМОС  в  семействе
UNIX,  можно сказать, что ядро системы практически совпадает
по интерфейсу с ядром UNIX v.7 (с некоторыми  расширениями),
а  интерфейс  команд  пользователя  в основном соответствует
принятому в ОС UNIX 4.1 bsd.  Отличительной  особеностью  ОС
ДЕМОС, является использование восьмибитного внутреннего кода


                                                           3

представления символов.

   Как и любая система, ОС ДЕМОС не  лишена  недостатков.  К
основным из них относятся следующие:

   - ядро системы достаточно велико (занимает около 45 Kбайт
     памяти).  Для  эффективной  работы  на  СМ-4 желательно
     иметь не менее 80 Кслов (160 Кбайт) оперативной памяти;

   - отсутствуют средства для поддержки работы в режиме  ре-
     ального времени.

   Операционная система ДЕМОС ориентированна на применения в
следующих областях:

   - выполнение научно-технических рачетов;

   - разработка программного обеспечения, в том числе и  для
     других ЭВМ;

   - обучение программированию;

   - обработка текстов, подготовка документации;

   - задачи управления (не требующие режима реального време-
     ни).

   В принципе, система универсальна и может служить для  ре-
шения  практически  любых  задач.  Необходимо также учитывая
перспективу переноса ОС  ДЕМОС  (либо  создания  совместимых
систем) для ЭВМ других типов.


   1.2. Технические средства


   Данный вариант системы ДЕМОС предназначен для  управления
вычислительными  комплесами  типа  СМ-4,  СМ 1420,  СМ 1600,
ЭЛЕКТРОНИКА 100/25, ЭЛЕКТРОНИКА 79 и обеспечивает работу  со
следующими устройсвами:

-    процессоры СМ 2104 (СМ-4), СМ 2420  (СМ 1420),  СМ 2406
     (СМ 1600), ЭЛЕКТРОНИКА 100/25, ЭЛЕКТРОНИКА 79;

-    терминалы  типа:  VIDEOTON-340  (СМ 7206),  ВТА 2000-1,
     ВТА 2000-2,   ВТА 2000-3,   ВТА 2000-15,   ВТА 2000-30,
     VDT-52100,    VDT-52106,     VDT-52129,     ЭЛЕКТРОНИКА
     15ИЭ-00-013, ЭЛЕКТРОНИКА МС 7401 (с возможностью работы
     в графическом режиме);

-    кассетные  диски  СМ 5400  (4300  ИЗОТ-1370)   емкостью
     2,4Мб;

-    касетные диски СМ 5408 емкостью 14 Мб;

-    пакетные диски СМ 5407 емкостью 29 Мб на базе механизма
     ЕС-5061;

-    гибкие диски СМ 5603;





4

-    магнитные ленты СМ 5300 (СМ 5301);

-    печатающие устройства СМ 6302 (DZM-180), СМ 6315 (АЦПУ)
     и СМ6900 (DARO-1154);

-    перфоленточные устройства СМ 6204;

-    асинхронный мультиплексор передачи данных СМ 8514;

-    адаптер дистанционной связи СМ 8502 (БС-АДС);

-    мультиплексор асинхронный МПА-1.

   Минимальная конфигурация вычислительного комплекса, необ-
ходимая  для  нормального  функционирования  системы  должна
включать:

  -  процессор, оснащенный аппаратурой диспетчера памяти;

  -  оперативную память об'емом не менее 64К слов;

   -  один  из  накопителей  на  магнитных  дисках:  СМ 5400
     (ИЗОТ-1370), СМ 5408 или СМ 5407;

  -  консольный терминал любого из перечисленных типов.

   Желательно использовать терминалы  имееющие  прописные  и
строчные буквы (например, ЭЛЕКТРОНИКА 15ИЭ-00-0013).




































                                                           5




           2. ФУНКЦИОНАЛЬНЫЕ ВОЗМОЖНОСТИ ОС ДЕМОС


   Функциональные возможности ОС ДЕМОС прежде всего  опреде-
ляются ее целевой направленностью на применение в коллектив-
ных системах обработки информации. В состав ОС ДЕМОС включе-
но около 200 команд. Среди них имеются такие средства разра-
ботки  программ  как   компиляторы,   отладчики,   редакторы
текстов,  системы подготовки документации и обучения, инфор-
мационные и почтовые службы.

   При организации сети ЭВМ, работающих под  управлением  ОС
ДЕМОС, пользователь получает возможность выполнять команды и
обрабатывать файлы на различных  вычислительных  установках,
использовать внешние устройства удаленных ЭВМ.

   Концепция "фильтров", свойства командного языка и  файло-
вой  системы  позволяют организовывать сложные системы обра-
ботки информации, используя уже имеющийся набор команд.

   Набор функций управления терминалом, позволяет разрабаты-
вать  интерактивные  компоненты, практически не зависящие от
типа устройства.


   2.1. Команды системы ДЕМОС.



   2.1.1. Регистрация.


   Для того чтобы пользователь мог работать  в  системе,  он
должен  сначала  зарегистрироваться  в ней. С этой целью ис-
пользуется команда login. При успешной регистрации  обновля-
ются  учетные  файлы  и  пользователю  указывается о наличии
новых сообщений в системе. Для  обеспечения  защиты  от  не-
санкционированного  доступа  к  информации необходимо ввести
пароль, который устанавливается или изменяется с помощью ко-
манды  passwd.  Вводимый  пароль  не  отображается на экране
дисплея.


   2.1.2. Командные языки.


   Выбор интерпретатора командного языка для  взаимодействия
с  системой делается каждым пользователем индивидуально, и в
качестве такого интерпретатора может применяться любая инте-
рактивная  программа. Подобный подход позволять одновременно
существовать нескольким командным языкам, и действительно, в
данной  версии  ДЕМОС  их два: SHELL и CSHELL. Оба командных
языка выступают и как языки управления заданиями,  обеспечи-
вающие  взаимодействие с операционной системой, и как доста-
точно мощные и гибкие  языки  программирования,  позволяющие
строить сложные командные файлы. Оба языка позволяют органи-
зовывать циклы и проверки различных условий. Достаточно ска-
зать,  что синтаксис языка CSHELL во многом совпадает с син-
таксисом языка Си. Хотя в данной версии системы,  CSHELL  не


6

является  основным  командным  языком,  стоит  учитывать тот
факт, что его популярность растет  и  к  настоящему  времени
стал  стандартной  компонентой  для наиболее развитых систем
семейства UNIX.


   2.1.3. Средства обучения.


   Для начала работы в ДЕМОС нужны самые минимальные  знания
об  операционной системе. Получить их можно двумя способами:
изучив документацию по системе или воспользовавшись услугами
автоматизированной системы обучения LEARN.

   Система LEARN состоит из трех частей:  языка  составления
курсов обучения, интерпретатора этого языка и набора курсов.
В настоящее время имеются курсы по следующим темам:

   - основные команды работы с файлами;

   - работа с функциональной клавиатурой;

   - более сложные элементы работы с файлами;

   - программирование на языке Си.

   Отличительной особенностью LEARN является ее органическая
связь с операционной системой, что позволяет включать в уро-
ки задания,  предполагающие  использование  инструментальных
возможностей ОС ДЕМОС.

   Хотя в настоящее время система LEARN ориентирована исклю-
чительно  на обучение работе в ОС ДЕМОС, не существует прак-
тически никаких ограничений на тематику курсов.


   2.1.4. Языки программирования.


   В ДЕМОС включены  развитые  средства  программирования  и
создания  сложных программных комплексов. В него входят ком-
пиляторы с языков Си и ФОРТРАН, интерпретатор языка  БЕЙСИК,
компиляторы  LEX  и  YACC,  система  make;  имеются развитые
средства отладки и другие инструментальные средства.

   Операционная система ДЕМОС, Си-компилятор и  по  существу
все  прикладные программы системы написаны на языке Си. Си -
это универсальный язык программирования, для которого харак-
терны  экономичность  выражения,  широкий набор операторов и
типов данных. Преимуществом языка является  то,  что  он  не
связан с какой-либо одной операционной системой или машиной,
и может использоваться для написания любых больших  вычисли-
тельных программ, программ для обработки текстов, систем уп-
равления базами данных и т.д.

   Ассемблер (as) имеет ограниченное применение  в  системе.
Хотя  на нем написаны некоторое машинно-зависимые части сис-
темы, в основном, он применяется в качестве одного из прохо-
дов Си-компилятора.

   Для решения задач численного анализа  используются  языки
ФОРТРАН-4  и  ФОРТРАН-77.  Компилятор  ФОРТРАН-77  реализует


                                                           7

входной язык стандарта ANSI, Language FORTRAN (FORTRAN  77),
Document X3J3/90.

   LEX -это генератор программ, позволяющий автоматизировать
написание программ лексического анализа. LEX строит програм-
му - лексический анализатор - на так  называемом  host-языке
(в  качестве такого языка в ДЕМОС используется Си). Это зна-
чит,  что  LEX-программа  пишется  на  языке  LEX,  а   LEX-
генератор, в свою очередь, генерирует программу лексического
анализа на языке Си.

   YACC является программой, осуществляющей построение  син-
таксических анализаторов на основе заданных сведений (специ-
фикаций) о синтаксической структуре входной информации. Спе-
цификации включают правила, описывающие входные конструкции,
кодовую часть, к которой должно быть организовано  обращение
при  обнаружении этих конструкций, и программу ввода базовых
элементов потока (лексический анализатор). YACC  написан  на
языке Си.

   В тех случаях, когда необходимо осуществить вычисления  с
большими  целыми  числами  с очень высокой степенью точности
или преобразовать числа из одной системы счисления в другую,
рекомендуется  применять язык BC. Синтаксис его в значитель-
ной мере похож  на  синтаксис  Си.  Язык  имеет  завершенную
структуру  управления,  режим немедленного выполнения опера-
ций. Существует возможность определения и сохранения функций
для последующего их выполнения.


   2.1.5. Средства разработки программ.


   К средствам, предназначенным для создания  сложных  прог-
раммных  комплексов в среде операционной системы ДЕМОС нужно
в первую очередь  отнести  систему  "make".  Система  "make"
обеспечивает  автоматизацию процесса получения готовых прог-
рамм из исходных текстов и об'ектных файлов, следит за  сог-
ласованностью  изменений  в  них.  Результатом работы "make"
может являться готовая программа,  получаемая  из  множества
файлов, отчет или статья, создаваемая с помощью системы под-
готовки документации, библиотека функций и т.п.

   Средством, позволяющим создавать специализированные  рас-
ширения  языков  программирования,  является  макропроцессор
"m4".Он обеспечивает обработку макроопределений и встроенных
функций  с параметрами, проверку условий, изменение значений
макропеременных, арифметические операции над целыми числами,
обработку файлов, специализированные функции обработки строк
и некоторые другие возможности.

   Одной из наиболее ответственных  и  трудоемких  этапом  в
создании  программ  является - отладка. Для облегчения этого
процесса ОС ДЕМОС предлагает следующие средства:

adb
   - Универсальный диалоговый отладчик, в основном  предназ-
     наченный  отладки  программ,  написанных на языках Си и
     Ассемблер. Работа с этим отладчиком ведется в  терминах
     языка  ассемблера. С его помощью можно проводить анализ
     состояния процесса, прерванного системой  или  останов-
     ленного в контрольной точке.


8


cdeb
   - Также является диалоговым отладчиком,  но  предназначен
     для  отладки  с  программ,  написанных  на  языках Си и
     ФОРТРАН-77, в терминах исходного языка. Подобный подход
     считается  наиболее эффективным для языков программиро-
     вания высокого уровня.  "Cdeb"  позволяет  обрабатывать
     программы,  состоящие  из  нескольких модулей (файлов),
     написанных на разных языках. Хотя "cdeb" и не  обладает
     необ'ятным набором возможностей, присущих "adb", он бо-
     лее прост в управлении и с  успехом  может  применяться
     программистами средней квалификации.


   2.1.6. Редактирование текстов.


   Операционная система ДЕМОС имеет в своем составе  широкий
набор  программ, предназначенных для редактирования текстов.
В настоящем варианте системы их  три:  "ed",  "red",  "sed".
Такое разнообразие является вполне оправданным, так не смот-
ря на универсальность, каждый из этих редакторов имеет  свою
сферу применения.

   Наиболее популярным редактором ОС ДЕМОС является экранный
редактор  "red". Основными достоинствами этого редактора яв-
ляются:

   - обслуживание практически любого  современного  дисплея,
     за счет динамической настройки на тип терминала в соот-
     ветствии с его описанием в системе;

   - образование на экране терминала нескольких "окон" и од-
     новременный просмотр нескольких файлов;

   - переопределение функциональной  клавиатуры  и  введение
     новых функциональных клавиш;

   - использование команд ОС ДЕМОС;

   - наличие макропеременных для хранения фрагментов текста,
     наборов команд редактора и т.п.;

   - защита от потери информации в результате сбоев ЭВМ  или
     неверных редакций.

   Второй редактор текстов "ed" является традиционным редак-
тором операционных систем семейства UNIX. Он применяется для
работы на терминалах, для которых невозможно обеспечить  эк-
ранную  работу.  К  ним  относяться  терминалы с печатающими
устройствами и дисплей "РИН-609". Редактор "ed" имеет разви-
тые  средства контекстного поиска и работы с регулярными вы-
ражениями, позволяет редактировать зашифрованную  информацию
и  обеспечивает  защиту сеанса, может использовать командные
файлы.

   Наконец, использование редактора "sed", в отличие от  ос-
тальных  редакторов, предполагает предварительную разработку
программ, обеспечивающих выполнение всех необходимых  преоб-
разований  при  последовательном  проходе  по файлу. Область
применения этого редактора определяют следующие  его  досто-
инства:


                                                           9


   - практически не накладывает ограничений на об'ем  редак-
     тируемых файлов;

   - обработка текста за один проход позволяет  использовать
     "sed"  в качестве "фильтра" для преобразования информа-
     ции;

   - редактор "sed" является самым быстрым редактором систе-
     мы.


   2.1.7. Обработка текстов.


   В последние годы все большее значение начинают  принимать
задачи  автоматизации работ "конторского" характера - подго-
товка отчетов, статей, описаний, деловой  переписки  и  т.д.
Основной  компонентой ДЕМОС для решения подобных задач явля-
ется система "pif". Система "pif" как и большинство  ей  по-
добных, обрабатывает текст, предварительно снабженный специ-
альными командами "разметки", определяющими формат  докумен-
та.  Язык форматирования системы "pif" несколько не традици-
онен, он содержит такие операторы как структурный "if", опе-
раторы  вычисления  выражений, средства для задания макроко-
манд. Благодаря этому можно создавать макропакеты,  предназ-
наченные  для подготовки документации самой различной струк-
туры.

   Характерной особенностью системы "pif" является ее ориен-
тация  на совместное использование с другими компонентами ОС
ДЕМОС: текстовыми редакторами, программами поиска  и  сорти-
ровки,  средствами  построения  таблиц  и т.п. Систему "pif"
нужно рассматривать не только как самостоятельную, замкнутую
систему  обработки текстов, а как инструмент для обеспечения
одного из этапов в длинной технологической цепочке  создания
документа.


   2.1.8. Работа с терминалом.


   Основной тенденцией программирования в среде ОС ДЕМОС яв-
ляется  создание программ независимых от характерных особен-
ностей оборудования вычислительной  установки.  Определенный
уровень "независимости" поддерживается средствами самой опе-
рационной системы, путем  моделирования  единого  интерфейса
для  всех  типов  внешних устройств. Но подобная универсаль-
ность как правило ведет к  использованию  достаточно  узкого
класса возможностей оборудования.

   Принятая в ОС ДЕМОС,  технология  создания  интерактивных
программ позволяет работать с терминалами практически любого
типа  и  максимально  использовать  особенности  конкретного
устройства. Функциональные характеристики дисплея описывают-
ся в файле "/etc/termcap". В момент запуска, программа  счи-
тывает описания нужного терминала (в системе всегда известно
с какого типа устройства была запущена задача), соответству-
ющим  образом  настраивается  и дальше работает в режиме ин-
терпретации.




10

   Этот способ характерен для экранного  редактора  "red"  и
пакета "curses", который предлагается в качестве универсаль-
ного программного интерфейса для работы с экраном алфавитно-
цифрового терминала.


   2.1.9. Электронная почта.


   Среди сервисных функций ДЕМОС  служба  электронной  почты
занимает  важное  место.  Сам термин "электронная почта" уже
давно перестал рассматриваться как некое экзотическое прило-
жение к операционной системе. Система "mail" позволяет поль-
зователям обмениваться различными сообщениями о обеспечитает
тайну переписки. Для каждого пользователя система "mail" за-
водит личный "почтовой ящик", который может быть  просмотрен
и отредактирован в любое удобное время и только его владель-
цем. В настоящее время, нередки случаи, когда вычислительные
установки  используются несколькими пользователями в различ-
ное время. При такой  организации  труда,  система  почтовой
служба  может  оказать  неоценимые услуги по обмену информа-
цией. Система "mail" и подобные ей можно  рассматривать  как
первые шаги в создании безбумажной технологии производства.

   Сходными характеристиками обладает и система  "msgs".  Ее
основным  отличием  от системы "mail" является ориентация на
конкретное приложение - передачу сообщений об  изменениях  в
операционной системе.

   Команда "write" позволяет обмениваться сообщениями непос-
редственно  в  процессе  работы. Можно задать имя адресата и
организовать двухсторонний  "разговор".  Любой  пользователь
сисмемы,  при желании, может запретить и обратно открыть пе-
редачу сообщений на свой терминал с помощью команды "msg".


   2.1.10. Сетевые средства ОС ДЕМОС.


   В состав данной версии ОС ДЕМОС  входят  двe  подсистемы,
обеспечивающие обмен данными между ЭВМ: UUCP и СЕМОС.

   Основное назначение подсистемы UUCP -  организация  связи
между ЭВМ, работающими под управлением ОС ДЕМОС, расположен-
ными на больших расстояниях друг от друга. Обмен информацией
ведется  по коммутируемым телефонным линиям. Для работы UUCP
необходимы модем и устройство автоматического вызова,  кото-
рое осуществляет набор телефонных номеров. Подсистема позво-
ляет производить обмен файлами и исполнять команды  на  уда-
ленных ЭВМ. Обмен информацией производится параллельно с ра-
ботой пользователя. О результатах работы пользователь  изве-
щается  через  почтовую  службу  ДЕМОС. В подсистеме имеется
возможность использования  выделенных  телефонных  линий.  В
этом  случае устройство автоматического вызова не требуется.
На небольших расстояниях можно  использовть  обычние  терми-
нальные линии.

   Подсистема СЕМОС предназначена для организации  локальных
сетей  в  среде  ЭВМ,  работающих  под управлением ОС ДЕМОС.
Обмен  информацией  производится  по  терминальным   линиям.
Средства маршрутизации позволяют использовать для работы ми-
нимальное количество линий связи. Пользователь  СЕМОС  имеет


                                                          11

возможность производить обмен файлами с машинами сети, обме-
ниваться с абонентами сети почтой, выполнять команды на уда-
ленных  ЭВМ,  печатать  информацию  на  удаленных печатающих
устройствах. Подсистема СЕМОС  обладает  развитым  сервисом,
имеет простой и удобный синтаксис запросов.

   Обе подсистемы имеют средства защиты данных от  несанкци-
онированного доступа и сбора статистической информации.


   2.2. ОСНОВНЫЕ ФУНКЦИИ ЯДРА ОС ДЕМОС


   Основными задачами ядра  ОС  ДЕМОС  является  организация
совместного использования ресурсов вычислительной установки,
управление физическими устройствами, процессами  и  файловой
системой.  Интерфейс  ядра  ОС  и программиста задан набором
системных вызовов и аппаратом  асинхронных  событий  (сигна-
лов).


   2.2.1. Файловая система.


   Ядро операционной системы ДЕМОС содержит достачно  эффек-
тивный и вместе с тем простой механизм для работы с файловы-
ми системами. Файловой системой является  структура  данных,
состоящая  из  трех  типов об'ектов: файлов, справочников, и
специальных файлов. Для хранения этой структуры используются
такие  внешние запоминающие устройства как диски и магнитные
ленты. Не следует проводить прямое соответствие между файло-
вой  системой  и  физическим  устройством.  Файловая система
может занимать только часть устройства и является скорее ло-
гическим понятием.


   2.2.2. Файлы.


   Файлом является пространство в файловой системе, предназ-
наченное  для хранения произвольной информации. С точки зре-
ния операционной системы, файл это неструктурированная  пос-
ледовательность байтов. Подобный подход позволяет достаточно
легко  организовывать  и  обслуживать  различные   структуры
данных. При этом организация доступа к той или иной структу-
ре информации и ее обработка ложится не на операционную сис-
тему,  а  на  конкретную  программу.  К числу таких программ
можно отнести компиляторы, системы управления базами данных,
системы  подготовки документации и любую прикладную програм-
му, которой необходима своя структура информации.

   В ОС ДЕМОС файл имеет следующие характеристики:

ИМЯ ФАЙЛА
   - Это последовательность символов КОИ-8 длиной  не  более
     14  байт, которая используется для идентификации файла.
     Для создания файла существует системный вызов:


     creat ("Имя_файла", РЕЖИМ_ДОСТУПА);




12

     в результате выполнения которого создается файл с  име-
     нем  "Имя_файла".  Если  файл с заданным именем уже су-
     ществовал, то относящаяся к нему информация уничтожает-
     ся, а его размер становится равным 0. Значение парамет-
     ра РЕЖИМ_ДОСТУПА будет рассмотрено ниже.

ЧИСЛО СВЯЗЕЙ
   - Файл в пределах одной файловой системы может иметь нес-
     колько  различных  имен. Альтернативные имена ссылаются
     на одно и то же простанство в файловой системе, по это-
     му,  обращение  к  файлу с любым из этих имен, вызывает
     обращение к одной и той же информации. При  уничтожении
     файла, на самом деле исключается только одно из имен, и
     если оно было последним, происходит  реальное  удаление
     информации. Следует так же отметить, что если в систем-
     ном вызове "creat" используется одно из  альтернативных
     имен,  то  это  имя  исключается из списка связей с су-
     ществующим файлом и  порождается  новый.  Для  создания
     альтернативного   имени  файла  используется  системный
     вызов:


     link ("Имя_файла1", "Имя_файла2");


     в котором "Имя_файла1" является именем уже существующе-
     го  файла, а "Имя_файла2" - альтернативное имя, которое
     необходимо создать. Для удаления имен файлов применяет-
     ся системный вызов:


     unlink ("Имя_файла");


ИДЕНТИФИКАТОР ВЛАДЕЛЬЦА И ГРУППЫ
   - В ОС ДЕМОС каждый пользователь, помимо имени под  кото-
     рым  он входит в систему, имеет личный числовой иденти-
     фикатор (UID) и идентификатор группы (GID),  в  которую
     он  входит. Эти числа используются системой для опреде-
     ления прав доступа пользователя к той или иной информа-
     ции  или  ресурсу.  При  создании файла, его владельцем
     становится пользователь, создавший этот  файл.  Следует
     отметить, что фактически пользователь является владель-
     цем не информации относящейся к файлу, а только данного
     альтернативного имени. Для смены владельца файла служит
     системный вызов:


     chown ("Имя_файла", UID, GID);


РЕЖИМ ДОСТУПА
   - Это значение которое используется для определения  прав
     пользователя на доступ к файлу. Существуют три типа от-
     ношений: права владельца файла, права членов его группы
     и  права всех остальных пользователей. К правам доступа
     относятся возможность чтения, записи и выполнения  дан-
     ного  файла  в  качестве программы. Режим доступа файла
     определяется при его создании и может  быть  изменен  с





                                                          13

     помощью системного вызова:


     chmod ("Имя_файла", НОВЫЙ_РЕЖИМ);


     В системе реализована следующая стратегия защиты инфор-
     мации:

        - читать информацию, относящуюся к файлу, или выпол-
          нять  файл может любой пользователь, которому раз-
          решены данные операции. Даже если пользователь яв-
          ляется владельцем файла, но в режиме доступа стоит
          запрет на чтение, в этом запросе ему будет отказа-
          но;

        - изменять информацию, относящуюся к  файлу,  созда-
          вать  альтернативные  имена,  может владелец файла
          или любой пользователь, которому разрешена  запись
          в этот файл;

        - изменять любые характеристики файла, за исключени-
          ем  идентификатора  владельца  и  группы, изменять
          режим доступа файла может  только  владелец  этого
          файла.

     Это говорит о том, что  если  владелец  файла,  закроет
     чтение/запись в файл для членов своей группы и всех ос-
     тальных пользователей,  никто  кроме  него  не  получит
     доступ к этой информации. Однако, следует заметить, что
     в системе существует специфический  пользователь  права
     которого ни чем не ограничены. Этот пользователь обычно
     имеет имя "root", а  его  личный  идентификатор  всегда
     равен  0. Как правило, это имя использует администратор
     системы, да и то в экстренных случаях. Так как подобная
     вседозволенность  может  привести к неожиданным и неже-
     ланным результатам, работа в режиме  супер-пользователя
     требует повышенного внимания и аккуратности.

РАЗМЕР ФАЙЛА
   - Длина файла в байтах. В ОС ДЕМОС не существует  возмож-
     ности  и необходимости заранее определить размер файла.
     Размер файла увеличивается по мере записи в него.

ВРЕМЕННЫЕ ХАРАКТЕРИСТИКИ
   - К временным характеристикам файла относятся время  соз-
     дания  файла,  время последнего доступа к нему, и время
     последней модификации информации относящейся  к  файлу.
     Для  смены времени последнего доступа и последней моди-
     фикации служит системный вызов:


     utime ("Имя_файла", timep);


     где "timep" это  структура,  содержащая  новые  времена
     доступа  и модификации. Время создания файла изменяется
     только системным вызовом "creat".

   Всю перечисленную информацию о файле можно получить с по-




14

мощью системного вызова:


     stat ("Имя_файла", buf);



   2.2.3. Справочники.


   Справочники обеспечивают связь  между  именами  файлов  и
собственно  файлами, т.е. отражают структуру файловой систе-
мы. Системный вызов:

             mknod ("Имя_файла", РЕЖИМ+ТИП, 0);

создает   справочник   с   именем   "Имя_файла".    Параметр
"РЕЖИМ+ТИП"  содержит режим доступа и признак того, что соз-
дается справочник. Справочник ни чем не отличается о  других
файлов  за  исключением,  того  что  записывать в него может
только операционная система.

   В общем случае, файловую систему можно представить в виде
дерева, узлами которого являются справочники:

              =========
              |   /   |<--- корневой
              =========     справочник
             /    |    \
            /  ...v...  \
        +--v--+:     :+--v--+
        | usr |:.....:| sys |<-- справочник
        +-----+       +-----+
      /  | |  \          |  \
     /...v...  \         |   \
 +--v--+ a  :...v...     | ...v...
 | fox |....::лист :  +--v--+emos:<-- файл
 +-----+   | :.....:  | dev |....:
    |   +--v--+       +-----+
 ...v...| bin |       /  |  \
 :ФАЙЛ :+-----+      /   |   \
 :.....:/  |  \       .....
         .....

                          Рис. 1.


Любой файл в системе может быть найден при просмотре цепочки
справочников  до  тех пор, пока не будет обнаружен требуемый
файл. Например, имя:

                       /usr/fox/ФАЙЛ

однозначно определяет файл и называется ПОЛНЫМ ИМЕНЕМ ФАЙЛА.
Полное имя файла всегда начинается с "/" и состоит из списка
имен справочников, разделенных символом "/".  Список  задает
путь в дереве файловой системы для нахождения нужного об'ек-
та. Последним элементом списка может  быть  имя  справочника
или файла. Это имя называется БАЗОВАМ ИМЕНЕМ ФАЙЛА.

   При доступе к файлу нет  необходимости  всегда  указывать
его  полное имя. В контекст процесса входит понятие ТЕКУЩЕГО


                                                          15

СПРАВОЧНИКА. Его полное имя всегда подставляется к заданному
имени   файла, если оно не является полным именем. Имя теку-
щего справоника задается в момент входа пользователя в  сис-
тему и может быть изменено командой "cd" или системным вызо-
вом:

                 chdir ("Имя_справочника")

Таким  образом,  достаточно  указывать  только  часть  имени
файла, которое указывает путь в иерархии файловой системы от
текущего справочника к  файлу.  Существуют  два  специальных
имени:  "."  - для ссылки на текущий справочник и ".." - для
ссылки на текущий справочник, расположенный в иерархии уров-
нем выше.


   2.2.4. Специальные файлы.


   Специальные файлы являются наиболее  непривычной  особен-
ностью  файловой системы ДЕМОС. С одной стороны, это обычные
файлы для которых допустимы все имеющиеся в системе операции
над файлами. С другой стороны обращение к специальному файлу
вызывает  обращение  к  физическому  устройству,  т.е.   по-
существу  специальный  файл  является "псевдонимом" внешнего
устройства. Доступ к любому физическому  устройству  будь-то
магнитная  лента,  диск, терминал, печатающее устройство или
память вычислительной  установки,  происходит  только  через
специальные файлы. Такая интерпретация устройств ввода/выво-
да имеет три достоинства:

   - ввод/вывод для файлов и  внешних  устройств  становятся
     неотличимым;

   - имена файлов и устройств имеют один и тот же  синтаксис
     и  значение,  т.е.  программе,  в качестве имени файла,
     может быть передано имя устройства;

   - специальные файлы подчиняются такому же механизму защи-
     ты, как и обыкновенные файлы.

   Специальный файл создается с помощью уже  знакомого  сис-
темного вызова:

           mknod ("Имя_файла", РЕЖИМ+ТИП, addr);

Параметр "РЕЖИМ+ТИП" как и в случае создания справочника со-
держит режим доступа и признак того, что создается специаль-
ный файл. Параметр "addr" задает тип интерфейса (см.  "Руко-
водство системного программиста.").


   2.2.5. Монтируемые файловые системы.


   ОС ДЕМОС позволяет работать  одновременно  с  несколькими
файловыми системами. Среди файловых систем можно выделить:

корневую
   - Это файловая система, которая необходима для работы ОС.
     Ее корневой справочник имеет имя "/". Расположение кор-
     невой файловой системы задается при генерации ОС  ДЕМОС


16

     и может быть изменено только в момент вызова ОС.

монтируемую
   - Эта файловая система, которая  содержит  дополнительную
     файловую структуру и может быть подключена (смонтирова-
     на) в время работы ОС. Таких систем может быть несколь-
     ко,  их  число  задается при генерации ОС, но обычно не
     меньше 8.  Корневым  справочником  монтируемой  системы
     может  быть  любой справочник корневой файловой системы
     или другой (уже подключенной) монтируемой файловой сис-
     темы.

   Системный вызов:

             mount (special, root_dir, РЕЖИМ);

позволяет смонтировать файловую  систему,  расположенную  на
устройстве,  доступ  к которому происходит через специальный
файл "special", на справочник "root_dir".  Имя  специального
файла и справочника должны быть полными именами. В результа-
те этого запроса "ветвь"  дерева  файлов  основной  файловой
системы  заменяется  на иерархию файлов монтируемой файловой
системы. После такой операции доступ к файлам смонтированной
файловой  системы  осуществляется  по общепринятым правилам.
Существует только одно исключение: в справочниках  смонтиро-
ванной файловой системы не может существовать ни одной ссыл-
ки на файлы, расположенные в другой  файловой  системе.  Это
ограничение связано со сложностью в управлении, так как тре-
буется удалять подобные связи, при каждом демонтировании.

   Системный вызов:

                     umount (special);

отсоединяет монтируемую файловую систему.


   2.2.6. Запросы ввода/вывода


   Операции ввода/вывода в ОС ДЕМОС реализованы таким  обра-
зом,  чтобы исключить различия в способах обмена информацией
с файлами, внешними устройствами и процессами.

   Для чтения (записи) информации из файла  (предполагается,
что  файл уже существует) необходимо открыть этот файл с по-
мощью системного вызова:

              fd = open ("Имя_файла", РЕЖИМ);

В качестве имени файла можно задавать как полные так и отно-
сительные  имена. Параметр "РЕЖИМ" опеределяет цель открытия
файла и может принимать значения:

0    открыть файл для чтения;

1    открыть файл для записи;

2    открыть файл для чтения/записи одновременно.

   Значение "fd" называется дескриптором  файла.  Это  целое
число, которое используется для идентификации файла при пос-


                                                          17

ледующих операциях с ним.

   Операционная система не накладывает  никаких  ограничений
на  число  пользователей,  способных  одновременно открывать
один и тот же файл. Хотя существует  возможность  разрушения
содержимого файла при одновременной записи двумя пользовате-
лями, на практике это происходит  очень  редко.  В  подобном
случае,  какие-либо ограничения не являются необходимыми или
достаточными. Они не являются необходимыми потому, что  сис-
тема  не имеет дело с большими, однофайловыми базами данных,
с которыми работают несколько независимых процессов. Они  не
являются также достаточными, поскольку ограничения в обычном
смысле, когда одному пользователю запрещается писать в файл,
который  читает  другой пользователь, не могут предотвратить
всех возможных конфликтов. Например,  такая  ситуация  может
возникнуть в случае когда два пользователя обрабатывают файл
с помощью редактора текстов, который создает копию  редакти-
руемого файла.

   Несмотря на сказанное, в ОС  ДЕМОС  все  же  имеется  ряд
внутреннихмеханизмов защиты, которые обеспечивают логическую
целостность файловой системы, когда два пользователя пытают-
ся  одновременно  записывать  данные  в один файл, создавать
файлы в одном и том же справочнике или удалять друг у  друга
открытые файлы.

   Чтение/запись  файла  происходит  последовательно.   Если
какой-то  байт  в файле был последним записанным (или прочи-
танным), то следующий запрос ввода/вывода будет относиться к
байту,  следующим  сразу  же за ним. Чтение или запись файла
производится с помощью системных вызовов:

           byte_count = read (fd, buffer, count);
           byte_count = write(fd, buffer, count);

где параметр "fd"  является  дескриптором  открытого  файла,
"buffer" - адрес буфера обмена, а "count" задает число байт,
которые необходимо передеть. Оба вызова возвращают число ре-
ально  переданных  байт. Если значение "byte_count" не равно
значению "count", то:

   - если была операция записи, произошла ошибка обмена;

   - если была операция чтения, то из файла считана  послед-
     няя порция информации. Последующий запрос "read" вернет
     значение 0, что соответствует концу файла.

   Для каждого открытого файла в операционной системе  заво-
дится  указатель чтения/записи, который обычно соответствует
числу считанных (записанных) байтов.  При  обмене  с  файлом
значение  указателя  увеличивается  на величину "count". Для
принудительной установки указателя чтения/записи  предназна-
чен системный вызов:

            location = lseek (fd, offset, base);

где "fd" является дескриптором файла, а  "offset"  -  задает
величину смещения в байтах. Параметр "base" определяет точку
отсчета и может принимать следующие значения:





18

0  - указатель устанавливается на величину "offset" от нача-
     ла файла;

1  - указатель устанавливается на величину "offset" от теку-
     щего положения;

2  - Значение "location" равно текущему  значению  указателя
     чтения/записи.

   Подобный механизм обеспечивает организацию прямого досту-
па к информации. Следует отметить, что при смещении указате-
ля за конец файла и последующей записи, получается  промежу-
ток,  который  физически не занимает места и при чтении дает
нулевые байты.

   В операционной системе существует  ограничение  на  число
одновременно  открытых файлов, с которыми может работать за-
дача. Это число задается при генерации системы, но обычно не
меньше 20. Для закрытия файла предназначен вызов:

                        close (fd);



   2.2.7. Управление процессами.


   Если исключить случай,  связанный  с  начальным  запуском
системы, то новый процесс может быть создан только при помо-
щи системного вызова:

                    processid = fork();

Порожденный процесс является копией исходного. Оба  процесса
имеют  независимые  копии  сегмента  команд  и разделяют все
открытые до этого момента файлы. Конечно, если исходный про-
цесс  выполнял  не изменяемый командный сегмент, процесс-сын
будет разделять и его. Сегмент данных процесса-родителя  ко-
пируется в сегмент данных процесса-сына. В процессе-родителе
"processid" является идентификатором процесса-сына и никогда
не  равен  0,  в то время, как в процессе-сыне всегда 0. Это
позволяет  определить  является  ли  процесс  родителем  или
сыном.

   Процесс-родитель может ожидать завершения  процесса-сына,
используя системный вызов:

                 processid = wait (status);

который  приостанавливает  его  до  завершения   одного   из
процессов-сыновей,   а   затем,   возвращает   идентификатор
"processid" завершившегося процесса и заносит  в  переменную
"status"  код  возврата. Если данный процесс не имеет потом-
ков, то возвращается состояние ошибки.

   Для завершения процесса служит системный вызов:

                       exit (status);

Значение "status" используется в качестве кода возврата зап-
росом "wait".



                                                          19

   Системный вызов:

                 execv ("Имя_файла", argv);

вызывает чтение и выполнение программы из файла "Имя_файла",
передавая  ей последовательность аргументов "argv". Сегменты
команд и данных  текущего  процесса,  заменяются  содержимым
файла,  однако  открытые файлы, текущий справочник и межпро-
цессные связи, т.е. все что называется  "средой"  выполнения
процесса  остается без изменений. Системный вызов "execv" не
заменяет процесс, а вызывает выполнение другой  программы  в
рамках  текущего процесса. Если проводить аналогии, то вызов
"execv" больше всего похож на машинную команду "jmp".

   Процессы могут обмениваться информацией с помощью тех  же
самых  системных вызовов "read" и "write", которые использу-
ются и для работы с файлами.

   Вызов:

                       fd = pipe (x);

возвращает дескриптор файла "fd"  и  создает  линию  межпро-
цессной  связи,  называемую программным каналом. Этот канал,
подобно другим открытым файлам  наследуется  процессом-сыном
после вызова "fork". Синхронизация обменов в программном ка-
нале происходит следующим образом. Операция "read" из канала
находится  в состоянии ожидания до тех пор, пока другой про-
цесс не выполнит операцию "write" для того же канала. В этот
момент  происходит  передача данных между образами двух про-
цессов.

   Несмотря на то, что межпроцессная связь при помощи  кана-
лов  является довольно важным инструментом, она не позволяет
обмениваться данными любым процессам, работающим в  системе,
так как канал должен устанавливаться общим родителем взаимо-
действующих процессов.

   Существует еще один  механизм  взаимодействия  процессов.
Любой процесс может послать с помощью системного вызова:

                 kill (processid, SIGNAL);

процессу с идентификатором "processid" сигнал "SIGNAL". Про-
цесс,  которому  посылается  сигнал может заказать обработку
опеределенных сигналов:

                  signal (SIGNAL, server);

("server" является подпрограммой обработки) или игнорировать
их:

                 signal (SIGNAL, SIG_IGN);

Если для сигнала никакой обработки не указано, то его  появ-
ление вызывает завершение процесса.








20




             3. СОСТАВ ДИСТРИБУТИВНЫХ НОСИТЕЛЕЙ


   Операционная система ДЕМОС распространяется на двух  маг-
нитных лентах, которые содержат следующие материалы:

   - набор программ, предназначенных для работы без операци-
     онной системы и использующихся при постановке системы;

   - копию базовой версии операционной системы;

   - материалы для генерации ОС ДЕМОС и исходные тексты  яд-
     ра;

   - дополнительные программные компоненты (обучающая систе-
     ма "learn", сетевые программы "uucp", и др.);

   - сформатированную документацию по системе;

   - исходные тексты документации;

   - исходные тексты компонент системы.


   Вся информация, необходимая для начальной постановки сис-
темы и распечатки документации с ленты, приведена в докумен-
те"Руководство системному программисту" в разделе "Настройка
системы  Демос".  Краткое  описание  состава  дистрибутивной
ленты можно получить прямо с нее, выполнив следующие  коман-
ды:

 <загрузка с ленты>
 система      -> Boot
 система      -> :
 пользователь -> tm(N,1)

В последней команде "N" - номер магнитофона, на котором  ус-
тановлена лента.

   Предполагается следующая последовательность  действий  по
постановке и настройке системы:

1.   Восстановление с ленты на диск и настройка базовой вер-
     сии системы, позволяющей работать с минимальным набором
     устройств.

2.   Печать и изучение документации.

3.   Генерация ядра системы  под  конкретный  набор  внешних
     устройств, начало эксплуатации системы.

4.   Настройка параметров системы и ядра под конкретные  ус-
     ловия эксплуатации системы.

5.   Начало широкой эксплуатации системы.






                                                          21




                 4. СТРУКТУРА ДОКУМЕНТАЦИИ


   Вся документация подготовлена с помощью системы  "pif"  и
имеется  на  дистрибутивном  носителе.  Она разделена на две
части: "общая" документация  и  "оперативная"  документация.
Первая  включает практически все документы, кроме частей 2-9
"Руководства программиста". В нее входят:

Описание применения.

Руководство системного программиста:
     руководство по начальной постановке системы,  генерации
     и сопровождению.

Руководство оператора.

Руководство программиста, часть 1.
     содержит общее описание компонент операционной  системы
     Демос.

Описание языка.
     содержит описания языков программирования.

Контрольный пример.
     содержит описание контрольного примера.

   Цель этих документов - дать общее описание системы и раз-
личных ее компонент.

   Описания команд, библиотечных функций, макропакетов, фор-
матов  файлов  и  т.п. собраны в оперативной документации по
системе. Оперативная документация включает части 2-9  "Руко-
водства программиста." и вместе с тем является самостоятель-
ным документом. Он используется  для  получения  оперативных
справок командами "man" и "help". Последние изменения в сис-
теме немедленно отражаются в оперативной документации,  хотя
могут и не войти в общую. При расхождении между документами,
текущую версию системы отражает именно оперативная  докумен-
тация.

   Оперативная документация разбита на 8 разделов, в  каждом
из  которых  информация упорядочена по алфавиту. Разделы со-
держат следующую информацию:

1  - команды общего назначения;

2  - системные вызовы;

3  - библиотечные функции;

4  - специальные файлы (устройства);

5  - форматы файлов;

6  - игры;





22

7  - пакеты макроопределений для форматeра текстов  "pif"  и
     системные соглашения;

8  - сопровождение системы (команды, вызов  системы,  анализ
     сбоев).

   Файлы с оперативной документацией записываются в  систему
и  служат  для  получения  информации с терминала по команде
"man":

man [РАЗДЕЛ] ИМЯ

где РАЗДЕЛ - номер раздела, а ИМЯ - название конкретной ком-
поненты. Например: man 1 cc.

   В руководстве программиста нумерация разделов оперативной
документации и частей руководства программиста отличается на
1: раздел 1 оперативной документации соответствует  2  части
руководства программиста, и т.п. Ссылки на оперативную доку-
ментацию записываются в виде: "имя(раздел)"; так,  например,
ссылка вида "подробнее см. ctags(1)" означает ссылку на опи-
сание команды "ctags" в разделе 1 оперативной документации.

   На основе оперативной документации система создает  крат-
кий     справочник,     который    записывается    в    файл
"/usr/lib/whatis"  и  содержит  краткие   описания   команд,
функций и т.п. Их можно получить командой "whatis имя".





































                                                          23




                5. РЕКОМЕНДАЦИИ ПО ОСВОЕНИЮ


   При первом знакомстве с системой необходимо изучить  раз-
делы документации содержащие описание правил работы с терми-
налом. Прежде всего  требуется  понять  назначение  основных
специальных  символов (уничтожение символа, отказ от набран-
ной строки, прекращение запущенного процесса и выход из  се-
анса).  Необходимо  также выяснить правила их набора на име-
ющемся терминале (cm. "Руководство оператора").

   Наиболее эффективный путь освоения системы - это  сочета-
ние  процесса изучения описаний с работой на терминале. Зна-
чительную помощь при этом может оказать комплект оперативной
документации, содержащий краткие сведения о компонентах сис-
темы и правилах их вызова. Поэтому в  первую  очередь  нужно
научиться  пользоваться командами предназначенными для полу-
чения  справочной  информации  (man,   whatis,   whereis   и
apropos). Следует отметить, что успех при поиске необходимых
сведений в значительной мере определяется степенью понимания
общей структуры оперативного руководства.

   Предполагается, следующий порядок изучения документов:

   - "Описание применения";

   - "Руководство оператора";

   - "Руководство программиста" части 2-6,8;

   - "Командный язык SHELL";

   - "Полиэкранный редактор текстов RED".

   Если ресурсные возможности системы позволяют  использоать
автоматизированную систему обучения (learn), желательно изу-
чить курсы : files и morefiles.

   Лицам, ответственным за  сопровождение  системы  дополни-
тельно требуется прочитать документы:

   - "Руководство системного программиста";

   - "Руководство программиста" часть 8.

   Документы содержащие описание конкретных компонент систе-
мы, могут изучаться по мере необходимости.

   Значительную помощь при изучении основных концепций  сис-
темы  могут оказать издания содержащие неформальные описания
системы UNIX, перевод которых планируется многими  издатель-
ствами. Однако, для решения вопроса применимости описанных в
переводной литературе средств, следует обращаться документа-
ции по ОС ДЕМОС.







24



                         СОДЕРЖАНИЕ



1.  НАЗНАЧЕНИЕ И УСЛОВИЯ ПРИМЕНЕНИЯ СИСТЕМЫ............    3
    1.1. Общая характеристика системы..................    3
    1.2. Технические средства..........................    4

2.  ФУНКЦИОНАЛЬНЫЕ ВОЗМОЖНОСТИ ОС ДЕМОС................    6
    2.1. Команды системы ДЕМОС.........................    6
    2.1.1. Регистрация.................................    6
    2.1.2. Командные языки.............................    6
    2.1.3. Средства обучения...........................    7
    2.1.4. Языки программирования......................    7
    2.1.5. Средства разработки программ................    8
    2.1.6. Редактирование текстов......................    9
    2.1.7. Обработка текстов...........................   10
    2.1.8. Работа с терминалом.........................   10
    2.1.9. Электронная почта...........................   11
    2.1.10.Сетевые средства ОС ДЕМОС...................   11
    2.2. ОСНОВНЫЕ ФУНКЦИИ ЯДРА ОС ДЕМОС................   12
    2.2.1. Файловая система............................   12
    2.2.2. Файлы.......................................   12
    2.2.3. Справочники.................................   15
    2.2.4. Специальные файлы...........................   16
    2.2.5. Монтируемые файловые системы................   16
    2.2.6. Запросы ввода/вывода........................   17
    2.2.7. Управление процессами.......................   19

3.  СОСТАВ ДИСТРИБУТИВНЫХ НОСИТЕЛЕЙ....................   21

4.  СТРУКТУРА ДОКУМЕНТАЦИИ.............................   22

5.  РЕКОМЕНДАЦИИ ПО ОСВОЕНИЮ...........................   24




























                                                          25

