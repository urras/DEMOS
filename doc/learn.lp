
            дддд   ееееее   м     м    oooo     сссс
           д   д   е        мм   мм   o    o   с    с
          д    д   е        м м м м   o    o   с    с
          д    д   еееее    м  м  м   o    o   с
          д    д   е        м     м   o    o   с
          д    д   е        м     м   o    o   с    с
         дддддддд  ееееее   м     м    oooo     сссс



          демосдемосдемосдемосдемосдемосдемосдемосде
          емосдемосдемосдемосдемосдемосдемосдемосдем
          мо                                      мо
          ос                                      ос
          сд        ОПЕРАЦИОННАЯ СИСТЕМА          сд
          де                                      де
          ем               ДЕМОС                  ем
          мо                                      мо
          ос                                      ос
          сд                                      сд
          де             Версия 1.0               де
          ем                                      ем
          мо                                      мо
          сдемосдемосдемосдемосдемосдемосдемосдемосд
          демосдемосдемосдемосдемосдемосдемосдемосде







                  ОБУЧАЮЩАЯ СИСТЕМА LEARN







                 Долбин Алексей Николаевич












                       МОСКВА - 1985









                                                           1



   В данном документе описывается система автоматизированно-
го обучения работе с ОС ДЕМОС - learn.





























































2


     ВВЕДЕНИЕ


   Система learn является средством автоматизированного обу-
чения работе с ОС ДЕМОС и ее компонентами.

   Система состоит из двух основных  частей:  набора  курсов
обучения  и  программы, контролирующей действия обучаемого и
интерпретирующей тексты уроков.

   В ходе обучения, системой learn создается среда, схожая с
той,  в  которой  обучаемый будет в дальнейшем работать в ОС
ДЕМОС. Для создания этой  среды  learn  использует  средства
самой ОС ДЕМОС.

   В системе обучения имеется язык, на котором пишутся  уро-
ки,  составляющие  курс.  Этот  язык  описан  в данном руко-
водстве.

   Хотя существующие сейчас уроки имеют довольно  жесткую  и
стереотипную  форму,  программа-интерпретатор практически не
накладывает ограничения на составление уроков. Для  создания
более  сложных по структуре уроков и моделирования требуемой
среды обучения, можно расширять состав имеющихся  операторов
авторского  языка  (в  этом  смысле  авторский язык является
"открытым").

   Система обучения learn обладает следующими положительными
качествами:

-    развиваются навыки необходимые для работы с ЭВМ;

-    результат упражнения  немедленно  становится  известным
     обучаемому;

-    системой не  навязывается  темп  выполнения  заданий  -
     каждый  обучаемый  проходит  курс в присущем именно ему
     темпе;

-    обучаемому предоставлена возможность работать с  систе-
     мой  learn  в  удобное для него время, конечно, если он
     имеет доступ к машине;

-    любой урок может быть изменен  и  изменения  немедленно
     становятся доступны обучаемым;

-    упражнения, предлагаемые системой для исполнения, дела-
     ются непосредственно за терминалом.















                                                           3




                      1. ВЫЗОВ СИСТЕМЫ


   Для вызова системы learn необходимо набрать следующую ко-
манду:

learn [-справ.] [предм. [N_ур. [оц.]]]


   Параметры, взятые в квадратные скобки, могут быть  опуще-
ны,  достаточно  просто  набрать на экране терминала команду
"learn", после чего программа сама будет задавать уточняющие
вопросы.  Системой  выясняется  название  предмета обучения,
номер последнего урока, который Вы прошли, язык, на  котором
Вы  хотите  обучаться,  можно указать и оценку за пройденные
уроки.

   Если при вызове обучающей программы вместо номера урока в
качестве аргумента поставлен символ "-", то есть:

                       learn files -

то программа будет запрашивать, к какому следующему уроку Вы
хотите  перейти.  Для  этого  нужно в зависимости от того, в
каком режиме (русском или английском) Вы работаете, ответить
либо "перейти", либо "skip" и указать номер урока.

   В настоящее время имеются  курсы  обучения  по  следующим
темам:

    files - основные команды работы с файлами;

morefiles - продолжение изучения команд работы с файлами;

        C - изучение языка программирования Си. Курс постро-
            ен  на основе учебника: Керниган Б. В., Ритчи Д.
            М., Фьюэр А. Язык программирования Си, задачи по
            языку Си. Финансы и статистика, 1985. (готовится
            к печати).

   Набрав команду "пока" или "bye" Вы можете закончить сеанс
обучения.

   Параметр "-справ.", где справ. имя справочника, позволяет
проводить  обучение  предметам, курсы по которым расположены
не в стандартном справочнике системы learn.















4




           2. РУКОВОДСТВО ДЛЯ СОСТАВИТЕЛЯ КУРСОВ


   При написании курсов разработчик должен соблюдать  следу-
ющие правила:

-    курсы, написанные по-русски, должны находиться в  спра-
     вочнике имя которого начинается с малой буквы 'r';

-    текст урока должен содержаться в  файле,  имя  которого
     начинается с буквы 'L' и далее следует номер урока;

-    первым уроком в курсе должен быть урок с номером L0  со
     следующим текстом:

#next
 N-ур. 10

где N-ур. - номер первого урока курса, содержащий задание на
выполнение;

-    урок, являющийся последним в курсе, не должен содержать
     оператора #next.

   На рис. 1 приведена структура файлов, используемых  прог-
раммой learn. Штрихами обозначены файлы, звездочками - спра-
вочники.


































                                                           5


                  Структура файлов learn.

 *********
 ! learn !
 *********
     !     *********
     !-----! files !**
     !     ********* !
     !      !   ed   !
     !      **********
     !
     !     *******     ---------
     !-----! log !-----! files !--
     !     *******     --------- !
     !                  ! editor !
 *********              ----------
 ! play  !
 *********
     !    *********
     !----! pl52a !**
          ********* !
           ! pl101a !
           **********

                           Рис. 1

   Исходный справочник - learn. В нем содержатся справочники
с  текстами  имеющихся  курсов, текстовые файлы и программы,
используемые learn  при  работе.  Справочник  log,  содержит
файлы учета результатов прохода обучаемого по каждому курсу.
В справочнике play создаются на время сеанса справочники для
каждого  обучаемого,  где  размещаются файлы, необходимые на
время урока. По окончании сеанса обучения,  подобный  "игро-
вой" справочник полностью уничтожается.

   Составитель должен обеспечить наличие следующих  основных
элементов в уроке:

-    текста задания;

-    команд инициализации,  которые  должны  быть  выполнены
     прежде, чем обучаемый получит управление;

-    данных,  если  необходимо,  над  которыми  пользователь
     будет проводить требуемые действия;

-    команд оценки,  которые  должны  быть  выполнены  после
     того,  как  пользователь  закончит выполнение урока, то
     есть производящих оценку ответа пользователя;

-    если необходимо, запоминание оценки, выставляемой  обу-
     чаемому за урок;

-    список возможных последующих уроков.

   В каждом уроке должна быть команда, осуществляющая  пере-
дачу  управления обучаемому. Обучаемый может выполнять любые
команды ОС  ДЕМОС.  Режим  работы  обучаемого  заканчивается
после  набора  им слов "да", "нет", "готов", "ответ", "yes",
"no", "ready", "answer". С этого момента начинается проверка
работы  пользователя и выставляется оценка. Оценка выставля-


6

ется после выполнения каждого урока; она возрастает на  еди-
ницу после каждого правильного ответа, уменьшается на четыре
при неправильном ответе и на два, если первый ответ был неп-
равильным, а один из последующих - верным. Если урок пройден
удачно, то выбирается новый урок, если  нет  -  предлагается
вновь повторить задание текущего урока. Если обучаемый отка-
зывается, то системой выбирается другой урок. Принцип выбора
урока  следующий: из списка альтернативных уроков выбирается
тот, оценка для которого меньше всего отличается от  текущей
оценки обучаемого. Система никогда в одном сеансе не предла-
гает обучаемому выполнить дважды тот же урок.

   Присоздании курса обучения могут быть написаны структурно
сходные  уроки, но с разным содержательным наполнением. Т.е.
некоторые части разных уроков могут совпадать. Поэтому в ар-
гумент  оператора может быть сделана макроподстановка, заме-
няющая параметр на имя текущего курса.

   Например, если обучаемый находится в курсе  files,  то  в
этом случае оператор

                       #print %s/abc

трактуется следующим образом: параметр %s будет  заменен  на
имя справочника "../../files", содержашего файл abc, который
и будет выведен на экран терминала.

   В текст урока могут быть включены команды  интерпретатора
команд ОС, отрабатываемые при интерпретации текста урока.



































                                                           7




               3. ОПЕРАТОРЫ АВТОРСКОГО ЯЗЫКА


   Формат оператора авторского языка:

                   #имя_оператора [арг.]

В тексте урока оператор должен стоять в первой позиции.

   При описании операторов авторского языка  приняты  следу-
ющие соглашения. Квадратными скобками "[" и "]" обозначаются
необязательные аргументы команды.

#once arg
     Оператор, являющийся аргументом  #once,  выполняется  в
     уроке  только один раз. В качестве аргумента может выс-
     тупать либо оператор авторского языка, либо команда ОС.

#print [file]
     Приводит  к  печати  любого  текста,  следующего  далее
     вплоть  до  строки,  начинающейся с символа "#"; #print
     file печатает содержимое файла file;  команда  print  с
     аргументом  и  без него выполняется в уроке только один
     раз.

#create filename
     Создает файл с именем filename и копирует в него  любой
     следующий текст вплоть до символа "#".

#user
     Передает управление обучаемому; каждая строка,  которую
     он  набирает  на  терминале,  передается интерпретатору
     команд  для  выполнения.  Режим  "user"  заканчивается,
     когда  обучаемый  набирает   одно  из  сообщений: "да",
     "нет", "готов", "ответ" или их экиваленты на английском
     языке,  с  этого  момента  возобновляется интерпретация
     урока.

#copyin и #uncopyin
     Все, что обучаемый набирает на клавиатуре во время  ра-
     боты команды #copyin, копируется в файл с именем .copy.
     Это позволяет автору уроков проанализироать ответы обу-
     чаемого,  что помогает, в известной мере, при составле-
     нии уроков. По команде #uncopyin  прекращается  копиро-
     вание в файл .copy .

#copyout и #uncopyout
     Весь материал, выведенный на терминал между  этими  ко-
     мандами  любой  программой  при обработке текста урока,
     копируется в файл .ocopy .

#pipe и #unpipe
     Обычно, весь материал, вводимый  обучаемым,  и  команды
     авторского   языка   передаются  интерпретатору  команд
     построчно. Это неверно, если, например,  последователь-
     ность  команд предназначается конкретной компоненте ОС,
     и они должны быть переданы точно ей. Поэтому весь мате-
     риал  между  командами  pipe  и unpipe передается через
     программный канал по назначению. По команде #unpipe за-


8

     канчивается действие команды #pipe.

#cmp file1 file2
     Сранивает два файла на идентичность.

#match line
     Последняя строка, введенная обучаемым, сравнивается  со
     строкой line. В тексте урока может быть несколько строк
     с командой #match, что удобно при нескольких  возможных
     правильных ответах.

#bad line
     Производит сравнение с конкретным неправильным ответом.

   Отметим, что действительное сравнение ответа обучаемого с
ключом  происходит  только  при  выполнении двух операторов:
#match и #bad.

#succeed и #fail
     Выдают сообщения при успешном и неверном выполнении за-
     дания, основываясь на признаках, вырабатываемых при от-
     работке операторов #match или #bad.

#log [file]
     По этой команде в указанный файл заносится дата,  урок,
     имя  пользователя,  оценка  и сообщение об успешном или
     неудачном выполнении урока.  Если  у  этой  команды  не
     задан  аргумент,  то данные заносят в специальный спра-
     вочник log.

#next
номер_урока оценка
     Определяет, каким должен быть следующий урок при  полу-
     чении  данной  оценки. Строк с альтернативными номерами
     уроков и оценками может быть несколько.

   Рассмотрим, например, урок L0.1b из курса "файлы":
1  #print
   Для начала необходимо разобраться с несколькими  простыми
   командами.  Когда  ДЕМОС печатает Вам "$", то можно наби-
   рать команду. Например, если Вы печатаете "date", ЭВМ со-
   общит Вам текущий день и время. Если Вы увидели приглаше-
   ние "$" и напечатали "who", ДЕМОС сообщит Вам кто  сейчас
   работает в системе. В конце каждой командной строки необ-
   ходимо нажать клавишу ВК.

   Теперь попробуйте  команду  "date":  узнайте  сегодняшнее
   число  и после того как ЭВМ Вам ответит, наберите "готов"
   .
16 #copyin
17 #user
18 #uncopyin
19 grep date .copy >/dev/null
20 #bad day
   Предполагалось, что Вы наберете "date" (без кавычек). ЭВМ
   очень  неравнодушна  к синтаксическим ошибкам. Попробуйте
   еще разок.
25 #bad "date"
   Не печатайте этих кавычек. Попробуйте еще разок.
28 #bad time
   Команда time не сообщает Вам  время.  Попробуйте  команду
   date.


                                                           9

31 #log
32 #next
33 0.1c 5

   Этот текст традиционно состоит из двух связанных  частей:
об'яснения материала и формулировки задания по этому матери-
алу. В первой строке этого урока  стоит  оператор  "#print".
Поскольку параметр в команде отсутствует, на экран выводится
текст вплоть до строки, начинающейся с символа  '#'.  Далее,
на  строках  16  и  18,  стоят  операторы-скобки  #copyin  и
#uncopyin. В области действия этих операторов стоит оператор
#user  (строка 17). При его выполнении управление передается
обучаемому. Наличие скобок #copyin и #uncopyin,  приводит  к
тому, что все, что набирается обучаемым на клавиатуре, попа-
дает в файл ".copy". Из текста задания следует,  что  обуча-
емый  должен  для  правильного   ответа ввести команду date.
Поиск этой строки и производится командой grep в файле .copy
(строка 19). Если ее код завершения не аварийный, то перехо-
дят к следующему уроку. Результаты работы команды grep выво-
дятсяв фиктивный файл /dev/null. Далее, с помощью операторов
#bad на строках 20, 25, 28 , моделируется реакция на  каждый
из  трех возможных неправильных ответов на задание. Оператор
#log (строка 31) регистрирует успехи обучаемого, а  оператор
#next  при оценке близкой к 5, следующим уроком выберет урок
с номером 0.1c. Обратите внимание, что задается только номер
урока,  то  есть  имя  файла,  в  котором он содержится, без
первой буквы L.





































10



                         СОДЕРЖАНИЕ



ВВЕДЕНИЕ...............................................    3

1.  ВЫЗОВ СИСТЕМЫ......................................    4

2.  РУКОВОДСТВО ДЛЯ СОСТАВИТЕЛЯ КУРСОВ.................    5

3.  ОПЕРАТОРЫ АВТОРСКОГО ЯЗЫКА.........................    8



















































                                                          11

