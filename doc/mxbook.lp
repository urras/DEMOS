
                            5

                 8624247.00001-04 91 01-1





                       1. Введение


     Изготовление документации  с  помощью  ВЫЧИСЛИТЕЛЬНЫХ

МАШИН имеет ряд особенностей по сравнению с использованием

пишущих машинок.  Если эти особенности  являются  для  вас

преимуществами,  то  данный  документ  поможет вам освоить

`Систему подготовки документов mx'.


Особенности системы `mx' (в сравнении с пишущей  машинкой)

таковы:


     1.  Необходим доступ к   ВЫЧИСЛИТЕЛЬНОЙ  МАШИНЕ,  что

         можно приравнять к наличию пишущей машинки.


     2.  Требуются некоторые знания по работе за  термина-

         лом  которые  немного  больше умения включить ма-

         шинку (электрическую) и зарядить чистый лист.


     3.  Доступное вам печатающее устройство должно  удов-

         летворять запросы по набору шрифтов, скорости пе-

         чати и т.д.


     4.  При наборе текста  можно  допускать  произвольное

         число  ошибок.  Исправление их не требует перепе-

         чатывать весь лист.  При некотором  навыке  можно

         не  набирать  весь текст, а, например, воспользо-

         ваться возможностью запоминать текст  и  выдавать

         его  при  нажатии  одной (или двух кнопок) вместо

         повторного набора. Таких средств несколько.







                            6

                 8624247.00001-04 91 01-1



     5.  Текст набирается в произвольной форме без перено-

         сов слов и попыток самостоятельно выровнять текст

         (например, для красоты).


     6.  Текст перемешивается с указаниями о том, что сей-

         час  вы  набираете  - абзац, заголовок или что-то

         еще.  Указания эти занимают  несколько  процентов

         общего об'ема текста и очень просты длв изучения.


     7.  При наборе таблиц также пишется около 10  букв  -

         описателей  нужной  вам  формы таблицы после чего

         содержимое таблицы набирается в более-менее  сво-

         бодном формате.


     8.  Всяческая нумерация, вроде номеров разделов, ста-

         вится  автоматически.   Если вы когда-нибудь впи-

         шете еще одну главу, то нумерация страниц, разде-

         лов и корректность содержания сохранится.  Сохра-

         няются  и  внутренние  ссылки,  например,   текст

         `смотри главу 2 (стр.44)' преобразуется в `смотри

         главу 3 (стр.55)' без вашего вмешательства.


     9.  Список литературы выдается в алфавитном порядке и

         при  обновлении списка корректность ссылок сохра-

         няется.


     10. Документ выдается  в  форме,  мало  зависящей  от

         того,  как вы набрали свой текст.  Можно заказать

         произвольный размер  листа,  соответствие  нацио-








                            7

                 8624247.00001-04 91 01-1



         нальному  стандарту,  формат некоторого журнала и

         т.д.


     11. Число экземпляров документа ограничено  количест-

         вом  имеющейся  в вашем распоряжении бумаги и ре-

         сурсом печатающего устройства.


     12. Если вам придется делать `издание второе, исправ-

         ленное  и  дополненное', то набирать текст заново

         нет необходимости - достаточно внести изменения.


     13. Существует возможность заниматься различной ариф-

         метикой  (правда,  не  очень сложной).  Можно так

         составить  документ,  что  вам  придется   менять

         только  первую цифру, например, количество людей,

         выходящих на овощную базу.  Дальнейший текст типа

         `из которых 7 чел. - на погрузку, а остальные 5 -

         на разгрузку'  будет  корректироваться  автомати-

         чески.


     Существует еще множество чисто  компьютерных  преиму-

ществ  вроде  использования  уже когда-то кем-то набранных

документов, ведения всяческих электронных  делопроизводств

и т.д.  К описанию системы mx это не относится.


     Следует отметить, что не все эти  требования  `чисто'

реализованы  в  mx. Наиболее крупными недостатками системы

является существенная привязка к устройству вывода -  под-

разумевается АЦПУ *1), а также  возможность  использования

только  двухсимвольных внутренних имен и только со ссылкой


________________
1) А не полиграфическая машина


                            8

                 8624247.00001-04 91 01-1



назад.



























































                            9

                 8624247.00001-04 91 01-1




                 2. Подготовка документа


     Если при работе за пишущей машинкой вы уже предствля-

ете  окончательный вариант вашего текста, то при использо-

вании mx это не обязательно.  Обычной  практикой  является

метод `набрать все, что знаешь, распечатать и начать улуч-

шать'.


Например, если при  подготовке  некоторого  текста  забыты

какие-то  цифры,  то следует не задумываясь набирать текст

*1):


     At ___ o'clock the alarm-clock rings ...


а затем, распечатав предварительно сформатированный  вари-

ант и начав постепенно его исправлять, уточнить заодно не-

обходимые данные и исправить текст на:


     At six o'clock the alarm-clock rings ...


     Для замены символов `___' на `six'  требуется  нажать

несколько  клавиш.   Никаких помарок в окончательном доку-

менте не появится.















________________
1) Мы специально будем использовать  нерусские  слова  для
   более четкого выделения примеров.


                            10

                 8624247.00001-04 91 01-1



     2.1. Управляющие директивы


     Управляющие  директивы  располагаются  среди   вашего

текста  и  не  попадают на печать, а сообщают системе mx о

том, что вы хотите сделать с последующим (вашим)  текстом.

Например, для mx форма выдачи следующего текста


     Millions of people in all
     parts of the world are taking
     great
     interest
     in
     Marxizm-Leninizm
     nowadays.


неочевидна.  Однако поставив перед текстом директиву  `pp'

в виде


     .pp
     Millions of people in all
     .....


мы однозначно укажем, что этот текст  является  абзацем  и

при форматировании он примет следующий вид:


          Millions of people
     in  all  parts  of  the
     world are taking  great
     interest   in  Marxizm-
     Leninizm nowadays.


Возникает вопрос, откуда mx узнает об окончании  фрагмента

(в данном случае абзаца)?  В большинстве случаев от следу-

ющей директивы:


     .pp
     Marxist doctrine
     has changed from
     .....
     .pp





                            11

                 8624247.00001-04 91 01-1



     Transformations
     have taken place under
     .....
     .pp
     The theory,
     created more than a century ago
     .....


Следует заметить, что текст набирается прижатым  к  левому

краю  и не содержит лишних пробелов.  Пример неправильного

набора имеет вид *1):


     Dialectical     and     historical
         materialism  are organic parts
             ....


Кроме того, в набираемом тексте не следует делать  перено-

сов слов.  и без особых целей оставлять пустые строки.


     Хорошим стилем является набор в виде недлинных  строк

и  переход  к новой строке в конце каждого предложения, то

есть, обычно, после знаков `.,;?!'.


Заметим, что mx не понимает смысла сочетаний типа:


     Gulliver was ( not ) set free , but


где сочетания `(', `not', `)', `free', `,' и `but' тракту-

ются как отдельные слова и могут привести к выводу `)' или

`,'  с начала новой строки.  Правильной конструкцией явля-

ется:


     Gulliver was (not) set free, but ...




________________
1) На самом деле, пустое место просто передается в  выход-
   ной  текст.   Поскольку  мы набираем фрагмент типа `аб-
   зац', который обычно не содержит пустых мест, то лишние
   пробелы мы считаем ошибкой.


                            12

                 8624247.00001-04 91 01-1



     Многие директивы системы mx могут иметь так  называе-

мые  аргументы, то есть дополнительные указания о том, как

выполнить директиву.   Примером  может  служить  директива

пропуска пустых строк `sp'.  Простой вызов


     .sp


приводит к выводу 1 пустой строки, в то время как вызов


     .sp 5


выведет 5 пустых строк.


     Предельным случаем является реакция директивы  только

на свой аргумент. Например, директива


     .lb LB


ничего не изменяет в форме выводимого текста, а только за-

поминает  номер текущей страницы под именем `LB' для даль-

нейших ссылок.



     2.2. Директивы абзацев


     Простейшим  фрагментом  документа  является  `Абзац'.

Простейшим  абзацем является прямоугольный абзац без крас-

ной строки.  Он называется `lp' и на такой входной текст


     .lp
     As a whole,
     historical materialism can
     be defined as
     a philosophical and sociological
     science concernedwith the
     most general laws and






                            13

                 8624247.00001-04 91 01-1



     motive forces of
     the development of society.


даст следующий результат:


     As a whole,  historical  materialism
     can  be  defined  as a philosophical
     and sociological science  concerned-
     with   the  most  general  laws  and
     motive forces of the development  of
     society.


Lp абзац (для простоты мы будем пользоваться  термином  l-

абзац)  может  иметь  аргумент  -  размер отступа (красной

строки).  Предыдущий пример с  аргументом  7  у  директивы

`lp' дает результат:


            As a  whole,  historical  ma-
     terialism can be defined as a philo-
     sophical  and  sociological  science
     concernedwith  the most general laws
     and motive forces of the development
     of society.


Существует абзац `pp' делающий этот отступ на зависящую от

ширины листа величину.  Он является сокращенной формой `lp

N'.  Рассмотрим вопрос, почему p-абзац удобней, чем,  нап-

ример, `lp 5'.


     В системе mx имеется  механизм  автоматической  наст-

ройки на форму выводимого документа.  Одним из настраиваы-

емых параметров является `стандартный левый отступ' (назы-

ваемый  `h'),  то есть то количество позиций, которое надо

отступить слева при отсутствии других указаний.   Примером

использования `h' как-раз и будет p-абзац.








                            14

                 8624247.00001-04 91 01-1



     Итак,  откуда  берется  `стандартный  левый  отступ'.

Нетрудно  видеть, что при имеющейся в mx возможности полу-

чать документ с произвольным размером листа задать некото-

рое  конкретное значение было бы слишком жестоко.  Для до-

кумента шириной в 16 символов (карманный справочник)  отс-

туп красной строки в 9 будет выглядеть не совсем красиво.


     Для борьбы с подобными проблемами mx, ориентируясь на

ту  информацию,  которую вы ему сообщаете о формате выход-

ного документа, вычисляет по некоторому детерминированному

алгоритму  все недостающие параметры.  Например, имея ука-

зание о выдаче документа с шириной листа  60  позиций  mx,

исходя из этой цифры, установит `h' равным 5.


     Этот прием используется только для облегчения  жизни.

Если  вас  не устраивает выбираемое mx значение некоторого

параметра, вам предоставляется возможность установить  его

на свой вкус.


К автоматически (с возможностью принудительной отмены) ус-

танавливаемым параметрам относятся:


          - вывод заголовков с нового листа;

          - вывод оглавления (в начале или в  конце  доку-

            мента);

          - различие четных и нечетных страниц документа;

          - экономия места на сносках в конце листа;

          - стандартный левый отступ;

          - наличие линии отреза на каждом листе (для  вы-

            вода маленьких книжечек);





                            15

                 8624247.00001-04 91 01-1



          - ширина листа вывода;

          - длина листа вывода;

          - вывод через строку;

          - стандартный пропуск строки;

          - левый,  центристский   или   лево-центристский

            стиль заголовков;

          - и некоторые другие.


     Иногда вас принудительно лишают  возможности  выбора.

Примером  такого  случая  является форматирование в режиме

ЕСПД, где стандарт ограничивает фантазию.


Вернемся к существующим в mx директивам абзацев.


     Кроме l- и p- абзацев всеми легко воспринимается  аб-

зац `qp', который выводит свой текст с отступом `h' от ле-

вого и правого края, например, набранный вами фрагмент


     .lp
     On the other hand,
     it is a higher form
     of the social consciousness.
     .qp
     Ideology is a theoretical
     consciousness of the self
     or the system of
     ideas ....


приведет к выводу следующего текста:


     On the other  hand,  it  is  a
     higher   form  of  the  social
     consciousness.
               Ideology is  a
           theoretical  cons-
           ciousness  of  the
           self or the system
           of ideas ....






                            16

                 8624247.00001-04 91 01-1



Q-абзац может иметь аргументы `+' или `-', в ответ на  что

перед  текстом  выводится слово `ПРИМЕЧАНИЕ' либо не дела-

ется абзацный отступ.


     Более сложными в изучении, но и  обладающим  большими

возможностями,  являются i- и j-абзацы.  Они происходят от

популярного абзаца-перечисления и состоят из  трех  компо-

нент:


     - ключа

     - значка `тире' и

     - текста.


     Текст, как и во всех прочих абзацах, набирается начи-

ная со следующей строки.  Значок `тире' появляется при ис-

пользовании j-абзаца и не появляется в  i-абзаце.   Меткой

является  аргумент  директивы, что можно понять из следую-

щего примера:


     .jp Activity
     (of man, class, or society),
     purposeful changing of
     of the world.
     .jp "Aesthetic consociousness"
     views of art prevailing
     in a given society.
     .jp Art
     reproduction of reality
     in artistic terms.
     .jp Basis
     a totality of specific
     historical production
     relations, ...


который приводит к следующим результатам:


     Activity
             - (of  man,  class,  or  so-





                            17

                 8624247.00001-04 91 01-1



               ciety),  purposeful chang-
               ing of of the world.
     Aesthetic consociousness
             - views of art prevailing in
               a given society.
     Art     - reproduction of reality in
               artistic terms.
     Basis   - a  totality  of   specific
               historical  production re-
               lations, ...


Ключами перечисления (которых может и не быть) здесь явля-

ются слова `Activity', `Aesthetic consociousness', `Art' и

`Basis'.  Поскольку расстояние от левого края  до  символа

`тире'  берется  равным  `стандартному левому отступу', то

два ключа (`Activity' и `Aesthetic consociousness') не по-

местились. Они напечатались на отдельной строке *1).  Если

при первом вызове директивы `jp' указать второй аргумент -

нужный отступ в виде


     .jp Activity 10


то результаты будут несколько лучше:


     Activity  - (of man, class,  or  so-
                 ciety),       purposeful
                 changing   of   of   the
                 world.
     Aesthetic consociousness
               - views of art  prevailing
                 in a given society.
     Art       - reproduction of  reality
                 in artistic terms.
     Basis     - a totality  of  specific
                 historical    production
                 relations,


Заметим, что нужный вам отступ указывается только в первой

директиве  из  группы.   Возврат к стандартному происходит




________________
1) Ну что еще можно здесь такого придумать?


                            18

                 8624247.00001-04 91 01-1



при встрече директивы `pp' и еще некоторых, то есть  когда

mx решит, что данное перечисление вы закончили.


При использовании директив `ip' в данном примере все будет

аналогично за исключением знаков `тире' - они исчезнут.


     Следует отметить тот факт, что в исходном тексте при-

мера  ключ  `Aesthetic consociousness' заключен в кавычки.

Заключение в кавычки аргумента, содержащего пробелы  необ-

ходимо  для  того, чтобы mx отличал ключ и следующий аргу-

мент - отступ.  Типичной ошибкой является вызов:


     .jp Aesthetic consociousness


или


     .jp Aesthetic consociousness 10


В обоих случаях mx  попытается  установить  отступ  равный

`consociousness', последствия чего непредсказуемы.


Обратной стороной этой ошибки  является  случай  с  пустым

ключом и заказом отступа:


     .jp 10


Пустой аргумент задается (для данного примера) в форме


     .jp " " 10


а кавычки в аргументах удваиваются:


     .jp "Using the ""mx"" system" 40







                            19

                 8624247.00001-04 91 01-1



Правила эти несколько громоздки, но вроде  бы  вполне  ес-

тественно  заключать в кавычки то, что является единым це-

лым.  В дальнейшем мы рассмотрим еще много  разновидностей

директив  с  аргументами.  Все рассмотренные правила будут

справедливы и для них.


     Директива `ba [ARG]' отрабатывает  вложенность  абза-

цев.  Ее аргументом может быть:


     N   - увеличить вложенность на N (полож.число)  пози-

           ций от текущего;

     +   - увеличить вложенность на `h' позиций;

     ++  - увеличить вложенность на `2h'  позиций  (но  не

           дважды увеличить на `h');

         - (без аргумента) - осуществляется возврат в пре-

           дыдущее состояние;

     -   - осуществляется возврат в предыдущее состояние;

     0   - глобальный возврат к левому краю.


Допускается трехкратное вложение директив ba.


     Назначением этой директивы является управление  левым

отступом  для  получения текста типа `ступенька'.  Если мы

обозначим текст символами `...',  то  пример  соответствия

директив `ba' и получаемых результатов будет иметь вид:


----------------------------------------
:             .........................:
:             .........................:
:             .........................:
:.ba +            .....................:
:                 .....................:
:                 .....................:
:.ba -        .........................:





                            20

                 8624247.00001-04 91 01-1



:             .........................:
:             .........................:
:.ba +            .....................:
:                 .....................:
:                 .....................:
:.ba +                .................:
:                     .................:
:                     .................:
:.ba +                     ............:
:                          ............:
:                          ............:
:.ba                  .................:
:                     .................:
:                     .................:
:.ba 0        .........................:
:             .........................:
:             .........................:
:--------------------------------------:


Такое сочетание чаще всего используется для вложенных  пе-

речислений.


     Близким по идее к i-абзацу является  n-абзац,  всегда

печатающий свой номер, например текст:


     .np
     A transitional period starting
     with socialist revolution in ...
     .np
     The next stage, associated with
     the completion of socialist ...
     .np
     The next stage is related to the
     phase of developed socialist
     society.


дает результат в виде:


     1.  A transitional  period  starting
         with socialist revolution in ...
     2.  The next stage, associated  with
         the completion of socialist ...
     3.  The next stage is related to the
         phase of developed socialist so-
         ciety.








                            21

                 8624247.00001-04 91 01-1



     Существует набор абзацев  аналогичный  рассмотренному

нами  (l,p,q,i,j,n),  но  имеющий  вторую букву `q' вместо

`p'.  Все они ведут себя аналогично своим  тезкам,  но  не

пропускают  строку, что обычно выполняется перед каждым p-

абзацем.



     2.3. Метки


     В системе mx существует возможность запоминать  неко-

торую  информацию для дальнейшего использования.  Простей-

шим примером является директива `lb' - запомнить.  Если вы

в некотором месте документа вставите вызов:


     .lb AA


то в дальнейшем тексте вы можете ссылаться  на  номер  той

страницы  документа, куда попадет текст, находящийся рядом

с директивой `lb'.


     Проще говоря, если вставить такую директиву среди аб-

заца, то ссылка на `\*(AA' или `\n(AA' заменяется на номер

того листа, где будет находиться текст помеченного абзаца.

Кроме  `lb'  еще  многие  директивы системы mx могут иметь

метку для запоминания чего-либо.   Обычно,  особенное  для

директивы  доступно для ссылок как `\*(AA',  а номер стра-

ницы доступен как `\n(AA'.  Поскольку в `r' директиве  ни-

чего  особенного нет, то по обоим ссылкам она выдает номер

страницы.









                            22

                 8624247.00001-04 91 01-1



     В качестве метки можно  использовать  сочетания  двух

символов, один из которых есть заглавная английская буква,

например: AA, AB, A0, A1, 1A, 0B, Aa, HO, OH, ]H,  H{,  H&

вообще без особой мысли символов `*', `\' и `('.  Имя `(\'

будет неудачным.


     Из рассмотренных нами выше директив метку можно зада-

вать в первом аргументе n-абзаца.  Если бы я набрал в при-

мере на стр.20 в виде:


     .np
     A transitional period starting
     with socialist revolution in ...
     .np RR
     The next stage, associated with
     the completion of socialist ...
     .np
     The next stage is related to the
     phase of developed socialist
     society.


то на него можно было бы сослаться как  на  `смотри  пункт

\*(RR на стр.\n(RR', что в сформатированном тексте приняло

бы вид `смотри пункт 2 на стр.20'.



     2.4. Сноски



     Пакет mx позволяет создавать сноски  *1),  которые  в

исходном тексте заключаются в пару директив `f+' и `f-':


     'f+
     текст сноски
     'f-


или в короткой форме



________________
1) Вроде этой.


                            23

                 8624247.00001-04 91 01-1



     'f= текст_сноски


(в `f=' с учетом правил работы с аргументами).



     2.5. Блоки


     Мы рассмотрели подготовку непрерывного текста из  аб-

зацев.   А как набирать другие фрагменты?  Простейшим слу-

чаем `неабзаца' является `блок' - выводимая без  изменения

часть текста.  Обычно блок используется для получения при-

меров внутри абзаца или между ними:


     .pp
     Perform symmetric
     factorization of the matrix
     and may be called
     .(
     work=0
     ip=file_of_matrix
     call dapfs(work,ip,eop)
     .)
     if the normal equations followed.
     The next call may be usage too:
     .(
     work=0
     ip=file_of_LAST_matrix
     call dapfs(work,ip,eop)
     .)
     .pp
     The matrix ...


Обратите внимание на следующие особенности:


     - первый блок  прерывает  абзац,  но  после  закрытия

       блока  директива  абзаца отсутствует - блок возвра-

       щает ту обстановку, которую прервал.











                            24

                 8624247.00001-04 91 01-1



     - после второго блока используется директива `pp', но

       причиной этому служит просто желание получить абзац

       с красной строки.


     - внутри блока не содержится абзацев.


Рассмотренный пример блока дает следующие результаты:


         Perform symmetric  factorization
     of the matrix and may be called

         work=0
         ip=file_of_matrix
         call dapfs(work,ip,eop)

     if the  normal  equations  followed.
     The next call may be usage too:

         work=0
         ip=file_of_LAST_matrix
         call dapfs(work,ip,eop)

         The matrix ...


          Самой страшной ошибкой в системе  mx  явля-

     ется незакрытие блока.


     Для облегчения набора существует директива  блока  из

одной строки. Она называется `|' и вызывается в виде:


     ... of the matrix and may be called
     .| work=0
     if the  normal  equations  followed.


Заметим, что текст блока `|' передается в  виде  аргумента

и, следовательно, на него распространяются все ограничения

(см. стр. 18).  Это легко перебороть, используя  в  сомни-

тельных ситуациях








                            25

                 8624247.00001-04 91 01-1



     .(
     if the "normal" equations followed.
     .)


вместо


     .| if the "normal" equations followed.


     Обычно блоки выводятся с  учетом  отступа,  заданного

директивой `ba' плюс стандартный левый отступ.  Для дирек-

тив `(' - `)' этим отступом можно управлять:


     .( l   - выводит текст по текущей базе;

     .( L   - строго по левому краю листа.


     Обычно многострочные блоки могут разрываться при  пе-

реходе  с  листа  на  лист.   Можно заказать непрерывность

блока, закрыв его директивой `.) c'.  Например, в  резуль-

тате обработки данного текста:


     .lp
     W. Keller and Katе.
     .ba +
     .pp
     KELLER: She is only
     a paid teacher!
     Now i want this to be clear.
     .( L
     (He goes off left.
     James turns to look at Kate.)
     .) c
     .pp
     JAMES: Will you?
     .pp
     KATE: To your father's face?
     .lp
     James and Katе.


результат будет иметь следующий вид:








                            26

                 8624247.00001-04 91 01-1



     W. Keller and Katе.

             KELLER: She is only  a  paid
         teacher!   Now i want this to be
         clear.

     (He goes off left.
     James turns to look at Kate.)

             JAMES: Will you?

             KATE: To your father's face?

     James and Katе.


     Следует иметь ввиду некоторую порочность непрерывного

блока - он может оставить много пустого места на листе.  В

этом смысле блоки  лучше  не  снабжить  этим  статусом,  а

вместо этого использовать возможность в момент запуска ко-

манды mx заказать `неотрывность от блока одной строки'  (о

чем  разговор  будет  особо).   Разорванный  не по крайней

строке блок выглядит неплохо.


     Существует еще одна разновидность блока -  плавающий.

Суть его состоит в запоминании своего текста без изменений

и вывод его с  начала  очередного  листа.   В  отличии  от

просто блока, остаток текущего листа заполняется текстом.


Обращение к плавающему блоку имеет вид:


     .pp
     and, for example,
     the present perfect tense:
     .{
     ---------------------------
     | I  | have | looked from |
     | He | have | looked from |
     | .. | .... | ........... |
     ---------------------------
     .}
     may be using ...






                            27

                 8624247.00001-04 91 01-1



Такой  вызов  таит  существенную  опасность:  после   слов

`tense'  сразу  появится слово `may', а собственно таблица

будет выведена с нового листа.  Это  может  нарушить  суть

повествования.   В  таких  случаях правильнее использовать

такую конструкцию:


     .{
     .th "The P.P. Tense" TB
     ---------------------------
     | I  | have | looked from |
     | He | have | looked from |
     | .. | .... | ........... |
     ---------------------------
     .}
     .pp
     ****
     .pp
     and, for example,
     the present perfect tense
     (see tabl. \*(TH page \n(TB)
     may be using ...


где директива `th' описывает название  таблицы,  а  `****'

обозначают  несколько  страниц  текста.   При таком вызове

таблица попадет в плавающий блок, запомнится,  продолжится

вывод текста `****', с начала очередного листа таблица на-

печатается и при выводе фразы


     (see tabl. \*(TH page \n(TB)


вместо `TH' подставятся соответствующие номера.


Аналогичный способ применим и к рисункам, то есть к  тому,

что можно нарисовать на обычном АЦПУ:












                            28

                 8624247.00001-04 91 01-1



     .{
             root
           +--+---+
          usr    bin
        +--+--+
       lib    bin
     .pf "The DEMOS file system" FI
     .}


Следует отметить, что описанный прием несколько расходится

с  традицией  запихивать  все таблицы в приложение.  Кроме

того, не существует способа заставить mx вывести плавающий

блок  за лист до ссылки на него.  Это приводит к необходи-

мости описывать плавающий блок за несколько листов до пер-

вой ссылки (с учетом возможной очереди плавающих блоков).



     2.6. Заголовки


     В пакете mx существует понятие заголовок без номера и

с номером (четырех уровней нумерации).  Называются они со-

ответственно `s0', `s1'...`s4'.  Вызов их имеет форму


     's1 "Название" LB


см. стр.21 (где толкуется про использование меток), а сим-

вол  кавычки  используется вместо символа точка просто для

разнообразия.  Они эквивалентны.


     К названию применимы все  ограничения  на  аргументы.

Для длинных названий можно применять маскирование перевода

строки символом `обратная косая'.   Оглавление  собирается

автоматически обычно в конце документа *1).  Примеры:



________________
1) Как  и  в  других случаях, mx пытается подстроиться под
   ваш документ.  При решении о месте и стиле  печати  ог-
   лавления учитывается около 10 параметров.


                            29

                 8624247.00001-04 91 01-1



     's0 "PREFACE" PR
     's1 "INTRODUCTION"
     's2 "Little history" HI
     's2 "The file system"


При выводе в тексте документа заголовки располагаются при-

жатыми  к левому краю страницы, что вызывает много нарека-

ний, суть которых сводится к тому, что заголовок надо рас-

полагать  по  центру.   Существует даже левоцентристское и

центристское течение.


     Для удовлетворения этого желания все заголовки в  ис-

ходном  тексте набираются единообразно, а форма выдачи оп-

ределяется в момент форматирования  (о  чем  мы  поговорим

немного позже).


     Близким к понятию заголовка  являются  понятия  `раз-

дел',  `подраздел',  `пункт'  и `подпункт'.  По своей сути

раздел есть заголовок первого уровня нумерации  со  сбором

оглавления,  а  подпункт - нумерованный p-абзац четвертого

уровня вложенности без сбора оглавления.  Куда отнести два

других ясно не совсем.


     Поскольку обнаружилась большая категория людей, кото-

рым требуется только эти четыре конструкции  *1),  то  для

расширения контингента пользователей именно на этот случай

в пакет mx включены директивы `z[12345]' .


     Директивы   `z[12345]'   используются   совместно   с

`s[01234]'  и  отличаются  тем,  что текст набирается не в




________________
1) Непонятно  почему, но сюда попали все разработчики бло-
   ков CAMAC.


                            30

                 8624247.00001-04 91 01-1



виде аргументов, а на следующих строках  (поскольку  в  z-

конструкциях тексту подразумевается побольше).


Правило сочетания следующее.  Если произнести фразу:


     `раздел' требует сбора  оглавления,  а  `подраз-

     дел', `пункт' и `подпункт' нет,


то это будет соответствовать `s1' и `z[2345]', а фраза:


     `раздел' и `подраздел' требуют сбора оглавления,

     а `пункт' и `подпункт' нет,


то это будет соответствовать `s[12]' и  `z[345]'.   И  так

далее.


Пример:


     .s2 "The shell"
     .z3 LB
     The shell is a command language.
     .z3
     So (see \*(LB) it can be using
     to execute some commands.



     2.7. Разное


     В системе mx имеется возможность  проводить  горизон-

тальные линии, которые можно использовать для отчеркивания

рисунков и т.д.  Этим занимается директива


     .hl


при этом линия проводится от текущей базы до  края  листа,

вызов






                            31

                 8624247.00001-04 91 01-1



     .hl 5


проводит линию от 5-й позиции слева до края листа, а вызов


     .hl 5 15


проводит линию от 5-й до 15-й позиции слева.


















































                            32

                 8624247.00001-04 91 01-1




                         3. Вызов


     После того, как вы набрали файлы  со  своим  исходным

текстом,  можно  начать  собственно  форматирование.   Для

этого надо набрать на вашем терминале команду:


     mx файлы


и, после  некоторой  паузы,  вы  увидите  сформатированный

текст.  Более сложные действия, например, запись результа-

тов в некоторый файл, требуют некоторого изучения [3] *1).


     Команда mx понимает ряд специальных указаний  о  том,

как  должен выглядеть сформатированный документ.  Указания

эти задаются в командной строке в форме ключей, о  есть  в

виде  букв  и слов, обычно начинающихся со знака `минус' и

расположенных перед именами ваших файлов, например:


     mx -l 66 -M -b -v 1 files


Рассмотрим возможные ключи:


     -a text  вставить `text' перед началом первого  файла
              исходного текста документа;

     -b       печатать заголовки уровня  0  и  1  с  новой
              страницы;

     -c       отменить вывод оглавления;

     -d       печатать внутренние метки пользователя  (для
              отладки);

     -e       различать четные и нечетные листы документа;

     -f       экономить на сносках одну строку;


________________
1) Можно воспользоваться тем, что система  ДЕМОС  является
   многопользовательской,  и  попросить работающего за со-
   седним терминалом человека показать вам нужную команду.


                            33

                 8624247.00001-04 91 01-1



     -g       печатать регистрационный номер документа;

     -h H     устанавить стандартный левый отступ в `H';

     -i file  файл содержит макроопределения пользователя;

     -j       перенести оглавление в начало документа;

     -k       провести линию отреза над каждым листом;

     -l LL    установить ширину листа в `LL' символов,  по
              умолчанию ширина листа равна 78;

     -p PP    установить длину  листа  в  `PP'  строк,  по
              умолчанию длина равна 23;

     -q       установить режим вывода через строку;

     -s       установить  режим  короткого  нижнего   поля
              листа;

     -t T     задать размер табуляции;

     -u       запретить отрыв от абзацев и блоков  одиноч-
              ных строк;

     -v V     установить  число  стандартно   пропускаемых
              строк в `V';

     -s0p     печатать заголовки уровня 0 с абзаца;

     -s0c     печататьзаголовки уровня 0  в  центре  стра-
              ницы;

     -s1p     печатать заголовки уровня 1 с абзаца;

     -s1c     печатать заголовки уровня 1 в  центре  стра-
              ницы;

     -s2p     печатать заголовки уровня 2 и ниже с абзаца;

     -s2c     печатать заголовки уровня 2 и ниже в  центре
              страницы;

     -su      подчеркивать заголовки всех уровней;

     -N       программой форматирования будет nroff;

     -P       программой форматирования будет pif;

     -M       прислать письмо (mail) в конце  форматирова-
              ния;

     -        установить стандартные  параметры  для  АЦПУ
              (-e -l 60 -p 66 -v 1);





                            34

                 8624247.00001-04 91 01-1



     =        установить стандартные параметры для АЦПУ  с
              листом 90 строк (-e -l 60 -p 90 -q -v 1);

     +        установить стандартные параметры для  терми-
              нала  и  вывода  через фильтр `pr -t -2 -w78
              -l23';

     -man     подключить пакет man  вместо  mx.   Работают
              ключи:  -e, -h, -l, -p, -t, -v, -m.  Ключ -s
              приводит к игнорированию директивы `so';

     -ES      установить режим ЕСПД;

     -es      установить режим ЕСПД, но вопреки стандарту,
              различать четные и нечетные листы (трактовка
              ЕСПД популярная, но ошибочная).












































                            35

                 8624247.00001-04 91 01-1




               4. Дополнительная информация


     Достаточно частой ситуацией является проблема  приду-

мывания новой метки для использования в пакете, что услож-

няется возможностью придумать оригинальное имя  много  раз

подряд.   Один из авторов, например, всегда предлагает имя

`ZZ'.  Для решения этой проблемы существует команда  ДЕМОС

`mxlabs', которая при вызове


     mxlabs файлы


сообщит вам, сколько раз какую метку вы использовали.  Со-

общение о том, что метка встретилась дважды должна воспри-

ниматься как совет разнести совпадающие имена.



































                            36

                 8624247.00001-04 91 01-1




                        ПРИЛОЖЕНИЕ




                 1. Директивы системы pif



  Табл.1. Пример таблицы без горизонтальной сетки.


____________________________________________________________

|                 Pif summary instructions                 |

|_________|______________________________________|_________|

|Inst.    |  Full name.                          |  Append.|

|_________|______________________________________|_________|

|ad       |  adjust output                       |         |

|af R c   |  assign format                       |         |

|am xx yy |  append to a macro                   |         |

|as xx str|  append string                       |         |

|bd F N   |  embolden font                       |         |

|bd S F N |  embolden spec. font                 |         |

|bp +-N   |  eject current page                  |         |

|br       |  break                               |         |

|c2       |  set nonbreak contr. char            |         |

|cc       |  set contr. char                     |         |

|ce N     |  center N lines                      |         |

|ch xx N  |  change trap location                |         |

|cs F N M |  constant character space            |         |

|cu N     |  contin. underline                   |  (ul)   |

|da xx    |  divert and append                   |         |

|de xx yy |  define macro xx                     |         |






                            37

                 8624247.00001-04 91 01-1



|di xx    |  divert output to xx                 |         |

|ds xx str|  define a string xx                  |         |

|dt N xx  |  set the diversion trap              |         |

|ec c     |  set escape character                |         |

|el anyth |  else part of if-else                |         |

|em xx    |  end macro is xx                     |         |

|eo       |  turn off escape char mechanism      |         |

|ev N     |  puth down envinronment              |         |

|ex       |  exit                                |         |

|fc a b   |  set field delimiter a and pad char b|         |

|fi       |  fill output lines                   |         |

|fl       |  flash buffers                       |         |

|fp N F   |  font F mounted on position N        |         |

|ft F     |  change to font F                    |   ...|

|hc c     |  hyph indicater                      |         |

|hw ...   |  exceptions words                    |         |

|hy N     |  hyph mode                           |         |

|ie       |  if-else block                       |         |

|if       |  if block                            |         |

|ig yy    |  ignore text till call of yy         |         |

|in       |  indent                              |         |

|it N xx  |  set an input-line count trap        |         |

|_________|______________________________________|_________|















                            38

                 8624247.00001-04 91 01-1



                      Список таблиц


1. Пример таблицы без горизонтальной сетки..............36
























































                            39

                 8624247.00001-04 91 01-1



                        Литература


1.  Аншуков С.А., Бардин В.В., Руднев  А.П,  Черногрядская
    Н.Ю. Руководство программиста. Документация ОС ДЕМОС.
2.  Бардин В.В. Редактор текстов ed. Документация  ОС  ДЕ-
    МОС.
3.  Бардин В.В., Черногрядская Н.Ю. Командный язык  shell.
    Документация ОС ДЕМОС.
4.  Долбин А.Н. Редактор текстов sed. Документация ОС  ДЕ-
    МОС.
5.  Паремский М.В. и др. Описание применения. Документация
    ОС ДЕМОС.
6.  Руднев А.П. Полиэкранный редактор текстов.  Документа-
    ция ОС ДЕМОС.
7.  Усиков С.А. Руководство оператора. Документация ОС ДЕ-
    МОС.
8.  Школьников Ю.В.  Препроцессор  для  подготовки  таблиц
    Tbl. Документация ОС ДЕМОС.
9.  Школьников Ю.В. Система подготовки  документации  Pif.
    Документация ОС ДЕМОС.
10. Feldman. S.I. Make - A Program for Maintaining Comput-
    er Programs. UNIX Programmer's Manual vol.2.
11. Kernighan B.W. Cherry. L.L. A System  for  Typesetting
    Mathematics.    May    1974.   revised   April   1977.
    Comm.Assoc.Comp.Mach. vol.18 March
12. Kernighan. B.W. A TROFF  Tutorial.  UNIX  Programmer's
    Manual vol.2.
13. Ossanna.  J.F.   NROFF/TROFF   User's   Manual.   UNIX
    Programmer's Manual vol.2.






























                            40

                 8624247.00001-04 91 01-1































































       ОРДЕНА ЛЕНИНА И ОРДЕНА ОКТЯБРЬСКОЙ РЕВОЛЮЦИИ
        ИНСТИТУТ АТОМНОЙ ЭНЕРГИИ им. И.В.КУРЧАТОВА

           Отделение Информатики и Электроники
Утвержден
8624247.00001-04 91 01-1-ЛУ







     ДИАЛОГОВАЯ ЕДИНАЯ МОБИЛЬНАЯ ОПЕРАЦИОННАЯ СИСТЕМА

                          ДЕМОС







                  MX - КРАТКОЕ ВВЕДЕНИЕ

                 Руководство пользователя

                        Листов 40






























                           1986
                                                    Литера






                            2

                 8624247.00001-04 91 01-1



                        АННОТАЦИЯ


     В данном документе содержится описание системы форма-

тирования документации.


     Документ содержит листов - 40, разделов - 1, рисунков

0,  таблиц - 1, библиографию 13 наименований и список тер-

минов из 0 наименований.















































                            3

                 8624247.00001-04 91 01-1



                        СОДЕРЖАНИЕ



 1. Введение..........................................   5

 2. Подготовка документа..............................   9
    2.1.  Управляющие директивы.......................  10
    2.2.  Директивы абзацев...........................  12
    2.3.  Метки.......................................  21
    2.4.  Сноски......................................  22
    2.5.  Блоки.......................................  23
    2.6.  Заголовки...................................  28
    2.7.  Разное......................................  30

 3. Вызов.............................................  32

 4. Дополнительная информация.........................  35

ПРИЛОЖЕНИЕ............................................  36

 1. Директивы системы pif.............................  36






































                            4

                 8624247.00001-04 91 01-1






























































