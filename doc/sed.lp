
            дддд   ееееее   м     м    oooo     сссс
           д   д   е        мм   мм   o    o   с    с
          д    д   е        м м м м   o    o   с    с
          д    д   еееее    м  м  м   o    o   с
          д    д   е        м     м   o    o   с
          д    д   е        м     м   o    o   с    с
         дддддддд  ееееее   м     м    oooo     сссс



          демосдемосдемосдемосдемосдемосдемосдемосде
          емосдемосдемосдемосдемосдемосдемосдемосдем
          мо                                      мо
          ос                                      ос
          сд        ОПЕРАЦИОННАЯ СИСТЕМА          сд
          де                                      де
          ем               ДЕМОС                  ем
          мо                                      мо
          ос                                      ос
          сд                                      сд
          де             Версия 1.0               де
          ем                                      ем
          мо                                      мо
          сдемосдемосдемосдемосдемосдемосдемосдемосд
          демосдемосдемосдемосдемосдемосдемосдемосде







                    РЕДАКТОР ТЕКСТОВ SED







                 Долбин Алексей Николаевич












                       МОСКВА - 1985









                                                           1



   В данном документе описан один из редакторов текстов   ОС
ДЕМОС.





























































2




                        1. ВВЕДЕНИЕ


   Sed является средством для создания и выполнения программ
редактированиятекстов. В отличие от интерактивных редакторов
red и ed, использование  sed  предполагает   предварительную
разработку  программ,  которые обеспечивают  выполнение всех
необходимых преобразований при последовательном  проходе  по
файлу.

   Редактор sed обладает  следующими достоинствами,  которые
определяют сферу его применения:

-    практически  не  накладывает   никаких  ограничений  на
     об'ем редктируемых файлов;

-    обработка текста за один проход по нему редактора  поз-
     воляет  использовать sed при построении программных ка-
     налов;

-    sed является самым быстрым редактором системы.

   Сложные задания на   редактирование  можно  создавать  по
частям  и  передавать программе sed в виде командных файлов.
При сложных операциях редактирования такая возможность  эко-
номит  время и уберегает от ошибок, которые могут возникнуть
при работе.

   Принципиальным недостатком данного редактора, по  сравне-
нию с интерактивным, является отсутствие относительной адре-
сации (вследствие построчного режима редактирования).

   Наряду со многими различиями, между sed и ed имеется оче-
видное  сходство: понятие регулярных выражений или образцов,
правила записи которых в редакторах sed   и  ed  практически
полностью совпадают.


   1.1. Вызов редактора


   Команда вызова редактора sed имеет следующий формат:

          sed [-n] [-e ком.] [-f ком._файл] [файл]


   В командной строке могут быть заданы следующие ключи:

-n   копирoвать только те строки, которые указаны  командами
     p или флагами р после команды s;

-е   рассматривать следующий аргумент как команду редактиро-
     вания;

-f   рассматривать следующий аргумент как имя файла,  содер-
     жащего команды редактирования.





                                                           3

   1.2. Порядок работы редактора


   При выполнении команд редактирования,  sed  по  умолчанию
переписывает  информацию из стандартного файла ввода в стан-
дартный файл  вывода. Данный порядок работы может быть изме-
нен в командной строке вызова редактора.

   Общий формат команд редактирования:

             [адр1 [,адр2]] команда [аргументы]


   Параметры адр1 и адр2 задают  область  дейтсвия  команды.
Один  или оба параметра могут быть опущены, между ними и ко-
мандой может стоять любое  число  пробелов.  Команда  должна
присутствовать обязательно. Аргументы бывают обязательными и
необязательными - в зависимости от применяемой команды. Зна-
ки табуляции и пробелы в начале строк игнорируются.

   Перед тем как выполнить какие-либо команды редактирования
(фактически, перед тем как будет открыт редактируемый файл),
все они компилируются в форму, которая была бы наиболее  эф-
фективна  во время обработки  командами строк редактируемого
файла.

   Последовательный  порядок выполнения команд  редактирова-
ния  может быть изменен командами управления "t" и "b". Даже
в том случае, когда изменяется  порядок  выполнения  команд,
остается  верным  то,  что  обрабатываемая  текущей командой
строка  редактируемого  файла  является  результатом  работы
предшествовавшей команды.


   1.3. Примеры


   Примеры рассеяны по всему тексту данного руководства.  За
исключением    специально отмеченных случаев, в качестве об-
рабатываемого об'екта  используется  фрагмент  стихотворения
С.Т. Кольриджа "Кубла Хан, или Видение во сне" в переводе В.
Рогова:

       Построил в Занаду Кубла
       Чертог, земных соблазнов храм,
       Где Альф, река богов, текла
       По темным гротам без числа
       К бессолнечным морям.


   Например, по команде:

                             2q

копирование закончится после вывода первых двух  строк;  ре-
зультат принимает вид:

       Построил в Занаду Кубла
       Чертог, земных соблазнов храм,





4




        2. ОБЛАСТЬ ДЕЙСТВИЯ КОМАНД: ВЫБОР СТРОК ДЛЯ
                        РЕДАКТИРОВАНИЯ


   Строки редактируемого файла обрабатываются только  в  том
случае,  когда они входят в область действия команд редакти-
рования. Область действия указывается при команде либо номе-
ром строки, либо по контексту.

   Область действия может быть задана и  при  последователь-
ности команд, об'единенных в группу, командой "{ }".


   2.1. Область действия, задаваемая номерами строк


   Каждой читаемой строке редактируемого файла  sed  присва-
ивает  внутренний  порядковый  номер.  Подсчет номеров строк
проводится по всем заданным редактируемым файлам без обнуле-
ния счетчика строк при переходе к следующему файлу.

   В особых случаях символ "$" соответствует последней стро-
ке последнего редактируемого файла.


   2.2. Область действия, задаваемая контекстом


   Такая область действия представляет собой регулярное  вы-
ражение,  заключенное в символы дробной черты ("/"). Исполь-
зуемые в sed регулярные выражения строятся  следующим  обра-
зом:

1)   Обычный символ (отличный от рассматриваемых ниже) явля-
     ется регулярным выражением и означает сам этот символ.

2)   Символ "^" в начале регулярного выражения соответствует
     пустому символу в начале строки.

3)   Денежный знак "$" в конце регулярного  выражения  соот-
     ветствует пустому символу в конце строки.

4)   Символы "\n"  соответствуют  символу  новой  строки;  в
     конце рабочей области символ новой строки не действите-
     лен.

5)   Точка "." соответствует любому символу кроме последнего
     символа новой строки рабочей области.

6)   Регулярное выражение, за которым  следует  символ  "*",
     соответствует любому числу ( включая 0 ) вхождений это-
     го регулярного выражения.

7)   Строка символов, заключенная в квадратные скобки "[ ]",
     соответствует  любому  символу  из этой строки. Однако,
     если первым в строке стоит символ "^", регулярное выра-
     жение соответствует любому символу, за исключением сим-
     волов указанных в строке, и  последнего  символа  новой
     строки в рабочей области.


                                                           5


8)   Об'единение регулярных  выражений  является  регулярным
     выражением,   состоящим  из  об'единения  строк,  соот-
     ветствующих компанентам регулярного выражения.

9)   Регулярное выражение, заключенное между  последователь-
     ностями символов "\(" и "\)", соответствует  регулярно-
     му выражению без этих открывающих и закрывающих пар, но
     имеет побочные эффекты, которые описаны в команде "s" и
     в следующем сразу за этим пункте 10).

10)  Выражение "\d" означает ту же  самую  строку  символов,
     которая  соответствует  выражению, заключенному ранее в
     "\(" и "\)", в том же самом образце.  Здесь  d  -  одна
     цифра.  Указанная строка представляет собой строку, на-
     чинающуюся с d-го появления символов "\(", считая  сле-
     ва. Например, выражение "^\(.*\)\1" соответствует стро-
     ке, в которой  дважды  повторяется  одинаковая  цепочка
     символов.

11)  Пустое регулярное выражение, стоящее  отдельно  (напри-
     мер,  "//"),  эквивалентно последнему скомпилированному
     регулярному выражению.

   Для того, чтобы использовать специальные символы (^ $ . *
[  ] \ /) как обычные литеры (т.е. отменить специальные зна-
чения этих символов), необходимо перед специальным  символом
поставить обратную дробную черту "\".

   Для того, чтобы адрес,  задаваемый  по  контексту  "соот-
ветствовал" редактируемомоу файлу, требуется, чтобы весь об-
разец в пределах области действия команды соответствовал не-
которой части рабочей области.

   Если при команде не задано области действия, то она обра-
батывает каждую строку редактируемого файла.

   Если при команде задана область дествия, то она обрабаты-
вает  все строки, которые соответствуют данной  области дей-
ствия.

   Если при команде задан диапазон (т.е. два образца, разде-
ленные  запятой),  то она применима к первой строке, которая
соответствует первому образцу  и  всем  последующим  строкам
включая строку, соответствующую второму образцу. После этого
в следующих строках обрабатываемого файла  делается  попытка
снова найти строку, которая соответствует первому образцу, и
процесс повторяется.

   Рассмотрим  соответствие  следующих   областей   действия
команд строкам нашего примера:

/По/           соответствует строкам 1 и 4;

/ос.*ла/       соответствует строке  1;

/^О/           не соответствует ни одной строке;

/./            соответствует всем строкам





6

/\./           соответствует последней строке;

/б*ла/         соответствует строкам 1,  (для  '*'  число=0)
               2,3,4;

/\(ла\).*\1/   соответствует строке 1.


























































                                                           7




                         3. КОМАНДЫ


   Команды бывают простыми и составными.  Составные  команды
получают, используя команду группирования.

   Имена всех команд задаются  одним  символом.  Далее  дано
описание команд в следующей последовательности:

-    Признак (2)  означает, что команда работает с  диапазо-
     ном  строк и со строкой; признак (1) - команда работает
     со строкой.

     Команда, при которой задана недопустимая  область  дей-
     ствия, считается ошибочной.

-    Имя команды, состоящее из одного символа.

     Возможные аргументы, заключенные в символы "< >".

-    Название команды.

-    Источник аббревиатуры.

-    Описание действия команды.

   Символы "< >" не являются частью аргумента  и  не  должны
печататься в самих командах редактирования.


   3.1. Команды, обрабатывающие всю строку


(2)d -- Стереть строки (delete).
     Команда "d" стирает из файла (не  записывает  в  вывод)
     все  строки,  соответствующие данной области (областям)
     действия.

     Команда имеет побочный эффект, заключающийся в том, что
     следющие  за  ней  команды не обрабатывают уничтоженную
     строку. Во время выполнения команды "d"  из  редактиру-
     емого  файла  считывается  новая строка и группа команд
     редактирования возобновляет свою работу с начала  новой
     строки.

(2)n -- Следующая строка (next).
     Команда "n" считывает из обрабатываемого  файла  следу-
     ющую строку, заменяя текущую строку. Если этого требуют
     другие команды, текущая строка записывается в результи-
     рующий файл.

(1)а\
<текст> -- Добавить строки (append).
     Команда "a" дописывает в результирующий файл свой аргу-
     мент  <текст>  после строки, соответствующей ее области
     действия. Команда "a" вместе с аргументом занимает нес-
     колько  строк.  Команда   "a" должна появляться в конце
     строки, аргумент <текст> может  содержать  любое  число
     строк.  Для  того, чтобы отличть команду  от следующего


8

     за ней аргумента, ее пишут на  новой  строке  и  ставят
     сразу после нее символ обратной дробной черты ("\"), за
     которым сразу следует символ   новой  строки.  Аргумент
     <текст>  заканчивается  первым  символом  новой строки,
     перед которым не стоит обратная дробная черта.

     Сразу же после  выполнения команды "a",  <текст>  будет
     записан  в  результирующй файл, независимо от того, что
     делают  последующие команды со строкой, которая вызвала
     выполнение команды "a". Эта строка может быть полностью
     стерта. <текст> будет продолжать записываться в резуль-
     тирующй файл.

     Строки аргумента <текст> не проверяются на соответствие
     области  действия,  и они не редактируются  другими ко-
     мандами. Эти действия  не вызывают  изменения  счетчика
     строк.

(1)i\
<текст> -- Вставить строки (insert).
     Команда "i" ведет себя идентично команде "a", за исклю-
     чением  того, что <текст> записывается в результирующий
     файл перед соответствующей строкой. Остальные  свойтсва
     команды "a" справедливы и для команды "i".

(2)c\
<текст> -- Изменить строки (change).
     Комана "с" удаляет строки, выбранные по заданной облас-
     ти  действия, и замещает их строками аргумента <текст>.
     Подобно "a" и "i", за "с" должен следовать символ новой
     строки,  перед  которым  стоит  обратная дробная черта.
     Символы новыой строки внутри <текста> также должны быть
     закрыты обратными дробными чертами.

     Команда "с" может выбирать диапазон строк. В этом  слу-
     чае  удаляются  все строки из указанного диапазона, а в
     результирующий файл   записывается  только  одна  копия
     <текста>.  Как  и в случае команд "a" и "i", <текст> не
     проверяется на соответствие области действия, и к  нему
     не применяются команды редактирования. Счетчик строк не
     учитывает вставку <текст>.

     После удаления строки командой "с", к этой строке  дру-
     гие команды не применяются.

     Если текст добавляется после строки при  помощи  команд
     "a"  или  "r",  и  строка  последовательно  изменяется,
     текст, вставляемый командой "с",  будет  помещен  перед
     текстом, вставляемым командами "a" или "r".

   В тексте, помещенном в результирующий файл данными коман-
дами, пробелы и знаки табуляции стоящие в начале строк будут
убраны, как  и всеми остальными командами sed. Чтобы  выдать
пробелы  и  знаки табуляции в результирующий файл, поставьте
перед первым необходимым пробелом или знаком  табуляции  об-
ратную  дробную черту. Обратная дробная черта не будет появ-
ляться в  результирующем файле.

   Например, следующий список команд редактирования :





                                                           9

       n
       a\
       хххх
       d

примененный к нашему стандартному примеру, приведет к такому
результату:

       Построил в Занаду Кубла
       хххх
       Где Альф, река богов, текла
       хххх
       К бессолнечным морям.


   В данном конкретном случае те же  результаты  могут  быть
получены любой из следующих последовательностей команд:

       n       n
       i\      с\
       хххх    хххх
       d


(2)y/строка1/строка2/ -- Преобразовать строку.
     Заменить все вхождения символов, образующих строку1, на
     соответствующие  символы  из строки2. Строка1 и строка2
     должны быть одной длины.


   3.2. Команда замены


   Существует очень  важная  команда  для  изменения  частей
строк, выбранных при помощи контекстного поиска в строке.

(2)s<a><b><флаг> -- заменить (substitute)


   Команда "s" заменяет часть строки, выбранную  по  образцу
<a>,  на строку <b>. Аргумент <b> содержит образец, подобный
образцам в области действия.  Единственным  различием  между
ними   является то, что область действия, задаваемая по кон-
тексту,  должна  быть  ограничена  символами  дробной  черты
("/").  Образец <a> может быть ограничен любым символом, от-
личным от пробела или символа новой строки.

   По  умолчанию  заменяется  только  первая  строка,  соот-
ветствующая образцу <a> (но см. ниже флаг g).

   Аргумент замены <b>  начинается непосредственно за вторым
разграничивающим  символом  образца  <a>, а сразу за заменой
<b> должен стоять другой разграничивающий символ. Таким  об-
разом, в команде s присутствует в точности три разграничива-
ющих символа.

   Заменяющий аргумент <b>  не  является  образцом,  поэтому
символы,  которые являются специальными в образцах, не имеют
специального значения в <b>. Вместо них специальное значение
принимают другие символы:




10

&    Заменяется строкой, которой соответствует образец <a>.

\d   (где  d  -  одна  цифра)  Заменяется  d-ой  по  порядку
     подстрокой,  которой  соответствуют  части образца <a>,
     заключенного в "\(" и "\)". Если в образце <a>  появля-
     ются  вложенные  подстроки,  d-я подстрока определяется
     путем подсчета открывающих ограничителей "\(".

     Как и в образцах специальные символы считаются обычными
     литерами,  если перед ними стоит обратная дробная черта
     ("\").

   Аргумент <флаг> может быть следующим:

g    Заменить <b> на все (неперекрывающиеся) вхождения <a> в
     строке. После успешной замены, сразу же вслед за встав-
     ленными символами, начинается проверка  следующего  об-
     разца <a>. Символы, помещенные в строку из <b>, повтор-
     но  не проверяются.

р    Напечатать строку, если была осуществлена успешная  за-
     мена.  Флаг "р" приводит к записи строки  в результиру-
     ющий файл тогда и только тогда, когда замена была  сде-
     лана  командой  "s".  Обратите внимание на то, что если
     операцию замены в одной и той же строке успешно  прово-
     дят  несколько  команд  "s", и при каждой команде стоит
     флаг "р", в результирующий файл будет записано несколь-
     ко  копий этой строки: по одной для каждой успешной за-
     мены.

w <имя_файла>
     Записывает строку в файл, если была осуществлена успеш-
     ная замена. Флаг "w" вызывает запись строк, которые за-
     меняются командой "s", в  файл  с  именем  <имя_файла>.
     Если файл <имя_файла>  уже существует перед тем как за-
     пускается sed, его старое  содержимое  уничтожается;  в
     противном случае этот файл создается.

     Между "w" и <имя_файла> должен стоять точно  один  про-
     бел.

     Результаты при нескольких заменах в одной строке анало-
     гичны результатам, получаемым с флагом "р".

     Общее количество файлов, указанных при флагах и  коман-
     дах "w", не должно превышать десяти.

   Для нашего стандартного текста, выполнив команду:

                  s/Чертог/Дворец/w замена

получим следующий результат:

       Построил в Занаду Кубла
       Дворец, земных соблазнов храм,
       Где Альф, река богов, текла
       По темным гротам без числа
       К бессолнечным морям.

А файл "замена" будет содержать следующую строку:




                                                          11

       Дворец, земных соблазнов храм,


   Если действуют ключи, не приводящие к копированию, то  по
команде:

                     s/[.,;?:]/*P&*/gp

в файле произойдут следующие изменения:

  Построил в Занаду Кубла
  Чертог*P,* земных соблазнов храм*P,*
  Где Альф*P,* река богов*P,* текла
  По темным гротам без числа
  К бессолнечным морям*P.*


   Наконец, в качестве иллюстрации действия  флага  "g",  по
команде:

                        /П/s/ос/ОС/p

получаем следующий результат ( предполагается режим без  ко-
пирования ):

                  ПОСтроил в Занаду Кубла

а по команде:


                        /П/s/о/О/gp


получаем строки:


       ПОстроил в Занаду Кубла
       ПО темным гротам без числа



   3.3. Команды ввода-вывода


(2)р -- Печать (print).
     Команда печати  записывает  указанные  строки  в  стан-
     дартный  файл  вывода. Запись производится в момент вы-
     полнения команды "р", независимо от того, какие  опера-
     ции будут выполнять над строкой последующие команды ре-
     дактирования.

(2)w <имя_файла> -- Записать в файл (write).
     Команда "w" записывает указанные  строки в файл с  име-
     нем  <имя_файла>. Если файл существовал ранее, его ста-
     рое содержимое уничтожается. В противном случае он соз-
     дается. Строки записываются в том виде, в каком они су-
     ществовали в момент действия команды записи  на  каждую
     строку, независимо от того, какие операции могут выпол-
     нять над строкой последующие команды редактирования.





12

     Между "w" и <имя_файла> должен стоять только один  про-
     бел.

     Общее количество файлов, указанных при командах  записи
     и флагах "w" после команд "s", не должно превышать  де-
     сяти.

(1)r <имя_файла> -- Прочитать содержимое файла (read).
     Данная команда читает содержимое  файла  <имя_файла>  и
     добавляет  его  после  строки,  соответствующей области
     действия. Файл считывается и добавляется независимо  от
     того, какие операции могут выполнять последующие коман-
     ды редактирования над строкой, соответствующей  данному
     адресу.  Если одну и ту же строку  обрабатывают команды
     "r" и "a", то аргумент команды "a" и команды "r"  запи-
     сывается на вывод в том порядке, в каком данные команды
     выполняются.

     Между литерами "r" и <имя_файла> должен  стоять  только
     один пробел. Если файл, указанный командой "r" не может
     быть открыт, он рассматривается как фиктивный  файл,  а
     не  ошибочный, поэтому диагностические сообщения не вы-
     даются.

   Общее количество открываемых одновременно файлов при  ко-
мандах  и  флагах  "w" не должно превышать десяти. Это число
сокращается на 1, если присутствует хотя бы одна  из  команд
"r". За один раз на чтение открывается только один файл.

   Рассмотрим работу описанной в этом разделе  команды  "r".
Пусть файл "примеч." содержит следующие строки:

ПРИМЕЧАНИЕ:
     Кубла-хан (более правильно Кублай-хан 1216 - 1294)  был
     внуком и наиболее известным последователем Чингиз-хана;
     основал династию Моголов в Китае.

   Тогда по команде

                      /Кубла/r примеч.

будет получен следующий результат:

Построил в Занаду Кубла

ПРИМЕЧАНИЕ:
     Кубла-хан (более правильно Кублай-хан 1216 - 1294)  был
     внуком и наиболее известным последователем Чингиз-хана;
     основал династию Моголов в Китае.

Чертог, земных соблазнов храм,
Где Альф, река богов, текла
По темным гротам без числа
К бессолнечным морям.










                                                          13

   3.4. Команды, обрабатывающие несколько строк


   Существуют три команды, обозначаемые заглавными  буквами,
которые  обрабатывают  рабочую  область,  содержащую символы
новой строки. Они предназначены главным образом для обработ-
ки образцов в строках редактируемого файла.

(2)N -- Следующая строка (next).
     Следующая строка редактируемого файла добавляется к те-
     кущей  рабочей  области. Две входных строки разделяются
     символом новой строки. Сравниваемые  образцы могут  со-
     держать внутри себя символы новой строки.

(2)D -- Удалить первую часть рабочей области (delete).
     Удалить строку, включая и первый символ новой строки, в
     текущей рабочей области. Если рабочая область становит-
     ся пустой, считывается следующая строка  редактируемого
     файла . В любом случае начинайте список команд редакти-
     рования сначала.

(2)P -- Напечатать первую часть рабочей области (print).
     Печатает строку, включая и  символ новой строки, из ра-
     бочей  области.

   Если в рабочей области нет символов новой строки, то  ко-
манды  "P"  и  "D"  эквивалентны  командам  "р"  и "d" соот-
ветственно.


   3.5. Команды, работающие с буферами


   Во время работы sed создает  буфер,  называемый  "рабочей
областью",  в который помещается часть редактируемого файла.
Имеется  возможность  создавать  специальный   "сохраняемый"
буфер, с которым можно производить обмен содержимым из рабо-
чей области.

   Существует четыре команды, записывающие и читающие  часть
редактируемого файла  для его последующего использования.

(2)h -- Сохранить рабочую область (hold).
     Команда "h" копирует содержимое рабочей области в  сох-
     раняемый  буфер (уничтожая предыдущее содержимое сохра-
     няемого буфера).

(2)H -- Сохранить рабочую область (hold).
     Команда "H" добавляет содержимое рабочей области к  со-
     держимому  сохраняемого буфера. Старое и новое содержи-
     мое отделяются символом новой строки.

(2)g -- Получить содержимое сохраняемого буфера (get).
     Команда "g" копирует содержимое сохраняемого  буфера  в
     рабочую  область (уничтожая предыдущее содержимое рабо-
     чей области).

(2)G -- Получить содержимое сохраняемого буфера (get).
     Команда "G" добавляет  содержимое  сохраняемого  буфера
     содержимому  рабочей области. Старое и новое содержимое
     разделяется символом новой строки.



14

(2)х -- Заменить(exchange).
     По этой команде происходит замена  содержимого  рабочей
     области на содержимое сохраняемого буфера.

   Рассмотрим работу описанных в этом разделе команд. Следу-
ющая последовательность команд:

       1h
       1s/в Занаду.*//
       1x
       G
       s/\n/ :/

обрабатывающая наш файл, даст такой результат:

  Построил в Занаду Кубла :Построил
  Чертог, земных соблазнов храм,:Построил
  Где Альф, река богов, текла:Построил
  По темным гротам без числа:Построил
  К бессолнечным морям.:Построил



   3.6.  Команды управления


   Данные команды не изменяют редактируемого файла - они уп-
равляют порядком выполнения команд, ориентируясь на заданную
область действия команды.

(2)! -- Не.
     Команда "не" указывает на применение следующей  команды
     (записанной  на одной с ней строке), только к тем стро-
     кам, которые не соответствуют  указанной  области  дей-
     ствия.

(2){ -- Группирование.
     По команде группирования "{" создается составная коман-
     да, получающаяся из следующей за ней последовательности
     команд. Она действует единой последовательностью на все
     строки  редактируемого файла, выбранные по области дей-
     ствия, указанной при команде группирования.  Первая  из
     команд под управлением команды группирования может сто-
     ять на одной строке со знаком   "{"  или  на  следующей
     строке.

     Составная команда заканчивается командой  "}",  стоящей
     на следующей строке.

     Составные команды могут быть вложенными.

(0):<метка> -- Поставить метку.
     Команда  помечает  место в списке  команд  редактирова-
     ния, к которому можно обращаться с помощью команд "b" и
     "t". Аргумент <метка> - любая последовательность длиною
     не  более  восьми символов. Если при двух различных ко-
     мандах метки (:) сами метки совпадают, то во время ком-
     пиляции  генерируется  диагностика  об ошибке. При этом
     команды не выполняются.





                                                          15

(2)b<метка> -- Переход по метке (branch).
     Команда перехода по метке приводит к тому, что последо-
     вательность  команд редактирования, выполненная над те-
     кущей строкой, возобновляет свое действие  сразу  после
     метки.  Если после  компиляции всех команд редактирова-
     ния метки, указанной при операторе перехода, не  найде-
     но,  то во время компиляции генерируется диагностика об
     ошибке и никаких действий не производится.

     Если при операторе "b" метка не  стоит,  то  происходит
     переход  в конец набора команд редактирования; все, что
     должно было бы быть сделано с текущей строкой редактру-
     емого  файла,  выполняется  и считывается другая строка
     этого файла; следующие за командой перехода команды за-
     писываются с новой строки. Список команд редактирования
     начинает выполняться снова, с начала новой строки.

t<метка> -- Проверить подстановки (test).
     Команда "t" проверяет были ли в текущей входной  строке
     сделаны  какие-либо успешные замены. Если были, то про-
     исходит переход на <метку>; в противном случае  никаких
     действий  не  выполняется. Флаг, указывающий на то, что
     была выполнена успешная замена устанавливается при счи-
     тывании новой строки или выполнении команды t.


   3.7. Дополнительные команды


(1)= -- Равенство.
     Команда "=" записывает в стандартный файл вывода  номер
     строки, имеюшей указанную при команде область действия.

 (1)q -- Закончить (quit).
     Текущая строка, если возможно, записывается в файл  вы-
     вода;  добавленный  или  считанный  текст записывается,
     после чего работа редактора прекращается.



























16



                           СОДЕРЖАНИЕ



1.  ВВЕДЕНИЕ...........................................    3
    1.1. Вызов редактора...............................    3
    1.2. Порядок работы редактора......................    4
    1.3. Примеры.......................................    4

2.  ОБЛАСТЬ   ДЕЙСТВИЯ   КОМАНД:   ВЫБОР   СТРОК    ДЛЯ
    РЕДАКТИРОВАНИЯ.....................................    5
    2.1. Область действия, задаваемая номерами строк...    5
    2.2. Область действия, задаваемая контекстом.......    5

3.  КОМАНДЫ............................................    8
    3.1. Команды, обрабатывающие всю строку............    8
    3.2. Команда замены................................   10
    3.3. Команды ввода-вывода..........................   12
    3.4. Команды, обрабатывающие несколько строк.......   14
    3.5. Команды, работающие с буферами................   14
    3.6.  Команды управления...........................   15
    3.7. Дополнительные команды........................   16








































                                                          17

