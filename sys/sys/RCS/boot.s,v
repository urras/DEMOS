head     22.3;
access   dvolodin korotaev;
symbols  Архыз0:1.2.1;
locks    ;
comment  @ *@;


22.3
date     90.12.12.16.21.22;  author korotaev;  state Exp;
branches ;
next     22.2;

22.2
date     90.11.12.19.09.29;  author root;  state Exp;
branches ;
next     22.1;

22.1
date     89.04.27.14.11.41;  author korotaev;  state Exp;
branches ;
next     22.0;

22.0
date     89.03.30.13.33.33;  author korotaev;  state Exp;
branches ;
next     1.3;

1.3
date     89.01.22.17.23.05;  author korotaev;  state Exp;
branches ;
next     1.2;

1.2
date     88.06.29.11.09.35;  author korotaev;  state Exp;
branches 1.2.1.1;
next     1.1;

1.1
date     88.06.13.19.41.34;  author korotaev;  state Exp;
branches ;
next     ;

1.2.1.1
date     88.11.02.11.55.06;  author dvolodin;  state Exp;
branches ;
next     ;


desc
@
Разработка by AVG.
@


22.3
log
@Правки для ДВК
@
text
@#include "h/whoami.h"
#include "../include/iopage.m"

/  The boot options and device are placed in the last SZFLAGS bytes
/  at the end of core for the bootstrap.
ENDCORE=        160000          / end of core, mem. management off
SZFLAGS=        6               / size of boot flags
BOOTOPTS=       2               / location of options, bytes below ENDCORE
BOOTDEV=        4
CHECKWORD=      6

reset= 5

.globl  _doboot
.text
_doboot:
	mov     6(sp),r1        / boot block math. address
	mov     4(sp),r4        / boot options
	mov     2(sp),r3        / boot device

/ Установить лист KDSA0 на адрес 0, разрешить R/W
	clr     KDSA0
	mov     $[177\<8]|RW,KDSD0

/ Скопировать 256 слов из KDSA5 в физ. адрес 0
	mov     $256.,r0
	clr     r5
1:      mov     (r1)+,(r5)+
	sob     r0,1b

#ifdef  KERN_NONSEP
	clr     r1

#ifndef DVK4
	tst     8(sp)           / if true, it is Dec Pro bootstrap...
	beq     2f

/ Для Э-85: выключить ДП, выключить все прерывания
	mov     $340, *$177776  / God Save It
	clr     *$177572
	mov     $60, r0         / Установить все биты РЗП
	mov     $100, r1        / Очистка всех разрядов РЗО
	mov     r0, *$173202
	mov     r1, *$173202
	mov     r0, *$173206
	mov     r1, *$173206
	mov     r0, *$173212
	mov     r1, *$173212
	mov     $20, r1         / стартовая точка - 020
	br      3f
#endif DVK4

2:
	reset                   / Turn off mem mgt & ub map

/  On power fail, hardboot is the entry point (map is already off)
/  and the args are in r4, r3.

3:
	.globl  hardboot
hardboot:

	mov     r4, ENDCORE-BOOTOPTS
	mov     r3, ENDCORE-BOOTDEV
	com     r4              / if CHECKWORD == ~bootopts, flags are believed
	mov     r4, ENDCORE-CHECKWORD

	jmp     (r1)            / переход на начало

#else   KERN_NONSEP

	.globl  hardboot
hardboot:
	mov     $rst+2,r0
	mov     $010437,(r0)+           / mov r4,$*
	mov     $ENDCORE-BOOTOPTS,(r0)+ /          ENDCORE-BOOTOPTS
	mov     $010337,(r0)+           / mov r3,$*
	mov     $ENDCORE-BOOTDEV,(r0)+  /          ENDCORE-BOOTDEV
	mov     $005104,(r0)+           / com r4
	mov     $010437,(r0)+           / mov r4,$*
	mov     $ENDCORE-CHECKWORD,(r0)+ /         ENDCORE-CHECKWORD
	mov     $000112,(r0)+           / jmp (r2)
	mov     r3, r0
	ash     $-3,r0
	bic     $!07,r0
	mov     $0172150,r1
	clr     r2
rst:
	reset
#endif  KERN_NONSEP
@


22.2
log
@Новые вещи для СМ1425 и перемещение include.
@
text
@d33 2
d51 1
@


22.1
log
@Изменения в связи с передвижением каталогов и файлов
@
text
@d2 1
a2 1
#include <sys/iopage.m>
d12 1
a12 1
reset=  5
d31 1
a32 1
#ifdef  KERN_NONSEP
a50 5
#else   KERN_NONSEP
	mov     $rst+2,r0
	jsr     pc,mvrbt
#endif  KERN_NONSEP
rst:
a55 1
#ifdef  KERN_NONSEP
d59 1
d67 6
a72 3
#else
	.globl  mvrbt
mvrbt:  mov     $010437,(r0)+           / mov r4,$*
d79 8
a86 2
	mov     $000111,(r0)+           / jmp (r1)
	rts     pc
@


22.0
log
@Begining DEMOS 2.2.
@
text
@d1 1
a1 1
#include "whoami.h"
@


1.3
log
@Егошинские правки для Separate машин.
@
text
@a3 1
#ifdef  UCB_AUTOBOOT
a83 2

#endif  UCB_AUTOBOOT
@


1.2
log
@AVG вставил некоторые изменения.
@
text
@d15 1
a15 1
.globl  _doboot, hardboot
d33 1
d51 7
a57 1
2:      reset                   / Turn off mem mgt & ub map
d62 1
d64 1
d72 14
@


1.2.1.1
log
@halt() перекинут сюда.
@
text
@a12 1
halt=   0
d15 1
a15 2
.globl  _doboot, hardboot, _halt

a16 4
_halt:
	halt
	rts     pc              / to give a chance of reboot

@


1.1
log
@Initial revision
@
text
@d32 1
@
