.\"320! ВЫКЛЮЧИ ТАБУЛЯЦИЮ ПРИ РЕДАКТИРОВАНИИ ЭТОГО ФАЙЛА В RED
.th QUEL QUEL "СУБД \*(RU. ОПЕРАТОРЫ QUEL"
.ds QU QUEL
.sh ИМЯ
quel \- \fBQUE\fPry \fBL\fPanguage (язык запросов) \*(II
.sh ОПИСАНИЕ
В разделе приводится полное описание синтаксиса
.nh
\*(QU.
.hy
Конкретные операторы и команды
\*(QU
описаны в соответствующих разделах документации;
этот раздел описывает синтаксические классы, из элементов которых
строятся операторы языка запросов
\*(QU.
Введение в язык \*(QU содержится в отдельном документе: \fB"Введение в
язык \*(QU"\fR.
.s1
1. \fBКомментарий\fR
.s2
Комментарий это последовательность символов,
ограниченная слева
``\fB/\*(**\fR''
и справа
``\fB\*(**/\fR'':
.s3
/\*(** Это комментарий \*(**/
.s1
2. \fBИдентификаторы (имена)\fR
.s2
Имена в
\*(QU
\- это последовательности не более чем из 12 букв или цифр,
начинающиеся с буквы. Знак подчеркивания (\fB_\fR) считается
буквой.
Все заглавные буквы,
появляющиеся везде, исключая строки, автоматически и без
сообщений перекодируются в свои
строчные эквивалент, если только при вызове системы этот режим не отменен
(см. rubin(demos)).
.s1
3. \fBСлужебные слова\fR
.s2
Следующие идентификаторы зарезервированы для использования в качестве
служебных слов и иначе использоваться не могут:
.s3
.ft B
.if n .ta 5 25 45
.if t .ta 0.5i 2.5i 4.5i
.de xx
\\fB\t\\$1\t\\$2\t\\$3\\fR
.br
..
.xx abs all and
.xx any append ascii
.xx at atan avg
.xx avgu by concat
.xx copy cos count
.xx countu create define
.xx delete destroy exp
.xx float4 float8 from
.xx gamma help in
.xx index int1 int2
.xx int4 integrity into
.xx is log max
.xx min mod modify
.xx not of on
.xx onto or permit
.xx print range replace
.xx retrieve save sin
.xx sqrt sum sumu
.xx to unique until
.xx view where
.xx date4 char4 from_date
.xx to_date from_time to_time
.xx ser_next ser_last ser_init
.ft
.dt
.s1
4. \fBВыражения\fR
.s2
Выражением называется один из следующих об'ектов:
.s3
.nf
.if t .in +0.5i
.if n .in +5
\fIконстанта
\fIатрибут
\fIфункциональное выражение
\fIагрегат или агрегатная функция
\fIкомбинация числовых выражений и арифметических операторов
\fR
.i0
.fi
.s3
В данном руководстве на произвольное выражение
ссылаются по имени
.it выражение.
.s1
5. \fBФорматы\fR
.s2
Каждое
.it выражение
имеет формат,
обозначаемый буквой
(\c
.bd c,
.bd i,
или
.bd f,
для символьных, целых и данных с плавающей точкой
соответственно), и число, указывающее количество байтов, отводимых
под об'ект данного типа. Кроме того, есть еще форматы \fBdate\fR и \fBtime\fR,
которые могут также быть записаны как \fId4\fR или \fIm4\fR, специально для
хранения даты и времени.
В текущей версии поддерживаются перечисленные ниже форматы.
В скобках указываются диапазоны значений, принимаемые соответствующими
числовыми типами:
.s3
.lp +20 15
\fBc1 \- c255\fR	символьные данные длиной 1\-255 символов.
.lp +20 15
\fBi1\fR	1-байтовое целое (\*-128 до +127)
.lp +20 15
\fBi2\fR	2-байтовое целое (\*-32768 до +32767)
.lp +20 15
\fBi4\fR	4-байтовое целое  (\*-2.147.483.648 до +2.147.483.647)
.lp +20 15
.if n \fBf4\fR	4-байтовое число с плавающей точкой (\*-10**38 до +10**38,
.if t \fBf4\fR	4-байтовое число с плавающей точкой (\*-10\x'-0.2v'\u\s-3\&38\s0\d до +10\x'-0.2v'\u\s-3\&38\s0\d,
7 знаков после запятой)
.lp +20 15
.if n \fBf8\fR	8-байтовое число с плавающей точкой (\*-10**38 до +10**38,
.if t \fBf8\fR	8-байтовое число с плавающей точкой (\*-10\u\x'-0.2v'\s-3\&38\s0\d до +10\u\x'-0.2v'\s-3\&38\s0\d,
17 знаков после запятой)
.lp +20 15
\fBdate\fR	4-х байтовое представление даты в виде числа дней от 1 января 0000
года по новому стилю;
.lp +20 15
\fBtime\fR	4-х байтовое представление времени в секундах.
.i0
.s3
Один числовой формат может быть преобразован в любой другой числовой
формат или просто заменен на него.
.s1
6. \fBПреобразование типов\fR
.s2
При работе с двумя числовыми доменами различных типов
\*(II осуществляет необходимые преобразования для
приведения их к одному типу.
.s3
При работе с целым числом и числом с плавающей точкой,
перед выполнением операции целое преобразуется в число с плавающей точкой.
При работе с двумя целыми разной длины,
целое меньшей длины преобразуется к длине большего.
При работе с двумя числами с плавающей точкой
разной длины,
большее преобразуется в меньшее.
При работе с датой и временем они рассматриваются просто как целые числа
формата \fBi4\fR, а результату присваивается тип \fBdate\fR, если хотя бы один
из аргументов операции имел такой тип, и тип \fBtime\fR, если один из аргументов
операции имел такой тип и тип результата не \fBdate\fR.
.s3
Следующая таблица описывает все возможные комбинации:
.s3
.dt
.if n .in +4
.if t .in +1i
.nf
	i1	i2	i4	f4	f8
.s3
i1 \-	i1	i2	i4	f4	f8
i2 \-	i2	i2	i4	f4	f8
i4 \-	i4	i4	i4	f4	f8
f4 \-	f4	f4	f4	f4	f4
f8 \-	f8	f8	f8	f4	f8
.dt
.i0
.fi
.s3
В \*(II имеются 7 операторов преобразования типов, предназначенных для
блокировки проводящихся по умолчанию
преобразований типов, и еще 4 функции преобразования даты и времени по
шаблону.
Операторы:
.s3
.nf
.in +4
.if n .ta 18
.if t .ta 1.4i
\fBint1(\fIвыражение\fB)\fR	результирующий тип \fBi1\fR
\fBint2(\fIвыражение\fB)\fR	результирующий тип \fBi2\fR
\fBint4(\fIвыражение\fB)\fR	результирующий тип \fBi4\fR
\fBfloat4(\fIвыражение\fB)\fR	результирующий тип \fBf4\fR
\fBfloat8(\fIвыражение\fB)\fR	результирующий тип \fBf8\fR
\fBtime4(\fIвыражение\fB)\fR	результирующий тип \fBtime\fR
\fBdate4(\fIвыражение\fB)\fR	результирующий тип \fBdate\fR
\fBascii(\fIвыражение\fB)\fR	результирующий тип \fBchar\fR
.if n .ta 30
.if t .ta 4i
\fBfrom_date(\fIвыражение\fB,\fIшаблон\fB)\fR	результат \fBchar\fR
\fBfrom_time(\fIвыражение\fB,\fIшаблон\fB)\fR	результат \fBchar\fR
\fBto_date(\fIстрока\fB,\fIшаблон\fB)\fR	результат \fBdate\fR
\fBto_time(\fIстрока\fB,\fIшаблон\fB)\fR	результат \fBtime\fR
.dt
.fi
.i0
.s3
Операторы преобразования типа преобразуют свои аргументы
.it выражение
в требуемый тип.
.it Выражение
может быть всем, чем угодно, в том числе и символом.
Если значение значение символа не может быть преобразовано в числовое, то
происходит ошибка и обработка прекращается.
Это может произойти только в том случае, когда
некорректен синтаксис значения символа.
Преобразование в символьный вид производится по правилам умолчания,
которые могут быть изменены при вызове базы данных.
Преобразования даты и времени подробно описаны в разделе date(quel)
справочного руководства.
.s3
При преобразованиях типов проверка на переполнение не
производится.
.s2
7. \fBКонстанты\fR
.s2
Существует семь типов констант,
соответстующих семи типам данных
\*(QU, используемых в
\*(II.
.s1
7.1. \fBСтроки\fR
.s2
Строка в
\*(QU
это последовательность не более чем из 255 символов
кода ASCII, ограниченная двойными кавычками
( \fB"\fR \fB"\fR ). Прописные буквы в строках не переводятся в строчные (как в
идентификаторах). Если необходимо поместить в строку кавычки, то
перед ними необходимо ставить символ `\fB\e\fR' .
Аналогичное соглашение принято и для самого символа `\fB\e\fR'.
.s3
Внутри строк разрешены только печатные символы.
Непечатные символы (т.е. управляющие)
преобразуются в пробелы.
.s1
7.2. \fBЦелые константы\fR
.s2
.br
Целые константы в
\*(QU
лежат в диапазоне
от \*-2.147.483.647
до +2.147.483.647.
Целые константы, не попадающие в этот диапазон значений, преобразуются
в числа с плавающей точкой.
Если целое число меньше, чем 32.767 или больше чем \*-32.767,
то оно будет представлено как двухбайтовое целое.
В противном случае оно будет преобразовано в четырехбайтовое целое.
.s1
7.3. \fBКонстанты с плавающей точкой\fR
.s2
Константы с плавающей точкой состоят из целой части, десятичной точки
и дробной части, символов e или E и целого показателя (экспоненты), возможно,
со знаком. Эти константы представляются в следующем формате:
.s3
	{\fI<цифра>\fR} [.\fI<цифра>\fR] [\fBe\*vE\fR [\fI+\*v\*-\fR] {\fI<цифра>\fR}]
.s3
Где \fI<цифра>\fB обозначает цифру,
\fR[]\fB обозначает ноль или один,
\fR{}\fR обозначает ноль или более, и \fR|\fR обозначает альтернативное представление.
Экспонента без мантиссы, рассматривается как имеющая
мантиссу 1.
В цепочке, представляющей константы с плавающей точкой, не должно быть
никаких других символов.
Принимается, что константы с плавающей точкой это
величины с двойной точностью, принимающие значения из диапазона от
.if n -10**38 до +10**38
.if t \*-10\x'-0.2v'\u\s-3\&38\s0\d до 10\u\x'-0.2v'\s-3\&38\s0\d
с точностью до 17 десятичных знаков.
.s1
7.3. \fBКонстанты типа date и time\fR
.s2
Константы, описывающие дату, задаются следующим образом:

 \fB'\fIдата_в_формате_по_умолчанию\fB'\fR

Умолчания такие же, как и для функции \fBdate4\fR. Если умолчание для
ввода/вывода даты не изменены при вызове, они такие:

 \fBDD-MON-YYYY\fR

 \fBDD\fR - 2 цифры месяцв
 \fBMon\fR - краткое 3-х буквенное обозначение месяцв
 \fBYYYY\fR - четырехзначный номер года

Подробно форматы даты и времени описаны в разделе date(quel);
здесь только заметим, что название месяца должно начинаться с
прописной буквы, может быть сокращенным (3 буквы) или полным,
на русском или английском языках. Например:

 12-Apr-1957
 22-Января-1960

Константа, описывающая время, задается аналогично, ее отличительной
чертой является символ "\fB:\fR" в формате по умолчанию:

 '22:10:00'
 '02:12:20'

Константы типа date и time преобразуются в численное представление
даты и времени, принятое в системе.
.s1
7.4. \fBСистемные константы\fR
.s2
Системные константы представляют собой специальные идентификаторы,
с которыми связаны некоторые значения. Это \fBsystime\fR - текущее время
в формате \fBtime\fR, \fBsysdate\fR - текущая дата в формате \fBdate\fR,
а также \fBdba\fR и \fBuser\fR - константы типа c2, используемые для
служебных целей (двухбуквенный идентификатор пользователя и администратора
базы данных).
.s1
8. \fBАтриибуты\fR
.s2
Атрибутом является конструкция вида:
.s3
	\fBпеременная.домен\fR
.s3
.it Переменная
означает некоторое отношение и рассматривается
как представляющая строки или кортежи этого отношения.
Переменная связывается с отношением посредством оператора
\fBrange\fR,
либо по умолчанию (если существует отношение, имя которого совпадает с
именем переменной).
.it Домен
это имя одного из столбцов отношения, которое
обозначается указанной
.it переменной.
Вместе они образуют атрибут, представляющий значения
указанного домена.
.s1
8.1. \fBСпециальный домен TID\fR
.s2
В каждом отношении существует псевдо-атрибут -
.it tid.
Он содержит физический адрес кортежа в файле.
Домен
.it tid
(типа i4)
не хранится в физической памяти, а вычисляется при выборке данных
и может использоваться в операторе
.it "retrieve"
в списке атрибутов и
в операторах
.it "replace"
, \&
.it "retrieve"
или
.it "delete"
в квалификаторе условия вида

 where имя.tid = число

для точного указания требуемого кортежа.
.s1
9. \fBАрифметические операторы\fR
.s2
Арифметические операторы в качестве операндов используют выражения
численного типа.
Унарные операторы выполняются справа налево; бинарные
операторы - слева направо.
Укажем операторы в порядке убывния их приоритета:
.s3
.nf
	+,\*-   (унарные) плюс, минус
	\*(**\*(**    возведение в степень
	\*(**,/   умножение, деление
	+,\*-   (бинарные) сложение, вычитание
.dt
.fi
.i0
.s3
Для изменения порядка выполнения операций используются круглые скобки.
Арифметическое переполнение и деление на ноль
не проверяется при операциях над целыми.
Операции над числами с плавающей точкой проверяются
на переполнение, потерю значимости и деление на ноль только
в том случае, если на ЭВМ имеются и корректно используются
ее аппаратные возможности.
.s1
.s1
10. \fBЦелевой список\fR
.s2
.br
Целевой список - заключенный в скобки список, состоящий из одного
или более элементов, разделенных запятыми, каждый из которых должен
быть представлен в одной из следующих форм:
.s3
a)
.it имя_результата
.bd is
.it выражение
.s3
.it Имя_результата
это имя создаваемого атрибута, или, в
случае операторов изменения (append, replace), имя уже существующего атрибута.
Знак равенства (``='')
эквивалентен
.bd is.
В случае, когда
.it выражение
является чем-нибудь другим, чем один атрибут,
такая форма должна использоваться для присвоения выражению
имени результата.
.s3
b)
.it атрибут
.s3
В случае использования оператора
.it retrieve,
результирующий домен получает то же имя, что
и имя выбираемого атрибута.
В случае использования операторов обновления
(\c
.it "append, replace\c"
),
изменяемое отношение должно иметь домены с теми же именами.
.s3
В целевом списке для представления сразу всех доменов
может быть использовано ключевое слово
.bd all.
Например:
.if n .in +5
.if t .in +0.5i
.s3
range of e is employee
.br
retrieve (e.all) where e.salary > 10000
.i0
.s3
при этом будут получены все домены из отношения employee,
кортежи которых удовлетворяют условию.
.bd All
может быть использовано в целевом списке операторов
.bd retrieve
и
.bd append.
Домены будут храниться в порядке
их ``создания'', т.е. в том порядке, в котором они
перечислены в операторе
.bd create.
.s1
11. \fBОператоры сравнения\fR
.s2
Операндами операторов сравнения могут быть любые
выражения.
.s3
.dt
.nf
	<	(меньше)
	<=	(меньше или равно)
	>	(больше)
	>=	(больше или равно)
	=	(равно)
	!=	(не равно)
.fi
.s3
Все они имеют одинаковый приоритет.
При сравнении символьных атрибутов
все пробелы игнорируются.
Дата и время сравниваются, как и любыек целые числа.
.s1
12. \fBЛогические операторы\fR
.s2
Операндами логических операторов являются предложения;
операторы выполняются слева направо:
.s3
.nf
	not	(логическое нет, отрицание)
	and	(логическое и, конъюнкция)
	or	(логическое или, дизъюнкция)
.fi
.i0
.dt
.s3
Наивысший приоритет из этих трех операторов
имеет оператор
.bd not.
.bd And
и
.bd or
имеют равный приоритет.
Для изменения порядка выполнения операторов пользуются скобками.
.s1
13. \fBУсловия\fR
.s2
.it Условие
состоит из произвольного числа предложений,
связанных логическими операторами.
Предложение - это пара выражений, связанная логическим оператором:
.s3
.dt
	выражение оператор_сравнения выражение
.s3
Для изменения порядка выполнения операторов пользуются скобками.
Т.о. условие может иметь вид:
.s3
.in +4
.it предложение
.br
.bd not
.it условие
.br
.it условие
.bd or
.it условие
.br
.it условие
.bd and
.it условие
.br
(
.it условие
)
.i0
.s1
14. \fBФункциональные выражения\fR
.s2
.it "Функциональное выражение"
состоит из имени функции, за которым следует заключенный в скобки
операнд или список операндов.
Функциональные выражения могут иметь любой уровень вложенности.
В следующем списке имеющихся функций (\c
.it n\c
)
обозначает выражение любого численного типа.
Формат результата указывается справа.
.s3
.if n .ta 10 25
.if n .in 24
.if t .ta 1.0i 2.5i
.if t .in 2.5i
.de xx
.lp +20 15
\fB\\$1(\fI\\$2\fB)\fR \-\t\c
..
.xx abs n
такой же как и у
.it n
(абсолютное значение)
.xx ascii n
символьная строка (преобразует числа в символ)
.xx atan n
f8 (арктангенс)
.xx concat a,b
символьный (конкатенация символов. См. 16.2)
.xx cos n
f8 (косинус)
.xx exp n
f8 (степень
.it n\c
 числа e)
.xx gamma n
f8 (гамма-функция)
.xx log n
f8 (натуральный логарифм)
.xx mod n,b
такой же, как и у
.it b
(\c
.it n
по модулю
.it "b. n"
и
.it b
должны быть i1, i2, или i4)
.xx sin n
f8 (синус)
.xx sqrt n
f8 (квадратный корень)
.xx from_date d p
строка (вывод даты по шаблону)
.xx from_time t p
строка (вывод времени по шаблону)
.xx to_date s p
date (строка - в дату по шаблону)
.xx to_time s p
time (строка - во время по шаблону)
.xx ser_next s
i4 (получить следующее значение переменной)
.xx ser_last s
i4 (получить последнее значение переменной)
.xx ser_set s v
i4 (установить новое значение переменной, получив старое)
.dt
.i0
Подробное описание работы с переменными см. в serial(quel).
.s1
15. \fBАгрегирующие выражения\fR
.s2
Агрегирующие выражения являются средством выполнения вычислительных операций
над выделяемыми ими подмножествами атрибутов.
.s1
15.1. \fBАгрегирующие операторы\fR
.s2
Ниже перечислены определения агрегирующих функций.
.s3
.de xx
.lp +20 15
\fB\\$1\fR \-\t\c
..
.xx count
(i4) подсчет всех вхождений
.xx countu
(i4) подсчет неповторяющихся вхождений
.xx sum
суммирование
.xx sumu
суммирование неповторяющихся значений
.xx avg
(f8) среднее (sum/count)
.xx avgu
(f8) среднее по всем различным значениям (sumu/countu)
.xx max
максимум
.xx min
минимум
.xx any
(i2) значение будет 1, если любой
кортеж удовлетворяет условию,
в противном случае - 0.
.dt
.i0
.s1
15.2. \fBПростой агрегат\fR
.s2
.it "Агрегирующий оператор"
(\c
.it выражение
[
.bd where
.it условие
])
.dt
.s3
Вычисленным значением простого агрегата является скалярная величина.
.it Выражение
вычисляется для набора кортежей, удовлетворяющих
условию (или для всех кортежей из области действия выражения, если
не задано условие).
Операторы
.it sum
и
.it avg
требуют чтобы
.it выражение
было числового типа;
.it "count, any, max"
и
.it min
допускают атрибут символьного типа, равно как
и
.it выражение
числового типа.
.s3
.ul 1
Простые агрегаты ничем не связаны с остальной частью запроса.
Т.е. они как-бы выделяются из запроса, обрабатываются отдельно
и заменяются на свое скалярное значение.
.s1
15.3. \fBАгрегат ``any''\fR
.s2
Бывает полезно знать, существует ли кортеж,
удовлетворяющий некоторому условию.
Для этого используют агрегат
.bd count
и проверяют, равно ли нолю возвращаемое им значение.
Использование
.bd any
вместо
.bd count
более эффективно, т.к.
дальнейшая обработка прекращается, как только встретится первый кортеж,
удовлетворяющий условию.
.s3
.bd Any
возвращает значение 1, если условие принимает значение истина и
0- в противном случае.
.s1
15.4. \fBАгрегирующие функции\fR
.s2
.it "\tАгрегирующий оператор"
(\c
.it выражение
.bd by
.it by_домен
.br
.it "\t\t{, by_домен}"
[
.bd where
.it условие
])
.s3
Агрегирующие функции являются развитием идеи простых агрегатов.
Оператор
.bd by
собирает (т.е. подразделяет) множество отвечающих условию
кортежей по значениям из указанного
.it by_домена.
Если в запросе задано более одного
.it by_домена,
собранные значения являются об`единением отдельных
значений
.it by_доменов.
.it Выражение
-такое же как в простых агрегатах.
Результатом работы агрегирующей функции является множество
собранных значений, по одному для каждого подмножества, на
которые было разбито множество отвечающих условию кортежей. Значение
агрегата, использовавшееся во время вычисления запроса, является
тем значением, которое связано с той частью атрибута, которой соответствует
обрабатываемый в данный момент кортеж.
.s3
В отличие от простых агрегатов, агрегатные функции
связаны с остальной частью запроса.
.it By_список,
отличающий
агрегатные функции от простых агрегатов,
глобален для запроса.
Домены в
.it by_списке
автоматически связываются с другими доменами
запроса, из того же самого
отношения.
.s3
Пример:
.ft B
.nf
      /\*(** Выдать среднюю заработную плату для служащих,
      работающих у каждого управляющего \*(**/
      range of e is employee
      retrieve (e.manager,
		avesal=avg(e.salary by e.manager))
.fi
.i0
.ft
.s1
15.5 \fBАгрегаты на уникальных значениях\fR
.s2
Иногда необходимо проводить агрегирующие действия над уникальными
значениями выражения.
Агрегирующие операторы
.bd avgu\c
,
.bd sumu\c
 и
.bd countu
удаляют повторяющиеся значения
перед выполнением.
Например:
.s3
	count(e.manager)
.s3
подсчитывает общее число входящих в отношение элементов
.it "e.manager",
а
.s3
	countu(e.manager)
.s3
подсчитывает, сколько существует уникальных
значений
.it "e.manager"
.s1
16. Специальные символьные операторы.
.s2
В \*(QU имеются средства, специально предназначенные для работы с символьными доменами.
.s1
16.1 \fBМетасимволы, используемые в шаблонах\fR
.s2
Имеются четыре символа, принимающих специальные значения, в
случае их использования в символьных
константах (строках):
.s3
.de xx
.lp +10 6
\\fB\\$1\\fR\t\c
..
.xx \*(**
соответствует любой строке, содержащей ноль или более символов.
.xx ?
соответствует одному любому символу
.xx [\fI..\fB]
соответствует любому символу из перечисленных в квадратных скобках.
.i0
.s3
Эти символы могут быть использованы в любой комбинации
для формирования проверяющих условий.
Например:
.s3
.lp +25 20
where e.name = "\*(**" \- соответствует любому имени.
.lp +25 20
where e.name = "E\*(**" \- соответствует любому имени, начинающемуся с "E".
.lp +25 20
where e.name = "\*(**ein" \- соответствует всем именам, кончающимся на "ein".
.lp +25 20
where e.name = "\*(**[aeiou]\*(**" \- соответствует любому имени, содержащему
				      хотя бы одну гласную.
.lp +25 20
where e.name = "Allman?" \- соответствует любому имени из семи букв,
			    начинающемуся с "Allman".
.lp +25 20
where e.name = "[A\-J]\*(**" \- соответствует любому имени, начинающемуся
				с букв A,B,...J.
.i0
.s3
Специальное значение описанных символов
можно отменять, поставив перед ними `\e'.
Так ``\e\*(**'' означает символ ``\*(**''.
Если специальные символы появляются в целевом
списке, их специальные значения экранируются символом `\e'.
Например:
.s3
.dt
	title = "\e\*(**\e\*(**\e\*(** \*(rN \e\*(**\e\*(**\e\*(**"
.s3
правильный способ присвоения строки
``\*(**\*(**\*(** \*(rN \*(**\*(**\*(**'' домену ``title''.
.s1
16.2 \fBСцепление (конкатенация)\fR
.s2
Имеется оператор сцепления,
формирующий одну символьную цепочку из двух.
Его синтаксис имеет вид:''concat(цеп1, цеп2)''.
Размер новой символьной цепочки - сумма
размеров двух первоначальных.
Пробелы в конце первой цепочки отсекаются,
второе поле сцепляется с первым, а дополнение до суммарной длины
производится пробелами. Однако результат
никогда не усекается до нулевой длины.
Concat может быть произвольным образом вложено
в другие concat. Например:
.s3
.dt
      имя = concat(concat(x.второеимя, ","), x.первоеимя)
.s3
будет сцеплять
x.второеимя с запятой и
затем с x.первоеимя.
.s1
16.3 \fBФункция ascii (преобразование чисел в строки)\fR
.s2
Функция
.bd ascii
используется для преобразования
числового поля в его символьное представление.
Это проименяется при сравнении
числового значения с символьным.
Например:
.nf
.s3
.dt
	retrieve ( ... )
		where x.симвдомен = ascii(x.числдомен)
.fi
.s3
.bd Ascii
может иметь своим аргументом и символьную
величину. Результатом будет та же неизменившаяся символьная
величина. Форматы числовых преобразований определяются
форматами вывода (см. \*(rN(\*(dM)).
.sh "ДОПОЛНИТЕЛЬНЫЕ ССЫЛКИ"
append(quel),
delete(quel),
range(quel),
replace(quel),
retrieve(quel),
date(quel),
serial(quel),
\*(rN(\*(dM)
.sh "ОШИБКИ И ОГРАНИЧЕНИЯ"
Максимальное количество переменных, которые могут
присутствовать в одном запросе - 10.
.s3
Численное переполнение, потеря значимости
и деление на ноль не отлавливаются.
.s3
При преобразованиях из одного числового типа в другой
проверка на переполнение не производится.


