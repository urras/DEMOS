.th EQUEL \*(DM "СУБД \*(RU. КОМАНДЫ \*(DM"
.if n .ds EE EQUEL
.if t .ds EE \s-2EQUEL\s0
.sh ИМЯ
equel \- встроенный в язык C интерфейс с QUEL
.sh ФОРМАТ
 \fBequel \fR[\fB\-d\fR] [\fB\-f\fR] [\fB\-r\fR] \fIfile\fB.q\fI ...\fR
.sh ОПИСАНИЕ
.bd Equel
предоставляет пользователю возможности сопряжения
универсального языка программирования ``\fBC\fR''
с \*(II,
при этом используется
препроцессор
и библиотека
\*(EE.
.s1
.bd Компиляция
.s2
Общая форма вызова препроцессора:
.s3
.ti +5
.bd equel
[\fI<ключи>\fR] \fIфайл1\fB.q\fR [\fI<ключи>\fR] \fIфайл2\fB.q\fR \fI...\fR
.s3
где ``\fIфайлn\fB.q''
это имена исходных файлов,
которые должны заканчиваться
.bd \&.q.
Выходная информация помещается в файл
``\fIfilen\fB.c\fR''.
При вызове можно задавать любое необходимое число файлов.
.br
Имеются следующие ключи:
.de xp
.s3
.lp +5 5
.if n \fB\\$1\fR\t\c
.if t \fB\\$1\fP\t\c
..
.xp \-d
Генерировать программу с печатью имени исходного файла
и номером строки в которой допущена ошибка во время
выполнения программы. Это может оказаться полезным при отладке,
но требует дополнительной памяти процессу.
Умолчания отключены.
.xp \-f
Разместить получившуюся C-программу в выходном файле, в тех же строках, что и
во входном файле. Это помогает интерпретировать диагностические
сообщения языка C.
\*(EE
будет, как правило пытаться разместить все строки с C-операторами
в выходном файле на тех же строках, на которых они находились
во входном файле.
Иногда, во избежание
переполнения строк в \fBC\fR-препроцессоре,
запрос может быть разбит на несколько строк;
возможно перемещение некоторых \fBC\fR-операторов вперед
на несколько строк.
Если задан ключ
.bd \-f
\- этого никогда не произойдет, хотя буфер строк может переполняться,
строки с \fBC\fR-операторами будут находиться на прежних местах.
Это полезно для нахождения строки в
исходном файле, на которую ссылается
диагностическое сообщение \fBC\fR-компилятора
в соответствующем выходном файле.
.xp \-r
Сбрасывает значение ключей, устанавливая значения,
принимаемые ими по умолчанию.
Используется для погашения действия других ключей
на некоторые файлы, указанные в списке аргументов.
.i0
.dt
.s3
Затем преобразованные
\*(EE
файлы компилируются C-компилятором:
.s3
.ti +5
.bd cc
\fIfile1\fB.c\fR \fIfile2\fB.c\fR ...
.bd \-lq
.s3
.bd \-lq
показывает на необходимость использования
об'ектной библиотеки
\*(EE.
.s3
Все глобальные имена, стандартные программы
\*(EE
начинаются с символов "\fBII\fR"
и поэтому все глобальные переменные и имена процедур вида
\fBII\fIxxx\fR
резервируются для использования
\*(EE
и их не следует применять пользователям
\*(EE.
.s1
.sh "СМ.ТАКЖЕ"
 "\fBПрограммирование на языке \*(EE\fR", в документации по \*(Ru,
 "\fBСправочное руководство по языку C\fR", в документации по ОС \*(DM,
 Equel(quel), в данном руководстве,
 Quel(QUEL),  в данном руководстве.
.sh ОШИБКИ
.s3
Включение EQUEL-файла оператором \fB#include\fR в параметризированный
целевой список или в скобки с индексами массива переменных \fBC\fR
производится неправильно.
.sh ПРИМЕРЫ
Примеры программ на языке \*(EE приведены в справочнике Examples:
equeldemo.q - простой пример, equeltut.q - комплексный пример, содержащий
подробные комментарии.
