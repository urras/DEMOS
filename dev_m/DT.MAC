.MCALL  .MODULE
.MODULE DT,RELEASE=V05,VERSION=00,COMMENT=<DECTAPE HANDLER>,AUDIT=YES

;                        COPYRIGHT (C) 1983 BY
;             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;                         ALL RIGHTS RESERVED.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
\       .SBTTL  MACROS AND DEFINITIONS
.MCALL  .DRDEF
        .DRDEF  DT,1,FILST$,578.,177340,214
TCST    = DT$CSR
TCCM    = TCST+2
TCWC    = TCCM+2
TCBA    = TCWC+2
TCDT    = TCBA+2
DTCNT   = 8.
DTNREG  = 5
\       .SBTTL  DRIVER ENTRY
        .DRBEG  DT
        MOV     #DTCNT,(PC)+
DTTRY:   .WORD 0
        CLR     @#TCCM
        BR      DTCMN
.IF NE  ERL$G
DTSTPJ: JMP     DTSTOP
        .DRAST  DT,6,DTSTPJ
.IFF
        .DRAST  DT,6,DTSTOP
.ENDC
DTCMN:  MOV     R0,-(SP)
        MOV     DTCQE,R5
        MOV     #TCCM,R4
        MOV     (R5)+,-(SP)
        MOV     (R5)+,R0
        CMP     (SP),#DTDSIZ
        BHIS    HERROR
        BIC     #^C<3400>,R0
        BIT     #100100,(R4)
        BMI     DTERR
.IF NE  ERL$G
        BNE     1$
        JMP     RETRY
.IFF
        BEQ     RETRY
.ENDC
1$:     BIT     #2,(R4)
        BEQ     DTDONE
        CMP     @#TCDT,BWANT
        BEQ     BLKFND
DIRECT: BLE     FORWARD
REVERSE:BIS     #4000,R0
        SUB     #2,(SP)
        BR      FORWARD
FORW1:  BIS     #10000,R0
FORWARD:BIS     #103,R0
        MOV     (SP)+,BWANT
RETRNI: MOV     R0,(R4)
        MOV     (SP)+,R0
        RTS     PC
ENDZR:  BIT     #4000,(R4)
        BEQ     REVERSE
BLKFND: BIT     #4000,(R4)
        BNE     FORWARD
        BIS     #10115,R0
.IF EQ  MMG$T
        MOV     (R5)+,@#TCBA
.IFF
        JSR     PC,@$MPPTR
        MOV     (SP)+,@#TCBA
        MOV     R0,(PC)+
10$:     .BLKW
        MOV     (SP)+,R0
        BIT     #1700,R0
        BNE     HERROR
        BIS     10$,R0
.ENDC
        MOV     (R5),(SP)
        BMI     1$
        BEQ     DTDONE
        NEG     (SP)
        BIC     #10,R0
1$:     MOV     (SP)+,@#TCWC
        BR      RETRNI
DTERR:  BIT     #104000,@#TCST
        BPL     NOTEZ
        BIT     #2,(R4)
        BNE     ENDZR
NOTEZ:
.IF NE  ERL$G
        BIT     #114400,@#TCST
        BEQ     2$
        CLR     DTTRY
        BR      HERROR
2$:     MOVB    #11,@#TCCM
        TST     (SP)+
        MOV     (SP)+,R0
        .FORK   DTFBLK
        MOV     PC,R5
        ADD     #DTRBUF-.,R5
        MOV     R5,R2
        MOV     #DT$CSR,R3
        MOV     #DTNREG,R4
DTRREG: MOV     (R3)+,(R5)+
        DEC     R4
        BNE     DTRREG
        MOV     #DTNREG,R3
        ADD     #DTCNT*400,R3
        MOV     DTCQE,R5
        MOV     DTTRY,R4
        DEC     R4
        ADD     #DT$COD*400,R4
        JSR     PC,@$ELPTR
        MOV     #TCCM,R4
        MOV     DTCQE,R5
        MOV     R0,-(SP)
        MOV     (R5)+,-(SP)
        MOV     (R5)+,R0
        BIC     #^C<3400>,R0
1$:
.ENDC
        DEC     DTTRY
        BGT     RETRY
HERROR: MOV     DTCQE,R5
        BIS     #HDERR$,@-(R5)
DTDONE: TST     (SP)+
        MOV     (SP)+,R0
.IF NE  ERL$G
        TST     DTTRY
        BEQ     DTSTOP
        MOVB    #11,@#TCCM
        .FORK   DTFBLK
        MOV     #DT$COD*400+377,R4
        MOV     DTCQE,R5
        JSR     PC,@$ELPTR
        BR      DTEXIT
.ENDC
DTSTOP: MOVB    #11,@#TCCM
.IF NE  ERL$G
        CLR     DTFBLK+2
.ENDC
DTEXIT: .DRFIN  DT
RETRY:  TSTB    @#TCST
        BPL     10$
        JMP     FORW1
10$:    ADD     #4,BWANT
        CMP     (PC)+,(SP)
BWANT:   .WORD  0
        JMP     DIRECT
.IF NE  ERL$G
DTFBLK: .WORD   0,0,0,0
DTRBUF: .BLKW   DTNREG
.ENDC
\.SBTTL BOOTSTRAP DRIVER
        .DRBOT  DT,BOOT1,READ
.       = DTBOOT+40
BOOT1:  JMP     @#BOOT-DTBOOT
.       = DTBOOT+210
READ:   MOV     #TCCM,R4
        MOV     #TCDT,R3
1$:     MOV     R0,R5
        SUB     #2,R5
        MOV     #4003,@R4
2$:     BIT     #100200,@R4
        BEQ     2$
        BMI     6$
        CMP     R5,@R3
        BLT     1$
3$:     MOV     #3,@R4
4$:     BIT     #100200,@R4
        BEQ     4$
        BMI     6$
        CMP     R0,@R3
        BGT     3$
        BLT     1$
        MOV     R2,-(R3)
        NEG     R1
        MOV     R1,-(R3)
        MOV     #5,@R4
5$:     BIT     #100200,@R4
        BEQ     5$
        BMI     BIOERR
        CLR     @R4
        RTS     PC
6$:     TST     @#DT$CSR
        BPL     BIOERR
        BIT     #4000,@R4
        BNE     3$
        BR      1$
.       = DTBOOT+602
BOOT:   MOV     #10000,SP
        MOV     @#TCCM,-(SP)
        BIC     #^C<3400>,@SP
        SWAB    @SP
        MOV     #2,R0
        MOV     #<4*400>,R1
        MOV     #1000,R2
        JSR     PC,READ
        MOV     #READ-DTBOOT,@#B$READ
        MOV     #B$DNAM,@#B$DEVN
        MOV     (SP)+,@#B$DEVU
        JMP     @#B$BOOT
        .DREND  DT
.END
