head     1.2;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.2
date     89.01.31.17.20.19;  author avg;  state Exp;
branches ;
next     1.1;

1.1
date     88.01.05.18.36.32;  author andrew;  state Exp;
branches ;
next     ;


desc
@
adb
@


1.2
log
@Сделан разбор стека ядра в режиме IPK_FASTKOV.
@
text
@#
/*
 *
 *      UNIX debugger
 * $Log:        findfn.c,v $
 * Revision 1.1  88/01/05  18:36:32  andrew
 * Initial revision
 *
 */

#include "defs.h"


MSG             NOCFN,R_NOCFN;

INT             callpc;
BOOL            localok;
SYMTAB          symbol;

STRING          errflg;

OVTAG           curov;
INT             overlay;
L_INT           var[36];

INT             kernel;

findroutine(cframe)
	L_INT           cframe;
{
	REG INT         narg, inst;
	INT             lastpc, back2;
	BOOL            v;
	OVTAG           savov;
	INT             curovl;

	v=FALSE; localok=FALSE; lastpc=callpc;
	if(overlay) {
		/*
		 *  Save the previous overlay. Don't restore it,
		 *  so that the next call will have the correct previous
		 *  overlay.  The caller must save and restor the original
		 *  overlay if needed.
		 */
		savov = curov;
		curovl=get(cframe-2, DSP);
		/*
		 * If we use adb for ripping out kernel dump with IPK_FASTKOV,
		 * frame field contains an old OVLY_PAR instead of old _ovno.
		 */
		if( kernel && curovl >= 31 ) {
			extern INT kern_pars[32];
			int i;

			for( i = 1 ; i < 32 && kern_pars[i] ; i++ ) {
				if( kern_pars[i] == curovl ) {
					curovl = i;
					break;
				}
			}
		}
		curovl &= 037;
		setovmap(curovl);
	}
	callpc=get(cframe+2, DSP); back2=get(leng(callpc-2), ISP);
	IF (inst=get(leng(callpc-4), ISP)) == 04737     /* jsr pc,*$... */
	THEN    narg = 1;
	ELIF (inst&~077)==04700                 /* jsr pc,... */
	THEN    narg=0; v=(inst!=04767);
	ELIF (back2&~077)==04700
	THEN    narg=0; v=TRUE;
	ELSE    errflg=ediag(NOCFN,R_NOCFN);
		symbol.symc[0] = '*';
		symbol.symc[1] = '*';
		symbol.symc[2] = '*';
		symbol.symc[3] = 0;
		symbol.symv = 0;
		return(0);
	FI
	if (overlay)
		setovmap(savov);        /* previous overlay, for findsym */
	IF findsym( (v ? lastpc : ((inst==04767?callpc:0) + back2) ),ISYM) == -1
	    ANDF !v
	THEN    symbol.symc[0] = '?';
		symbol.symc[1] = 0;
		symbol.symv = 0;
	ELSE    localok=TRUE;
	FI
	if (overlay)
		setovmap(curovl);
	inst = get(leng(callpc), ISP);
	IF inst == 062706               /* add $n,sp */
	THEN
		narg += get(leng(callpc+2), ISP)/2;
		return(narg);
	FI
	IF inst == 05726                /* tst (sp)+ */
	THEN
		return(narg+1);
	FI
	IF inst == 022626               /* cmp (sp)+,(sp)+ */
	THEN
		return(narg+2);
	FI
	return(narg);
}
@


1.1
log
@Initial revision
@
text
@d4 5
a8 2
 *	UNIX debugger
 * $Log$
d16 3
a18 3
INT		callpc;
BOOL		localok;
SYMTAB		symbol;
d20 1
a20 1
STRING		errflg;
d22 3
a24 3
OVTAG		curov;
INT		overlay;
L_INT		var[36];
d26 1
d29 1
a29 1
	L_INT		cframe;
d31 5
a35 4
	REG INT		narg, inst;
	INT		lastpc, back2;
	BOOL		v;
	OVTAG		savov, curovl;
d47 16
d66 4
a69 4
	IF (inst=get(leng(callpc-4), ISP)) == 04737	/* jsr pc,*$... */
	THEN	narg = 1;
	ELIF (inst&~077)==04700			/* jsr pc,... */
	THEN	narg=0; v=(inst!=04767);
d71 1
a71 1
	THEN	narg=0; v=TRUE;
d73 5
d81 1
a81 1
		setovmap(savov);	/* previous overlay, for findsym */
d84 1
a84 1
	THEN	symbol.symc[0] = '?';
d87 1
a87 1
	ELSE	localok=TRUE;
d92 1
a92 1
	IF inst == 062706		/* add $n,sp */
d97 1
a97 1
	IF inst == 05726		/* tst (sp)+ */
d101 1
a101 1
	IF inst == 022626		/* cmp (sp)+,(sp)+ */
@
