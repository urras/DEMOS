head     1.1;
access   ;
symbols  MNOS12:0.0.1;
locks    ;
comment  @/ @;


1.1
date     86.06.01.20.10.50;  author dmitry;  state Exp;
branches 1.1.2.9;
next     ;

1.1.2.9
date     86.09.23.22.30.49;  author avg;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@DEMOS & MNOS 2 version
@
text
@<$Header: doprnt.s,v 0.0 86/04/20 21:23:03 root Exp $>
.even

/ C library -- conversions
/
/       $Log:   doprnt.s,v $

width=-8.
formp=-10.
rjust=-12.
ndfnd=-14.
ndigit=-16.
zfill=-18.
.globl  __doprnt

.globl  __strout
.globl  csv
.globl  cret

__doprnt:
	jsr     r5,csv
	sub     $128.+12.,sp
	mov     4(r5),formp(r5)         / format
	mov     6(r5),r4
loop:
	mov     sp,r3
	mov     formp(r5),r1
2:
	movb    (r1)+,r2
	beq     2f
	cmp     r2,$'%
	beq     2f
	movb    r2,(r3)+
	br      2b
2:
	mov     r1,formp(r5)
	cmp     r3,sp
	beq     2f
	mov     sp,r0
	mov     8(r5),-(sp)
	clr     -(sp)
	mov     r3,-(sp)
	sub     r0,(sp)
	mov     r0,-(sp)
	jsr     pc,__strout
	add     $8,sp
2:
	tst     r2
	bne     2f
	jmp     cret
2:
	mov     sp,r3
2:
	clr     rjust(r5)
	clr     ndigit(r5)
	mov     $' ,zfill(r5)
	cmpb    *formp(r5),$'-
	bne     2f
	inc     formp(r5)
	inc     rjust(r5)
2:
	cmpb    *formp(r5),$'0
	bne     2f
	mov     $'0,zfill(r5)
2:
	jsr     r3,gnum
	mov     r1,width(r5)
	clr     ndfnd(r5)
	cmp     r0,$'.
	bne     1f
	jsr     r3,gnum
	mov     r1,ndigit(r5)
1:
	mov     $swtab,r1
1:
	mov     (r1)+,r2
	bne     2f
	movb    r0,(r3)+
	jmp     prbuf
2:
	cmp     r0,(r1)+
	bne     1b
	jmp     (r2)
	.data
swtab:
	decimal;        'd
	octal;          'o
	hex;            'x
	charac;         'c
	string;         's
	longorunsg;     'l
	longorunsg;     'L
	unsigned;       'u
	remote;         'r
	long;           'D
	loct;           'O
	lhex;           'X
	lunsigned;      'U
	0;  0
	.text

longorunsg:
	movb    *formp(r5),r0
	inc     formp(r5)
	cmp     r0,$'o
	beq     loct
	cmp     r0,$'x
	beq     lhex
	cmp     r0,$'d
	beq     long
	cmp     r0,$'u
	beq     lunsigned
	dec     formp(r5)
	br      unsigned

octal:
	clr     r0
	br      1f
loct:
	mov     (r4)+,r0
1:
	mov     $8.,r2
	br      2f

hex:
	clr     r0
	br      1f

lhex:
	mov     (r4)+,r0
1:
	mov     $16.,r2
2:
	mov     (r4)+,r1
	br      compute

decimal:
	mov     (r4)+,r1
	sxt     r0
	bmi     3f
	br      2f

unsigned:
	clr     r0
	br      1f

long:
	mov     (r4)+,r0
	bge     1f
	mov     (r4)+,r1
3:
	neg     r0
	neg     r1
	sbc     r0
	movb    $'-,(r3)+
	br      2f

lunsigned:
	mov     (r4)+,r0
1:
	mov     (r4)+,r1
2:
	mov     $10.,r2

/
/ Algorithm courtesy Keith Davis
/
compute:
	mov     r5,-(sp)
	mov     r4,-(sp)
	mov     r0,r4
	mov     ndigit(r5),r0
	mov     r1,r5
	ashc    $0,r4
	beq     1f
	tst     r0
	beq     1f
	movb    $'0,(r3)+
1:
	jsr     pc,1f
	mov     (sp)+,r4
	mov     (sp)+,r5
	br      prbuf

1:
	clr     r0
	mov     r4,r1
	beq     2f
	div     r2,r0
	mov     r0,r4
	mov     r1,r0
2:
	mov     r5,r1
	asl     r2
	div     r2,r0
	asr     r2
	asl     r0
	cmp     r2,r1
	bgt     2f
	sub     r2,r1
	inc     r0
2:
	mov     r1,-(sp)
	mov     r0,r5
	bne     2f
	tst     r4
	beq     1f
2:
	jsr     pc,1b
1:
	mov     (sp)+,r0
	add     $'0,r0
	cmp     r0,$'9
	ble     1f
	add     $'a-'0-10.,r0
1:
	movb    r0,(r3)+
	rts     pc

charac:
	mov     $' ,zfill(r5)
	mov     (r4)+,r0
	bic     $!377,r0
	beq     prbuf
	movb    r0,(r3)+
	br      prbuf

string:
	mov     $' ,zfill(r5)
	mov     ndigit(r5),r1
	mov     (r4),r2
	mov     r2,r3
	bne     1f
	mov     $nulstr,r2
	mov     r2,r3
	mov     r2,(r4)
1:
	tstb    (r2)+
	beq     1f
	inc     r3
	sob     r1,1b
1:
	mov     (r4)+,r2
	br      prstr

remote:
	mov     (r4)+,r4
	mov     (r4)+,formp(r5)
	jmp     loop

prbuf:
	mov     sp,r2
prstr:
	sub     r2,r3
	mov     width(r5),r1
	sub     r3,r1
	bge     1f
	clr     r1
1:
	tst     rjust(r5)
	bne     1f
	neg     r1
1:
	mov     zfill(r5),-(sp)
	mov     8(r5),-(sp)
	mov     r1,-(sp)
	mov     r3,-(sp)
	mov     r2,-(sp)
	jsr     pc,__strout
	add     $10.,sp
	jmp     loop

gnum:
	clr     ndfnd(r5)
	clr     r1
1:
	movb    *formp(r5),r0
	inc     formp(r5)
	sub     $'0,r0
	cmp     r0,$'*-'0
	bne     2f
	mov     (r4)+,r0
	br      3f
2:
	cmp     r0,$9.
	bhi     1f
3:
	inc     ndfnd(r5)
	mul     $10.,r1
	add     r0,r1
	br      1b
1:
	add     $'0,r0
	rts     r3

.data
nulstr:
	<(null)\0>
@


1.1.2.9
log
@ORIGINAL 2.9 VERSION
@
text
@d1 3
d5 2
d14 1
a14 1
.globl	__doprnt
d16 3
a18 3
.globl	__strout
.globl	csv
.globl	cret
d21 4
a24 4
	jsr	r5,csv
	sub	$128.+12.,sp
	mov	4(r5),formp(r5)		/ format
	mov	6(r5),r4
d26 2
a27 2
	mov	sp,r3
	mov	formp(r5),r1
d29 6
a34 6
	movb	(r1)+,r2
	beq	2f
	cmp	r2,$'%
	beq	2f
	movb	r2,(r3)+
	br	2b
d36 11
a46 11
	mov	r1,formp(r5)
	cmp	r3,sp
	beq	2f
	mov	sp,r0
	mov	8(r5),-(sp)
	clr	-(sp)
	mov	r3,-(sp)
	sub	r0,(sp)
	mov	r0,-(sp)
	jsr	pc,__strout
	add	$8,sp
d48 3
a50 3
	tst	r2
	bne	2f
	jmp	cret
d52 1
a52 1
	mov	sp,r3
d54 7
a60 7
	clr	rjust(r5)
	clr	ndigit(r5)
	mov	$' ,zfill(r5)
	cmpb	*formp(r5),$'-
	bne	2f
	inc	formp(r5)
	inc	rjust(r5)
d62 3
a64 3
	cmpb	*formp(r5),$'0
	bne	2f
	mov	$'0,zfill(r5)
d66 7
a72 7
	jsr	r3,gnum
	mov	r1,width(r5)
	clr	ndfnd(r5)
	cmp	r0,$'.
	bne	1f
	jsr	r3,gnum
	mov	r1,ndigit(r5)
d74 1
a74 1
	mov	$swtab,r1
d76 4
a79 4
	mov	(r1)+,r2
	bne	2f
	movb	r0,(r3)+
	jmp	prbuf
d81 3
a83 3
	cmp	r0,(r1)+
	bne	1b
	jmp	(r2)
d86 13
a98 13
	decimal;	'd
	octal;		'o
	hex;		'x
	charac;		'c
	string;		's
	longorunsg;	'l
	longorunsg;	'L
	unsigned;	'u
	remote;		'r
	long;		'D
	loct;		'O
	lhex;		'X
	lunsigned;	'U
d103 12
a114 12
	movb	*formp(r5),r0
	inc	formp(r5)
	cmp	r0,$'o
	beq	loct
	cmp	r0,$'x
	beq	lhex
	cmp	r0,$'d
	beq	long
	cmp	r0,$'u
	beq	lunsigned
	dec	formp(r5)
	br	unsigned
d117 2
a118 2
	clr	r0
	br	1f
d120 1
a120 1
	mov	(r4)+,r0
d122 2
a123 2
	mov	$8.,r2
	br	2f
d126 2
a127 2
	clr	r0
	br	1f
d130 1
a130 1
	mov	(r4)+,r0
d132 1
a132 1
	mov	$16.,r2
d134 2
a135 2
	mov	(r4)+,r1
	br	compute
d138 4
a141 4
	mov	(r4)+,r1
	sxt	r0
	bmi	3f
	br	2f
d144 2
a145 2
	clr	r0
	br	1f
d148 3
a150 3
	mov	(r4)+,r0
	bge	1f
	mov	(r4)+,r1
d152 5
a156 5
	neg	r0
	neg	r1
	sbc	r0
	movb	$'-,(r3)+
	br	2f
d159 1
a159 1
	mov	(r4)+,r0
d161 1
a161 1
	mov	(r4)+,r1
d163 1
a163 1
	mov	$10.,r2
d169 10
a178 10
	mov	r5,-(sp)
	mov	r4,-(sp)
	mov	r0,r4
	mov	ndigit(r5),r0
	mov	r1,r5
	ashc	$0,r4
	beq	1f
	tst	r0
	beq	1f
	movb	$'0,(r3)+
d180 4
a183 4
	jsr	pc,1f
	mov	(sp)+,r4
	mov	(sp)+,r5
	br	prbuf
d186 6
a191 6
	clr	r0
	mov	r4,r1
	beq	2f
	div	r2,r0
	mov	r0,r4
	mov	r1,r0
d193 9
a201 9
	mov	r5,r1
	asl	r2
	div	r2,r0
	asr	r2
	asl	r0
	cmp	r2,r1
	bgt	2f
	sub	r2,r1
	inc	r0
d203 5
a207 5
	mov	r1,-(sp)
	mov	r0,r5
	bne	2f
	tst	r4
	beq	1f
d209 1
a209 1
	jsr	pc,1b
d211 5
a215 5
	mov	(sp)+,r0
	add	$'0,r0
	cmp	r0,$'9
	ble	1f
	add	$'a-'0-10.,r0
d217 3
a219 3
	movb	r0,(r3)+
	rts	pc
	
d221 6
a226 6
	mov	$' ,zfill(r5)
	mov	(r4)+,r0
	bic	$!377,r0
	beq	prbuf
	movb	r0,(r3)+
	br	prbuf
d229 8
a236 8
	mov	$' ,zfill(r5)
	mov	ndigit(r5),r1
	mov	(r4),r2
	mov	r2,r3
	bne	1f
	mov	$nulstr,r2
	mov	r2,r3
	mov	r2,(r4)
d238 4
a241 4
	tstb	(r2)+
	beq	1f
	inc	r3
	sob	r1,1b
d243 2
a244 2
	mov	(r4)+,r2
	br	prstr
d247 3
a249 3
	mov	(r4)+,r4
	mov	(r4)+,formp(r5)
	jmp	loop
d252 1
a252 1
	mov	sp,r2
d254 5
a258 5
	sub	r2,r3
	mov	width(r5),r1
	sub	r3,r1
	bge	1f
	clr	r1
d260 3
a262 3
	tst	rjust(r5)
	bne	1f
	neg	r1
d264 8
a271 8
	mov	zfill(r5),-(sp)
	mov	8(r5),-(sp)
	mov	r1,-(sp)
	mov	r3,-(sp)
	mov	r2,-(sp)
	jsr	pc,__strout
	add	$10.,sp
	jmp	loop
d274 2
a275 2
	clr	ndfnd(r5)
	clr	r1
d277 7
a283 7
	movb	*formp(r5),r0
	inc	formp(r5)
	sub	$'0,r0
	cmp	r0,$'*-'0
	bne	2f
	mov	(r4)+,r0
	br	3f
d285 2
a286 2
	cmp	r0,$9.
	bhi	1f
d288 4
a291 4
	inc	ndfnd(r5)
	mul	$10.,r1
	add	r0,r1
	br	1b
d293 2
a294 2
	add	$'0,r0
	rts	r3
@
