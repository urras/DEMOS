head     1.5;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.5
date     88.09.17.23.11.11;  author avg;  state Exp;
branches ;
next     1.4;

1.4
date     88.05.06.19.13.58;  author avg;  state Exp;
branches ;
next     1.3;

1.3
date     88.04.10.19.12.41;  author avg;  state Exp;
branches ;
next     1.2;

1.2
date     88.04.02.20.32.27;  author nms;  state Exp;
branches ;
next     1.1;

1.1
date     88.02.13.16.41.01;  author korotaev;  state Exp;
branches ;
next     ;


desc
@
@


1.5
log
@Исправлена работа с маленькими файлами.
@
text
@/*
 * Entry point, initialization, miscellaneous routines.
 */

#include "less.h"
#include "position.h"
#include <setjmp.h>

public int      ispipe;
public jmp_buf  main_loop;
public char *   first_cmd;
public char *   every_first_cmd;
public int      new_file;
public int      is_tty;
public char     current_file[128];
public int ac;
public char **av;
public int curr_ac;
#if EDITOR
public char *   editor;
#endif

extern int file;
extern int nbufs;
extern int sigs;
extern int quit_at_eof;
extern int p_nbufs, f_nbufs;
extern int back_scroll;
extern int top_scroll;
extern int sc_height;

/*
 * Edit a new file.
 * Filename "-" means standard input.
 * No filename means the "current" file, from the command line.
 */
	public void
edit(filename)
	char *filename;
{
	register int f;
	char message[100];
	static int any_edited = 0;
	static int hold_scroll = 0;

	if (filename == NULL || *filename == '\0')
	{
		if (curr_ac >= ac)
		{
			error(ediag("Current file not exist",
				    "Нет текущего файла"));
			return;
		}
		filename = av[curr_ac];
	}
	if (strcmp(filename, "-") == 0)
		f = 0;  /* Standard input */
	else    if ( (f = checkf(filename)) < 0)
		{
			switch (f) {
			case -3:
				sprintf(message, ediag("*** %.*s: Directory ***",
						       "*** %.*s:  Каталог  ***"),
				      error_width()-19, filename);
				break;
			case -2:
				sprintf(message, ediag("*** %.*s: Is a binary file? ***",
						       "*** %.*s: Не текстовый файл ***"),
				      error_width()-27, filename);
				break;
			case -1:
				sprintf(message, ediag("*** %.*s:  Can not open  ***",
						       "*** Не могу открыть %.*s ***"),
				      error_width()-25, filename);
				break;
			}                    /* до этого места */
		if (any_edited)
			error(message);
		else
		{
			puts(message);
			hold_scroll = 1;
		}
		return;
	}

	if (isatty(f))
	{
		/*
		 * Not really necessary to call this an error,
		 * but if the control terminal (for commands)
		 * and the input file (for data) are the same,
		 * we get weird results at best.
		 */
		error(error("Can't display input from tty",
			    "Не могу отображать ввод с терминала"));
		if (f > 0)
			close(f);
		return;
	}

	/*
	 * Close the current input file and set up to use the new one.
	 */
	if (file > 0)
		close(file);
	new_file = 1;
	strcpy(current_file, filename);
	ispipe = (f == 0);
	file = f;
	ch_init( (ispipe) ? p_nbufs : f_nbufs );
	init_mark();
	if (every_first_cmd != NULL)
		first_cmd = every_first_cmd;
	if (is_tty)
	{
		any_edited = 1;
		if (hold_scroll)
		{
			/*
			 * Before erasing the screen contents,
			 * display the file name and ask for a keystroke.
			 */
			error(filename);
			hold_scroll = 1;
		}
		if (first_cmd == NULL || *first_cmd == '\0')
		{
			/*
			 * Display the first screen.
			 */
			pos_clear();
			jump_back(1);
		} else
		{
			/*
			 * The first_cmd will hopefully redisplay the
			 * screen, so we need not display anything yet.
			 * Indicate there is nothing yet on the screen.
			 */
			pos_clear();
		}
	}
}

/*
 * Edit the next file in the command line list.
 */
	public void
next_file(n)
	int n;
{
	if (curr_ac + n >= ac)
	{
		if (quit_at_eof)
			quit();
		error(ediag("No (N-th) next file",
			    "Нет (N-того) следующего файла"));
	} else
		edit(av[curr_ac += n]);
}

/*
 * Edit the previous file in the command line list.
 */
	public void
prev_file(n)
	int n;
{
	if (curr_ac - n < 0)
		error(ediag("No (N-th) previous file",
			    "Нет (N-того) предыдущего файла"));
	else
		edit(av[curr_ac -= n]);
}

/*
 * Copy a file directly to standard output.
 * Used if standard output is not a tty.
 */
	static void
cat_file()
{
	register int c;

	while ((c = ch_forw_get()) != EOF)
		putc(c);
	flush();
}

/*
 * Entry point.
 */
main(argc, argv)
	int argc;
	char *argv[];
{
	char *getenv();
	char *p;

	/*
	 * Process command line arguments and MORE environment arguments.
	 */
	init_option();
	scan_option(getenv("MORE"));

	/*
	 * If this program called as 'page', allow setting -c option
	 */
	if( (p = rindex(argv[0], '/')) == NULL )
		p = argv[0];
	else
		p++;
	if( !strcmp("page", p) )
		top_scroll = 1;
	/*
	 * Command line arguments override environment arguments.
	 */
	if( argc == 1 && isatty(0) ) {
		fprintf( stderr, ediag("Usage: %s [-%s] [-hn] [-xn] [-b[fp]n] +cmd [file...]\n",
				       "Вызов: %s [-%s] [-hn] [-xn] [-b[fp]n] +команда [файл...]\n"),
				 argv[0], all_options);
		exit(1);
	}
	argv++;
	while ( (--argc > 0) &&
		(argv[0][0] == '-' || argv[0][0] == '+') &&
		argv[0][1] != '\0')
		scan_option(*argv++);

#if EDITOR
	editor = getenv("EDITOR");
	if (editor == NULL || *editor == '\0')
		editor = EDIT_PGM;
#endif

	/*
	 * Set up list of files to be examined.
	 */
	ac = argc;
	av = argv;
	curr_ac = 0;

	/*
	 * Set up terminal, etc.
	 */
	is_tty = isatty(1);
	if (!is_tty)
	{
		/*
		 * Output is not a tty.
		 * Just copy the input file(s) to output.
		 */
		if (ac < 1)
		{
			edit("-");
			cat_file();
		} else
		{
			do
			{
				edit((char *)NULL);
				if (file >= 0)
					cat_file();
			} while (++curr_ac < ac);
		}
		exit(0);
	}

	raw_mode(1);
	get_term();
	open_getc();
	init();

	if (back_scroll < 0)
	{
		/* {{ KLUDGE }} */
		back_scroll = sc_height-1;
		if (top_scroll)
			back_scroll--;
	}

	if (setjmp(main_loop))
		quit();
	init_signals();

	/*
	 * Select the first file to examine.
	 */
	if (ac < 1)
		edit("-");      /* Standard input */
	else
	{
		/*
		 * Try all the files named as command arguments.
		 * We are simply looking for one which can be
		 * opened without error.
		 */
		do
		{
			edit((char *)NULL);
			if (file >= 0)
				/* We can open this file. */
				break;
			putc('\n');  flush();
		} while (++curr_ac < ac);
	}

	if (file >= 0)
		commands();
	quit();
}

/*
 * Exit the program.
 */
	public void
quit()
{
	/*
	 * Put cursor at bottom left corner, clear the line,
	 * reset the terminal modes, and exit.
	 */
	lower_left();
	clear_eol();
	deinit();
	flush();
	raw_mode(0);
	exit(0);
}
@


1.4
log
@Теперь в случае, если вызывается как page, то подразумевает
ключ -c.
@
text
@a31 1

d132 1
@


1.3
log
@Сделан ediag + исправлены некоторые ошибки
@
text
@d199 1
a200 1

a202 1
	 * Command line arguments override environment arguments.
d206 13
@


1.2
log
@Убрал раздражающее "нажмите <вк>"
@
text
@d9 7
a15 7
public int	ispipe;
public jmp_buf	main_loop;
public char *	first_cmd;
public char *	every_first_cmd;
public int	new_file;
public int	is_tty;
public char 	current_file[128];
d20 1
a20 1
public char *	editor;
d51 2
a52 1
			error("Нет текущего файла");
d58 3
a60 3
		f = 0;	/* Standard input */
	else    if ( (f = checkf(filename)) < 0)    /* #31.w */
		{                                  /* весь кусок */
d63 3
a65 2
				sprintf(message, "*** %.*s:  Каталог ***",
				      error_width()-18, filename);
d68 2
a69 1
				sprintf(message, "*** %.*s: Не текстовый файл ***",
d73 2
a74 1
				sprintf(message, "*** Не могу открыть %.*s ***",
d96 2
a97 1
		error("Не могу отображать ввод с терминала");
d130 2
a131 2
			/* 
			 * Display the first screen. 
d136 1
a136 1
			/* 
d139 1
a139 1
			 * Indicate there is nothing yet on the screen. 
d157 2
a158 1
		error("No (N-th) next file");
d171 2
a172 1
		error("No (N-th) previous file");
a179 1
 * ..., добавляя в качестве разделителя имя файла
a183 1
	static char sep[12] = "========== ";
a185 1
	puts(sep); puts(current_file); puts(sep);puts("\n");
d202 1
a202 1
	 * Process command line arguments and LESS environment arguments.
d206 7
a212 1
	scan_option(getenv("LESS"));
d214 2
a215 2
	while ( (--argc > 0) && 
		(argv[0][0] == '-' || argv[0][0] == '+') && 
d279 2
a280 2
		edit("-");	/* Standard input */
	else 
@


1.1
log
@Initial revision
@
text
@d45 1
a45 2
	static int hold_scroll = 1;
 /*     static int hold_scroll = 0;             #31.w */
@
