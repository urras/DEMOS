head     4.2;
access   ;
symbols  RED_4:3.1.2 RED_3_9:3.7 DEMOS_2:3.4 COMMON3:3.2 ES:3.1.1;
locks    ;
comment  @ * @;


4.2
date     88.03.31.22.49.23;  author alex;  state Exp;
branches ;
next     4.1;

4.1
date     88.03.31.22.05.29;  author alex;  state Exp;
branches ;
next     3.8;

3.8
date     88.03.30.17.27.23;  author alex;  state Exp;
branches ;
next     3.7;

3.7
date     87.06.05.23.51.43;  author alex;  state Exp;
branches ;
next     3.6;

3.6
date     87.06.04.23.44.54;  author alex;  state Exp;
branches ;
next     3.5;

3.5
date     86.09.19.19.57.36;  author alex;  state Stab;
branches ;
next     3.4;

3.4
date     86.08.04.20.53.58;  author alex;  state Exp;
branches ;
next     3.3;

3.3
date     86.07.24.23.38.32;  author alex;  state Exp;
branches ;
next     3.2;

3.2
date     86.07.24.19.06.50;  author alex;  state Exp;
branches ;
next     3.1;

3.1
date     86.04.20.23.43.41;  author alex;  state Exp;
branches 3.1.1.1 3.1.2.1;
next     ;

3.1.1.1
date     86.06.05.00.07.27;  author alex;  state Stab;
branches ;
next     ;

3.1.2.1
date     87.06.19.17.03.04;  author alex;  state Stab;
branches ;
next     ;


desc
@  Полиэкранный редактор RED
  Версия 3.
  ИАЭ им. Курчатова, Москва.
@


4.2
log
@Исправлена ошибка при работе на терминале Электроника.
@
text
@/*
 *      Редактор RED.
 *      r.wind.c - работа с окнами
 *      $Header: r.wind.c,v 4.1 88/03/31 22:05:29 alex Exp $
 *      $Log:	r.wind.c,v $
 * Revision 4.1  88/03/31  22:05:29  alex
 * Версия 4.1 - обкатка на UTEC, СМ
 * 
 * Revision 3.8  88/03/30  17:27:23  alex
 * Исправлена ошибка в readch. Введены функции для удаления/вставки
 * строк на экране через ChangeScroll/InsertLine-DeleteLine.
 * 
 * Revision 3.1.2.1  87/06/19  17:03:04  alex
 * Start revision for red/4
 * 
 * Revision 3.7  87/06/05  23:51:43  alex
 * Добавлен roll для терминалов с sr/sf и отображение
 *  табуляций в режиме -t + всякая мелочь
 * 
 * Revision 3.6  87/06/04  23:44:54  alex
 * Scroll on -sr- or -al/dl- added
 * 
 * Revision 3.5  86/09/19  19:57:36  alex
 * Версия для СМ-1700
 * 
 * Revision 3.4  86/08/04  20:53:58  alex
 * Bepqh dk LMNQ/DELNQ 2
 * 
 * Revision 3.3  86/07/24  23:38:32  alex
 * Исправлена ошибка в makeport.
 * 
 * Revision 3.2  86/07/24  19:06:50  alex
 * Об'единены версии текстов для ЕС и СМ
 * 
 * Revision 3.1.1.1  86/06/05  00:07:27  alex
 * Отлажено_на_модели
 * 
 * Revision 3.1  86/04/20  23:43:41  alex
 * Базовая версия для ЕС.
 * 
 * Revision 3.1  86/04/20  23:43:41  alex
 * *** empty log message ***
 * 
 *
 *
 */


#include "r.defs.h"

/*
 *   movew(nl) -
 *    сдвинуть текущее окно на nl строк вниз (+) или вверх
 */
movew(nl,fix)
int nl,fix;
{
	register int cc,cl,i;
	int nladd;
	cc = cursorcol;
	cl = cursorline;
	nladd = 0;
	if( nl == PL1MOVEW ) {
		nl = 1; nladd = defplline-1;
	}
	if( nl == MI1MOVEW ) {
		nl = -1; nladd = -defmiline+1;
	}
rep:
	if ((curwksp->ulhclno += nl) < 0) { nl -= curwksp->ulhclno;
		curwksp->ulhclno = 0;
	};
	if( nl == 0) return;
	if( on_scroll && scroll(nl,0))
	{
		if(nl>0)
			putup(curport->btext-nl+1, curport->btext);
		else
			putup(0,-nl-1);
	     goto afix;
	};
	if ( nladd ) {
		nl = nladd; nladd = 0; goto rep;
	}
	putup(0,curport->btext);
afix:
	if(fix && (i=cl-nl)>=0 && i<=curport->btext) cl=i;
	poscursor(cc,cl);
}

/*
 * movep(nc) -
 *  сдвинуть окно на nc строк вправо
 */
movep(nc)
int nc;
{
    register int cl,cc;
    cl = cursorline;
    cc = cursorcol;
    if ((curwksp->ulhccno + nc) < 0) nc = - curwksp->ulhccno;
    if (nc == 0) return;
    curwksp->ulhccno += nc;
    putup(0,curport->btext);
    if ((cc -= nc) < curport->ledit) cc = curport->ledit;
    else if (cc > curport->redit) cc = curport->redit;
    poscursor(cc,cl);
}

/*
 *  gtfcn(number) -
 *  перейти к строке number
 */
gtfcn(number)
int number;
{
    register int i;
    movew(number - curwksp->ulhclno - defplline,0);
    if ((i = number - curwksp->ulhclno) >= 0) {
        if (i > curport->btext) i = curport->btext;
        poscursor(cursorcol,i);
    }       
}
/*
 * cgoto(ln,col,slin,lkey) -
 * Подвести тек. окно search и mgotag
 * slin - номер строки, на которой был курсор раньше
 * (для стирания отметки курсора)
 * lkey = 0 - не двигать окно, если можно.
 */
cgoto(ln,col,slin,lkey)
int ln,col,slin,lkey;
{
    register int lin;
    lin  = ln - curwksp->ulhclno;
    if (lkey || lin  < 0 || lin  > curport->btext)
    {
        lkey = -1;
        lin = defplline;
        if ((curwksp->ulhclno = ln - defplline) < 0)
        {
            lin += curwksp->ulhclno;
            curwksp->ulhclno = 0;
        }
    }
    col -= curwksp->ulhccno;
    if (col < 0 || col > curport->rtext)
    {
        curwksp->ulhccno += col;
        col = 0;
        lkey = -1;
    }
    if (lkey) putup(0,curport->btext);
    else  if (slin >=0) putup(slin,slin);
    poscursor(col,lin);
}


/*
 * switchport(w) -
 * перейти к окну "w".
 * cursorcol, cursorline пересчитываются к новому окну
 */
switchport(ww)
struct viewport *ww;
{
    register struct viewport *w=ww;
    cursorcol  -= (w->ltext - curport->ltext);
    cursorline -= (w->ttext - curport->ttext);
    curport = w;
    if (curwksp = curport->wksp) curfile = curwksp->wfile;
}

/*
 * setupviewport() -
 *  создать новое окно
 *  c = 1 если окно имеет границы по краям
 */
setupviewport(ww,cl,cr,lt,lb,c)
struct viewport *ww;
int cl,cr,lt,lb,c;
{
    register int i,size;
    register struct viewport *w;
    w = ww;
    w->lmarg = cl;
    w->rmarg = cr;
    w->tmarg = lt;
    w->bmarg = lb;
    if (c)
    {
	w->ltext = cl + LMARG;
	w->rtext = cr - cl - 2*LMARG;
        w->ttext = lt + 1;
        w->btext = lb - lt - 2;
    }
    else
    {
        w->ltext = cl;
        w->rtext = cr - cl;
        w->ttext = lt;
        w->btext = lb - lt;
    }
    w->ledit = w->tedit = 0;
    w->redit = w->rtext;
    w->bedit = w->btext;
    /* eventually this extra space may not be needed */
    w->wksp = (struct workspace *)salloc(SWKSP);
    w->altwksp = (struct workspace *)salloc(SWKSP);
    w->firstcol = salloc(size = NLINES - lt + 1);
    for (i=0;i<size;i++) (w->firstcol)[i] = w->rtext + 1;
    w->lastcol = salloc(size);
    w->lmchars = salloc(size);
    w->rmchars = salloc(size);
    w->wksp->curfsd = openfsds[2]; /* "#" - так как он всегда есть */
}


/* makeport() -
 *  создание нового окна
 */
makeport(file)
char *file;
{
    register struct viewport *oldport, *newport;
    char horiz;             /* 1 - если горизонтально */
    register int i;
    int portnum;
    /* Есть ли место */
    if (nportlist >= MAXPORTLIST)
    {
        error(DIAG("Can't make any more windows.","Слишком много окон"));
        return;
    }
    if (cursorcol == 0 && cursorline > 0
        && cursorline < curport->btext) horiz = 1;
    else if (cursorline == 0 && cursorcol > 0
        && cursorcol < curport->rtext-1) horiz = 0;
    else
    {
        error(DIAG("Can't put a window there.","Здесь нельзя создать окно"));
        return;
    }
    oldport = curport;
    newport = portlist[nportlist++]=(struct viewport *)salloc(SVIEWPORT);
    /* Ищем номер curport */
    for (portnum=0;portlist[portnum]!=curport;portnum++);
    newport->prevport = portnum;
    oldport->wksp->ccol = oldport->altwksp->ccol = 0;
    oldport->wksp->crow = oldport->altwksp->crow = 0;
    if (horiz)
    {
        setupviewport(newport,oldport->lmarg,
        oldport->rmarg,
	oldport->ttext + cursorline,
        oldport->bmarg,1);
	oldport->bmarg = oldport->ttext + cursorline;
        oldport->btext = oldport->bedit = cursorline - 1;
        for (i=0;i <= newport->btext;i++)
        {
            newport->firstcol[i] =
                oldport->firstcol[i+cursorline+1];
            newport->lastcol[i] =
                oldport->lastcol[i+cursorline+1];
        }
    }
    else
    {
	setupviewport(newport,oldport->lmarg + cursorcol + 3-LMARG,
        oldport->rmarg,
        oldport->tmarg,
        oldport->bmarg,1);
	oldport->rmarg = oldport->lmarg + cursorcol + 2-LMARG;
	oldport->rtext = oldport->redit = cursorcol - LMARG;
        for (i=0;i <= newport->btext;i++)
        {
            if (oldport->lastcol[i] > oldport->rtext + 1)
            {
                newport->firstcol[i] = 0;
                newport->lastcol[i] = oldport->lastcol[i] -
                    cursorcol - 2;
                oldport->lastcol[i] = oldport->rtext + 1;
                oldport->rmchars[i] = MRMCH;
            }
        }
    }
    newport->flags &= ~WF_ROLL;
    oldport->flags &= ~WF_ROLL;
    switchport(newport);
    defplline = defmiline = (newport->btext)/ 3 + 1;
    if (editfile(file,0,0,1,1) <= 0 && editfile(deffile,0,0,0,1) <= 0)
        error(DIAG("Default file gone: notify sys admin.","Нет файла инструкций."));
    drawport(oldport,1);
    drawport(newport,1);
    poscursor(0,0);
}

/*
 * removeport() -
 *  уничтожить окно, созданное последним
 */
removeport()
{
    int j, pnum;
    register int i;
    register struct viewport *theport, *pport;
    if (nportlist == 1)
    {
        error (DIAG("Can't remove remaining port.","Нельзя уничтожить последнее окно"));
        return;
    }
    pport = portlist[pnum = (theport = portlist[--nportlist])->prevport];
    if (pport->bmarg != theport->bmarg)
    {
        /* Vertical */
        pport->firstcol[j = pport->btext+1] = 0;
        pport->lastcol[j++] = pport->rtext+1;
        for (i=0;i<=theport->btext;i++)
        {
            pport->firstcol[j+i] = theport->firstcol[i];
            pport->lastcol[j+i] = theport->lastcol[i];
        }
        pport->bmarg = theport->bmarg;
	pport->bedit = pport->btext = theport->ttext+theport->btext - pport->ttext;
    }
    else
    {
        /* Горизонтальное */
        for (i=0;i<=pport->btext;i++)
        {
            pport->lastcol[i] = theport->lastcol[i] +
                theport->lmarg - pport->lmarg;
            if (pport->firstcol[i] > pport->rtext)
                pport->firstcol[i] = pport->rtext;
        }
        pport->rmarg = theport->rmarg;
	pport->redit = pport->rtext = pport->rmarg - pport->lmarg - 2*LMARG;
    }
    pport->flags &= ~WF_ROLL;
    defplline = defmiline = (pport->btext)/ 3 + 1;
    drawport(pport,1);
    chgport(pnum);
    putup(0,curport->btext);
    poscursor(0,0);
    DEBUGCHECK;
    free(theport->firstcol);
    free(theport->lastcol);
    free(theport->lmchars);
    free(theport->rmchars);
    free((char *)theport->wksp);
    free((char *)theport->altwksp);
    free((char *)theport);
    DEBUGCHECK;
}

/*
 * chgport(portnum) -
 * перейти в следующее окно
 */
chgport(portnum)
int portnum;
{
    register struct viewport *oldport, *newport;
    oldport = curport;
    if (portnum < 0) for (portnum=0;portnum<nportlist &&
        oldport != portlist[portnum++];);
        oldport->wksp->ccol = cursorcol;
    oldport->wksp->crow = cursorline;
    newport = portlist[portnum%nportlist];
    if (newport == oldport) return;
    /*   drawport(oldport,newport);    */ switchport(newport);
    defplline = defmiline = (newport->btext) / 3 + 1;
    poscursor(curport->wksp->ccol,curport->wksp->crow);
}

/*
 * redisplay(w,w->wfile,from,to,delta) -
 * Перевыдать изменившиеся окна после сдвига строк в файле.
 * w - Рабочее пространство;
 * fn - номер имя измененного файла;
 * from, to, delta - диапазон изменившихся строк и
 * общее изменение числа строк в нем
 * fromd - строка, начиная с которой сделан сдвиг delta, <0 - сдвиг экрана
 *         запрещен
 * Делается следующее:
 *  1. Перевыдаются все окна, в которые попал измененный участок;
 *  2. Получают новые ссылки на fsd в тех рабочих пространствах,
 *     которые изменялись (из за breakfsd они могли измениться);
 *  3. Пересчитываются текущие номера строк в рабочих областях, если они
 *     отображают хвосты изменившихся файлов.
 */
redisplay(w,fn,from,to,delta,fromd)
struct workspace *w;
int from,to,delta,fn,fromd;
{
    register struct workspace *tw;
    register int i,j;
    int k,l,m,jd;
    int ul,tl;
    struct viewport *oport;
    for (i = 0; i < nportlist; i++)
    {
        if ((tw = portlist[i]->altwksp)->wfile == fn && tw != w)
        {
            /* Исправим указатель на fsd. */
            tw->curlno = tw->curflno = 0;
            tw->curfsd = openfsds[fn];
            /* Исправить номер строки */
            j = delta >= 0 ? to : from;
            if (tw->ulhclno > j) tw->ulhclno += delta;
        }
        if ((tw = portlist[i]->wksp)->wfile == fn && tw != w)
        {
            /* Исправляем указатель на fsd. */
            tw->curlno = tw->curflno = 0;
            tw->curfsd = openfsds[fn];
            /* Исправляем номер строки и позиции на экране */
            j = delta >= 0 ? to : from;
	    if (tw->ulhclno > j) tw->ulhclno += delta;
	    ul = tw->ulhclno;
	    /* Если изменилось, перевыдать окно */
	    j = (from > ul ? from : ul);
	    if ((k =  ul + portlist[i]->btext ) > to) k = to;
	    if (j <= k)
	    {
		oport = curport;
		l = cursorcol;
		m = cursorline;
		switchport(portlist[i]);
		if(fromd>=0 && fromd<=k && delta)
		{
		    jd = fromd;
		    if(jd < j) jd = j;
		    if(scroll(-delta,-1-(jd-ul)) <= 0) goto putall;
		    if( delta > 0 ) {
			    putup(j-ul, k-ul);
		    } else {
			    if(jd > j)
				    putup(j-ul, jd-1-ul);
			    putup(portlist[i]->btext-(-delta),portlist[i]->btext);
		    }
		    goto next;
		}
putall:
		putup(j - ul, delta == 0 ?
		k - ul : portlist[i]->btext);
next:
		switchport(oport);
		poscursor(l,m);
	    }
	}
    }
}

@


4.1
log
@Версия 4.1 - обкатка на UTEC, СМ
@
text
@d4 1
a4 1
 *      $Header: r.wind.c,v 3.8 88/03/30 17:27:23 alex Exp $
d6 3
d434 1
a434 1
		    if(scroll(-delta,jd-ul) <= 0) goto putall;
@


3.8
log
@Исправлена ошибка в readch. Введены функции для удаления/вставки
строк на экране через ChangeScroll/InsertLine-DeleteLine.
@
text
@d4 1
a4 1
 *      $Header: r.wind.c,v 3.1.2.1 87/06/19 17:03:04 alex Exp $
d6 4
@


3.7
log
@Добавлен roll для терминалов с sr/sf и отображение
 табуляций в режиме -t + всякая мелочь
@
text
@d2 1
a2 1
 *      Редактор RED. ИАЭ им. И.В. Курчатова, ОС ДЕМОС
d4 1
a4 1
 *      $Header: r.wind.c,v 3.6 87/06/04 23:44:54 alex Exp $
d6 7
d67 1
a67 1
	if( on_scroll && scroll(nl))
d373 1
a373 1
 * fn - имя измененного файла;
d376 2
a377 1
 *
d385 1
a385 1
redisplay(w,fn,from,to,delta)
d387 1
a387 1
int from,to,delta,fn;
d391 2
a392 1
    int k,l,m;
d412 33
a444 16
            if (tw->ulhclno > j) tw->ulhclno += delta;
            /* Если изменилось, перевыдать окно */
            j = (from > tw->ulhclno ? from : tw->ulhclno);
            if ((k =  tw->ulhclno + portlist[i]->btext ) > to) k = to;
            if (j <= k)
            {
                oport = curport;
                l = cursorcol;
                m = cursorline;
                switchport(portlist[i]);
                putup(j - tw->ulhclno, delta == 0 ?
                k - tw->ulhclno : portlist[i]->btext);
                switchport(oport);
                poscursor(l,m);
            }
        }
@


3.6
log
@Scroll on -sr- or -al/dl- added
@
text
@d4 1
a4 1
 *      $Header: r.wind.c,v 3.5 86/09/19 19:57:36 alex Exp $
d6 3
d88 1
d241 1
a241 1
        oldport->tmarg + cursorline + 1,
d243 1
a243 1
        oldport->bmarg = oldport->tmarg + cursorline + 1;
d310 1
a310 1
        pport->bedit = pport->btext = pport->bmarg - pport->tmarg - 2;
@


3.5
log
@Версия для СМ-1700
@
text
@d4 1
a4 1
 *      $Header: r.wind.c,v 3.4 86/08/04 20:53:58 alex Exp $
d6 3
d31 1
d38 2
a39 2
movew(nl)
int nl;
d41 31
a71 11
    register int cc,cl;
    if ((curwksp->ulhclno += nl) < 0) curwksp->ulhclno = 0;
    cc = cursorcol;
    cl = cursorline - nl;
    putup(0,curport->btext);
    if (cl < 0 || cl > curport->btext)
    {
        cl = defplline;
        cc = 0;
    }
    poscursor(cc,cl);
d100 1
a100 1
    movew(number - curwksp->ulhclno - defplline);
d269 2
d272 1
a272 1
    defplline = defmiline = (newport->bmarg - newport->tmarg)/ 4 + 1;
d321 2
d354 1
a354 1
    defplline = defmiline = (newport->bmarg - newport->tmarg) / 4 + 1;
@


3.4
log
@Bepqh dk LMNQ/DELNQ 2
@
text
@d4 1
a4 1
 *      $Header: r.wind.c,v 3.3 86/07/24 23:38:32 alex Exp $
d6 3
@


3.3
log
@Исправлена ошибка в makeport.
@
text
@d4 1
a4 1
 *      $Header: r.wind.c,v 3.2 86/07/24 19:06:50 alex Exp $
d6 3
@


3.2
log
@Об'единены версии текстов для ЕС и СМ
@
text
@d4 1
a4 1
 *      $Header: r.wind.c,v 3.1.1.1 86/06/05 00:07:27 alex Exp $
d6 3
d221 1
a221 1
	setupviewport(newport,oldport->lmarg + cursorcol + LMARG,
@


3.1
log
@Базовая версия для ЕС.
@
text
@d4 1
a4 1
 *      $Header: r.wind.c,v 3.1 86/04/20 23:43:41 alex Exp $
d6 3
d10 3
d141 2
a142 2
        w->ltext = cl + 1;
        w->rtext = cr - cl - 2;
d218 1
a218 1
        setupviewport(newport,oldport->lmarg + cursorcol + 2,
d222 2
a223 2
        oldport->rmarg = oldport->lmarg + cursorcol + 1;
        oldport->rtext = oldport->redit = cursorcol - 1;
d284 1
a284 1
        pport->redit = pport->rtext = pport->rmarg - pport->lmarg - 2;
@


3.1.2.1
log
@Start revision for red/4
@
text
@d4 1
a4 1
 *      $Header: r.wind.c,v 3.7 87/06/05 23:51:43 alex Exp $
a5 22
 * Revision 3.7  87/06/05  23:51:43  alex
 * Добавлен roll для терминалов с sr/sf и отображение
 *  табуляций в режиме -t + всякая мелочь
 * 
 * Revision 3.6  87/06/04  23:44:54  alex
 * Scroll on -sr- or -al/dl- added
 * 
 * Revision 3.5  86/09/19  19:57:36  alex
 * Версия для СМ-1700
 * 
 * Revision 3.4  86/08/04  20:53:58  alex
 * Bepqh dk LMNQ/DELNQ 2
 * 
 * Revision 3.3  86/07/24  23:38:32  alex
 * Исправлена ошибка в makeport.
 * 
 * Revision 3.2  86/07/24  19:06:50  alex
 * Об'единены версии текстов для ЕС и СМ
 * 
 * Revision 3.1.1.1  86/06/05  00:07:27  alex
 * Отлажено_на_модели
 * 
a6 3
 * Базовая версия для ЕС.
 * 
 * Revision 3.1  86/04/20  23:43:41  alex
a12 1

d19 2
a20 2
movew(nl,fix)
int nl,fix;
d22 11
a32 31
	register int cc,cl,i;
	int nladd;
	cc = cursorcol;
	cl = cursorline;
	nladd = 0;
	if( nl == PL1MOVEW ) {
		nl = 1; nladd = defplline-1;
	}
	if( nl == MI1MOVEW ) {
		nl = -1; nladd = -defmiline+1;
	}
rep:
	if ((curwksp->ulhclno += nl) < 0) { nl -= curwksp->ulhclno;
		curwksp->ulhclno = 0;
	};
	if( nl == 0) return;
	if( on_scroll && scroll(nl))
	{
		if(nl>0)
			putup(curport->btext-nl+1, curport->btext);
		else
			putup(0,-nl-1);
	     goto afix;
	};
	if ( nladd ) {
		nl = nladd; nladd = 0; goto rep;
	}
	putup(0,curport->btext);
afix:
	if(fix && (i=cl-nl)>=0 && i<=curport->btext) cl=i;
	poscursor(cc,cl);
a45 1
    if (nc == 0) return;
d61 1
a61 1
    movew(number - curwksp->ulhclno - defplline,0);
d135 2
a136 2
	w->ltext = cl + LMARG;
	w->rtext = cr - cl - 2*LMARG;
d198 1
a198 1
	oldport->ttext + cursorline,
d200 1
a200 1
	oldport->bmarg = oldport->ttext + cursorline;
d212 1
a212 1
	setupviewport(newport,oldport->lmarg + cursorcol + 3-LMARG,
d216 2
a217 2
	oldport->rmarg = oldport->lmarg + cursorcol + 2-LMARG;
	oldport->rtext = oldport->redit = cursorcol - LMARG;
a229 2
    newport->flags &= ~WF_ROLL;
    oldport->flags &= ~WF_ROLL;
d231 1
a231 1
    defplline = defmiline = (newport->btext)/ 3 + 1;
d265 1
a265 1
	pport->bedit = pport->btext = theport->ttext+theport->btext - pport->ttext;
d278 1
a278 1
	pport->redit = pport->rtext = pport->rmarg - pport->lmarg - 2*LMARG;
a279 2
    pport->flags &= ~WF_ROLL;
    defplline = defmiline = (pport->btext)/ 3 + 1;
d311 1
a311 1
    defplline = defmiline = (newport->btext) / 3 + 1;
@


3.1.1.1
log
@Отлажено_на_модели
@
text
@a6 3
 * Базовая версия для ЕС.
 * 
 * Revision 3.1  86/04/20  23:43:41  alex
d135 4
a138 4
	w->ltext = cl + LMARG;
	w->rtext = cr - cl - 2*LMARG;
	w->ttext = lt + 1;
	w->btext = lb - lt - 2;
d212 1
a212 1
	setupviewport(newport,oldport->ltext + cursorcol + 1,
d216 2
a217 2
	oldport->rmarg = oldport->ltext + cursorcol;
	oldport->rtext = oldport->redit = cursorcol - LMARG;
d278 1
a278 1
	pport->redit = pport->rtext = pport->rmarg - pport->lmarg - 2*LMARG;
@
