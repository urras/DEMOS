head     4.2;
access   ;
symbols  RED_4:3.1.2 RED_3_9:3.7 DEMOS_2:3.3 COMMON3:3.2 ES:3.1.1;
locks    ;
comment  @ * @;


4.2
date     89.02.20.22.49.47;  author alex;  state Exp;
branches ;
next     4.1;

4.1
date     88.03.31.22.03.09;  author alex;  state Exp;
branches ;
next     3.7;

3.7
date     87.06.05.23.50.35;  author alex;  state Exp;
branches ;
next     3.6;

3.6
date     86.10.29.02.47.40;  author root;  state Stab;
branches ;
next     3.5;

3.5
date     86.09.19.21.38.27;  author alex;  state Exp;
branches ;
next     3.4;

3.4
date     86.09.19.19.53.32;  author alex;  state Exp;
branches ;
next     3.3;

3.3
date     86.08.04.20.51.58;  author alex;  state Exp;
branches ;
next     3.2;

3.2
date     86.07.24.00.24.37;  author alex;  state Exp;
branches ;
next     3.1;

3.1
date     86.04.20.23.41.51;  author alex;  state Exp;
branches 3.1.1.1 3.1.2.1;
next     ;

3.1.1.1
date     86.06.05.00.09.28;  author alex;  state Exp;
branches ;
next     3.1.1.2;

3.1.1.2
date     86.06.05.18.53.33;  author alex;  state Exp;
branches ;
next     3.1.1.3;

3.1.1.3
date     86.06.16.21.53.16;  author alex;  state Stab;
branches ;
next     3.1.1.4;

3.1.1.4
date     86.06.16.22.18.22;  author alex;  state Exp;
branches ;
next     3.1.1.5;

3.1.1.5
date     86.07.15.22.12.42;  author alex;  state Stab;
branches ;
next     ;

3.1.2.1
date     87.06.19.17.00.25;  author alex;  state Stab;
branches ;
next     3.1.2.2;

3.1.2.2
date     87.06.24.22.34.44;  author alex;  state Stab;
branches ;
next     ;


desc
@  Полиэкранный редактор RED
  Версия 3.
  ИАЭ им. Курчатова, Москва.
@


4.2
log
@Исправлена ошибка в команде SUSPEND 
@
text
@/*
 *      Редактор RED.
 *
 * r.hlam.c Разные программы / всякий хлам
 *
 *      $Header: r.hlam.c,v 4.1 88/03/31 22:03:09 alex Exp $
 *      $Log:	r.hlam.c,v $
 * Revision 4.1  88/03/31  22:03:09  alex
 * Версия 4.1 - обкатка на UTEC, СМ
 * 
 * Revision 3.1.2.2  87/06/24  22:34:44  alex
 * New readch + gettc + tc table Tested
 * 
 * Revision 3.1.2.1  87/06/19  17:00:25  alex
 * Start revision for red/4
 * 
 * Revision 3.7  87/06/05  23:50:35  alex
 * Добавлен roll для терминалов с sr/sf и отображение
 *  табуляций в режиме -t + всякая мелочь
 * 
 * Revision 3.6  86/10/29  02:47:40  root
 * checkpriv для суперюзера теперь все же проверяет
 * право записи хотя бы для одного их "u-g-a"; чтение
 * разрешено всегда. Сделано для предотвращения случайной
 * порчи файлов (как правило, портили re.std).
 * 
 * Revision 3.5  86/09/19  21:38:27  alex
 * 
 * 
 * Revision 3.4  86/09/19  19:53:32  alex
 * Версия для СМ-1700
 * 
 * Revision 3.3  86/08/04  20:51:58  alex
 * Bepqh dk LMNQ/DELNQ 2
 * 
 * Revision 3.2  86/07/24  00:24:37  alex
 * Об'единены версии текстов для ЕС и СМ
 * 
 * Revision 3.1.1.5  86/07/15  22:12:42  alex
 * RED 3.3/EC.
 * 
 * Revision 3.1.1.4  86/06/16  22:18:22  alex
 * Первая версия с повтором сеанса (пока грязная)
 * 
 * Revision 3.1.1.2  86/06/05  18:53:33  alex
 * Отлажено_на_модели
 * 
 * Revision 3.1.1.1  86/06/05  00:09:28  alex
 * *** empty log message ***
 * 
 * Revision 3.1  86/04/20  23:41:51  alex
 * Базовая версия для ЕС.
 * 
 * Revision 3.1  86/04/20  23:41:51  alex
 * *** empty log message ***
 * 
 */
#include "r.defs.h"
#include <sys/types.h>
#include <sys/stat.h>
#include <signal.h>

/*   salloc -
 * выделить память, обнулить и проверить
 */
char *salloc(n)
unsigned n;
{
    register char *c, *i;
    extern char *malloc();
    if(!(c=malloc(n))) fatal(NULL);
    i = c + n;
    while (i != c) *--i = 0;
    return (c);
}

/*
 * checkpriv(file) - Проверить права. 0 - ни чтения, ни записи;
 *                   1 только чтение
 *                   2 и чтение, и запись
 */
checkpriv(fildes)
int fildes;
{
    register struct stat *buf;
    struct stat buffer;
    int anum, num;
    register int unum,gnum;
    buf = &buffer;
    fstat(fildes,buf);
    unum = gnum = anum = 0;
    if (userid == 0) unum = gnum = anum = 1;
    if (buf->st_uid == userid || userid == 0)
    {
        if (buf->st_mode & 0200) unum = 2;
        else if (buf->st_mode & 0400) unum = 1;
    }
    if (buf->st_gid == groupid || userid == 0)
    {
        if (buf->st_mode & 020) gnum = 2;
        else if (buf->st_mode & 040) gnum = 1;
    }
    if (buf->st_mode & 02) anum = 2;
    else if (buf->st_mode & 04) anum = 1;
    num = (unum > gnum ? unum : gnum);
    num = (num  > anum ? num  : anum);
    return(num);
}

/*
 * getpriv(fildes)
 * Дай режим
 */
getpriv(fildes)
int fildes;
{
	register struct stat buffer,*buf;
	buf = &buffer;
	fstat(fildes,buf);
	return (buf->st_mode & 0777);
}

/* printf1 - printf для рабочего режима
 */
printf1(s) char *s;
{
	register int i=0; 
	register char *s1=s;
	while(*s1++) i++;
	if(i) write(1,s,i);
}

/* strcopy(a,b)
 * Копировать строку b в строку a
 */
strcopy(a,b)
char *a,*b;
{
	while(*a++ = *b++);
}

/* abs(n) -
 * Функция abs
 */
abs(number)
int number;
{
	return (number<0 ? -number : number);
}

/*
 * append(name,ext) - возвращает об'единение строк
 */
char *append(name,ext)
char *name,*ext;
{
    int lname;
    register char *c,*d,*newname;
    lname = 0;
    c = name; 
    while (*c++) ++lname;
    c = ext;  
    while (*c++) ++lname;
    newname = c = salloc(lname+1);
    d = name; 
    while (*d) *c++ = *d++;
    d = ext; 
    while (*c++ = *d++);
    return newname;
}

/*
 * s2i(s,*i) - Преобразование строки s в целое. Значение пересылается в *i.
 *      Возвращается указатель на первый символ в строке за числом, если
 *        там еще остались символы, или 0.
 */
char *s2i(s,i)
char *s;
int *i;
{
    register char lc,c;
    register int val;
    int sign;
    char *ans;
    sign = 1;
    val = lc = 0;
    ans = 0;
    while ((c = *s++) != 0) {
        if (c >= '0' && c <= '9') val = 10*val + c - '0';
        else if (c == '-' && lc == 0) sign = -1;
        else {
            ans = --s; 
            break; 
        }
        lc = c;
    }
    *i = val * sign;
    return ans;
}

/*
 * getnm() -    Подпрограмма выдает номер пользователя в текстовом виде.
 */
#define LNAME 8
static char namewd[LNAME+1];
char *getnm(uid)
int uid;
{
	register int i;
	i = LNAME; 
	namewd[LNAME]=0;
	while( i>1 && uid>0) {
		namewd[--i]= '0' + uid %10;
		uid /= 10;
	}
	return(&namewd[i]);
}

/*
 * get1c, get1w(fd) - дай байт/слово
 * put1c, put1w(w,fd) - положи байт/слово
 */
int get1w(fd)
int fd;
{ 
	int i; 
	if(read(fd,&i,SWORD)==SWORD) return(i);
	return(-1);
}

int get1c(fd)
int fd;
{
	char c; 
	if(read(fd,&c,1)==1) return((unsigned)c);
	return(-1);
}

put1w(w,fd)
int fd,w; 
{
	write(fd,&w,SWORD);
	return;
}

put1c(c,fd)
int fd; 
char c;
{
	write(fd,&c,1); 
	return;
}


#if 0
/*  ==== Не используется ====
 * C library -- alloc/free
 *      - Сия функция абсолютно не переносима
 *      - и не транслируется через pcc. Это все временно
 */

#define	logical	char *
struct fb {
	logical	size;
	char	*next;
};

int	freelist[] {
	0,
	-1,
};
logical	slop	2;
alloc(asize)
logical asize;
{
    register logical size;
    register logical np;
    register logical cp;
    if ((size = asize) == 0)
        return(0);
    size += 3;
    size &= ~01;
    for (;;) {
        cp = freelist;
        while ((np = cp->next) != -1) {
            if (np->size>=size) {
                if (size+slop >= np->size) {
                    cp->next = np->next;
                    return(&np->next);
                }
                cp = cp->next = np+size;
                cp->size = np->size - size;
                cp->next = np->next;
                np->size = size;
                return(&np->next);
            }
            cp = np;
        }
        asize = size<1024? 1024: size;
        if ((cp = sbrk(asize)) == -1) {
            fatal(0);
        }
        cp->size = asize;
        free(&cp->next);
    }
}

free(aptr)
char *aptr;
{
	register logical ptr;
	register logical cp;
	register logical np;
	if (aptr == 0) return;
	ptr = aptr-2;
	cp = freelist;
	while ((np = cp->next) < ptr)
		cp = np;
	if (ptr+ptr->size == np) {
		ptr->size += np->size;
		ptr->next = np->next;
		np = ptr;
	} 
	else
		ptr->next = np;
	if (cp+cp->size == ptr) {
		cp->size += ptr->size;
		cp->next = ptr->next;
	} 
	else
		cp->next = ptr;
}
#endif

/* seek - зaмeнa на lseek
 * В ДЕМОС/ЕС имя seek в локальных определениях заменено на oldseek
 */
seek(fd,shift,dsk)
{
	long i;
	i = shift;
	if ( dsk >= 3 ) dsk -= 3, i *= 512l;
	return((int)lseek(fd,i,dsk));
}

/*
 * tostop() -
 * Выйти на паузу (только в новом tty)
 */
tostop()
#if !defined(Y_SIGSTOP) || !defined(SIGSTOP)
{ 
	return(1);
}
#else
{
	short cc, cl;
	register struct viewport *vp;
	vp = curport;
	cc = cursorcol;
	cl = cursorline;
	ttcleanup();
	kill(0,SIGSTOP);
	ttstartup();
	switchport(vp);
	poscursor(cc, cl);
	return(0);
}
#endif
@


4.1
log
@Версия 4.1 - обкатка на UTEC, СМ
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.1.2.2 87/06/24 22:34:44 alex Stab $
d8 3
d357 5
d365 2
@


3.7
log
@Добавлен roll для терминалов с sr/sf и отображение
 табуляций в режиме -t + всякая мелочь
@
text
@d2 1
a2 1
 *      Редактор RED. ИАЭ им. И.В. Курчатова, ОС ДЕМОС
d6 1
a6 1
 *      $Header: r.hlam.c,v 3.6 86/10/29 02:47:40 root Exp $
d8 10
d348 1
a348 1
#ifndef Y_SIGSTOP
a353 2
	putcha(COFIN);
	dumpcbuf();
@


3.6
log
@checkpriv для суперюзера теперь все же проверяет
право записи хотя бы для одного их "u-g-a"; чтение
разрешено всегда. Сделано для предотвращения случайной
порчи файлов (как правило, портили re.std).
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.5 86/09/19 21:38:27 alex Exp $
d8 6
@


3.5
log
@
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.4 86/09/19 19:53:32 alex Exp $
d8 3
a69 1
    if (userid == 0) return 2;   /* superuser accesses all */
d73 2
a74 1
    if (buf->st_uid == userid)
d79 1
a79 1
    if (buf->st_gid == groupid)
@


3.4
log
@Версия для СМ-1700
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.3 86/08/04 20:51:58 alex Exp $
d8 3
d39 1
d324 19
@


3.3
log
@Bepqh dk LMNQ/DELNQ 2
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.2 86/07/24 00:24:37 alex Exp $
d8 3
@


3.2
log
@Об'единены версии текстов для ЕС и СМ
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.1.1.5 86/07/15 22:12:42 alex Exp $
d8 3
@


3.1
log
@Базовая версия для ЕС.
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.1 86/04/20 23:41:51 alex Exp $
d8 12
d21 3
d35 1
a35 1
int n;
a168 14
/* seek -  Сопля от V6 */
long lseek();
seek(fd,of,typ)
int fd,of,typ;
{ 
    long i; 
    i=of; 
    if(typ>2) { 
        typ=typ-3; 
        i=i*512; 
    }
    return ( (int)lseek(fd,i,typ) );
}

d177 1
a177 1
	register int i,j;
d203 1
a203 1
	if(read(fd,&c,1)==1) return(c&0377); 
d302 12
@


3.1.2.1
log
@Start revision for red/4
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.7 87/06/05 23:50:35 alex Exp $
a7 34
 * Revision 3.7  87/06/05  23:50:35  alex
 * Добавлен roll для терминалов с sr/sf и отображение
 *  табуляций в режиме -t + всякая мелочь
 * 
 * Revision 3.6  86/10/29  02:47:40  root
 * checkpriv для суперюзера теперь все же проверяет
 * право записи хотя бы для одного их "u-g-a"; чтение
 * разрешено всегда. Сделано для предотвращения случайной
 * порчи файлов (как правило, портили re.std).
 * 
 * Revision 3.5  86/09/19  21:38:27  alex
 * 
 * 
 * Revision 3.4  86/09/19  19:53:32  alex
 * Версия для СМ-1700
 * 
 * Revision 3.3  86/08/04  20:51:58  alex
 * Bepqh dk LMNQ/DELNQ 2
 * 
 * Revision 3.2  86/07/24  00:24:37  alex
 * Об'единены версии текстов для ЕС и СМ
 * 
 * Revision 3.1.1.5  86/07/15  22:12:42  alex
 * RED 3.3/EC.
 * 
 * Revision 3.1.1.4  86/06/16  22:18:22  alex
 * Первая версия с повтором сеанса (пока грязная)
 * 
 * Revision 3.1.1.2  86/06/05  18:53:33  alex
 * Отлажено_на_модели
 * 
 * Revision 3.1.1.1  86/06/05  00:09:28  alex
 * *** empty log message ***
 * 
a8 3
 * Базовая версия для ЕС.
 * 
 * Revision 3.1  86/04/20  23:41:51  alex
a14 1
#include <signal.h>
d20 1
a20 1
unsigned n;
d42 1
d46 1
a46 2
    if (userid == 0) unum = gnum = anum = 1;
    if (buf->st_uid == userid || userid == 0)
d51 1
a51 1
    if (buf->st_gid == groupid || userid == 0)
d154 14
d176 1
a176 1
	register int i;
d202 1
a202 1
	if(read(fd,&c,1)==1) return((unsigned)c);
a298 31
}
#endif

/* seek - зaмeнa на lseek
 * В ДЕМОС/ЕС имя seek в локальных определениях заменено на oldseek
 */
seek(fd,shift,dsk)
{
	long i;
	i = shift;
	if ( dsk >= 3 ) dsk -= 3, i *= 512l;
	return((int)lseek(fd,i,dsk));
}

/*
 * tostop() -
 * Выйти на паузу (только в новом tty)
 */
tostop()
#if !defined(Y_SIGSTOP) || !defined(SIGSTOP)
{ 
	return(1);
}
#else
{
	putcha(COFIN);
	dumpcbuf();
	ttcleanup();
	kill(0,SIGSTOP);
	ttstartup();
	return(0);
@


3.1.2.2
log
@New readch + gettc + tc table Tested
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.1.2.1 87/06/19 17:00:25 alex Exp $
a7 3
 * Revision 3.1.2.1  87/06/19  17:00:25  alex
 * Start revision for red/4
 * 
d348 2
@


3.1.1.1
log
@*** empty log message ***
@
text
@a8 3
 * Базовая версия для ЕС.
 * 
 * Revision 3.1  86/04/20  23:41:51  alex
@


3.1.1.2
log
@Отлажено_на_модели
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.1.1.1 86/06/05 00:09:28 alex Exp $
a7 3
 * Revision 3.1.1.1  86/06/05  00:09:28  alex
 * *** empty log message ***
 * 
d179 1
a179 1
	register int i;
@


3.1.1.3
log
@Отлажено на ЕС без режима восстановления и без макро
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.1.1.2 86/06/05 18:53:33 alex Exp $
a7 3
 * Revision 3.1.1.2  86/06/05  18:53:33  alex
 * Отлажено_на_модели
 * 
d160 14
a306 10

/* seek - зaмeнa для EC
 */
 seek(fd,shift,dsk)
 {
  long i;
  i = shift;
  if ( dsk >= 3 ) dsk -= 3, i *= 512l;
  lseek(fd,i,dsk);
}
@


3.1.1.4
log
@Первая версия с повтором сеанса (пока грязная)
@
text
@d197 1
a197 1
	if(read(fd,&c,1)==1) return((unsigned)c);
@


3.1.1.5
log
@RED 3.3/EC.
@
text
@d6 1
a6 1
 *      $Header: r.hlam.c,v 3.1.1.4 86/06/16 22:18:22 alex Exp $
a7 3
 * Revision 3.1.1.4  86/06/16  22:18:22  alex
 * Первая версия с повтором сеанса (пока грязная)
 * 
d29 1
a29 1
unsigned n;
@
