head     3.1;
access   ;
symbols  RED_4:3.1.2 DEMOS_2:3.1;
locks    ;
comment  @ * @;


3.1
date     86.08.04.21.01.50;  author alex;  state Exp;
branches ;
next     ;


desc
@
Локальные определения для МНОС.
@



3.1
log
@Bepqh dk LMNQ/DELNQ 2
@
text
@/*  Полиэкранный универсальный редактор RED
 *  Машинно и системно - зависимые определения
 */

/*******************************
 *  Описания для СМ-4          *
 *******************************
 */

#define SWORD (sizeof (int))

/*******************************
 *  Описания для MNOS RL 1.2   *
 *******************************
 */
#define MNOS

/* Установка флагов для полного набора символов */
#define REDFLG(x) (x&(~(ECHO|CRMOD))|(RAWI|RAWO|SI|SO))
/* Установка флагов для урезанного набора символов */
#define REDFLGL(x) (x&(~(ECHO|CRMOD|GRUE|LCASE))|(LCASE|RAWI|RAWO|SI|SO)) /* См. ned.t.c -#ifndef MNOS */
/* Проверка на тему 'LCASE?' */
#define LCFLG(x) ((x&(SI|SO))!=(SI|SO))
/* Проверка на тему 'Только латинские символы ' */
#define LATFLG(x) 0
/* Проверка на режим 'могут исказиться прописные/строчные буквы в ф/к' */
#define KIOFLG(x) (((x)&(SI|SO|LCASE))==(SI|SO))

/* Запрос идентификаторов пользователя и группы, установка приоритета */

#define GETUID (getuid()&0377)
#define GETGID (getgid()&0377)
#define NICE   nice(-10)

/*******************************
 *  Суффикс для переименования *
 *******************************
 */
#define SUFFBAK ".b"

/*******************************
 *  Описания для кода U-код    *
 *******************************
 */

/* 1. Символы из набора русских букв, которые не отображаются вообще: S_NO1
      Символы из набора русских букв, которые не отображаются в lcase: S_NO2
      Прописные русские буквы                                          RLPRO
      Строчные русские буквы                                           RLSTRO
*/
#define S_NO1 0332 /* большой твердый знак */
#define S_NO2 0372 /* малый твердый знак   */
#define RLPRO(x) ((unsigned)(x) >=0300 && (unsigned)(x)<=0337)
#define RLSTRO(x) ((unsigned)(x) >=0340 && (unsigned)(x)<=0377)

/* 2. Преобразования:
 * STK7(s) - из текущей кодировки в КОИ-7
 * K7TS(s) - из КОИ-7 в прописную букву
 *           (строчная должна отличаться битом 040
 * STASCII(s) - из текущей кодировки в ASCII
 *
 * Все преобразования применяются только для символов >=0300
 */
extern char ck7tu[], cutk7[];
#define STK7(s) cutk7[((s)&037)]
#define K7TS(s) ck7tu[((s)&037)]
#define STASCII(s) ((STK7(s)&0137)|((s)&040))

/* Необходимые инициализации (флаг INIT_RE включен только в одном файле )
 */

#ifdef INIT_RE
char ck7tu[040] = {
/* 140   Ю     А     Б     Ц     Д     Е     Ф     Г  */
	0336, 0300, 0301, 0326, 0304, 0305, 0324, 0303,
/* 150   Х     И     Й     К     Л     М     Н     О  */
	0325, 0310, 0311, 0312, 0313, 0314, 0315, 0316,
/* 160   П     Я     Р     С     Т     У     Ж     В  */
	0317, 0337, 0320, 0321, 0322, 0323, 0306, 0302,
/* 170   Ь     У     З     Ш     Э     Щ     Ч     '  */
	0334, 0333, 0307, 0330, 0335, 0331, 0327, 0332};

char cutk7[040] = {
/* 300   А     Б     В     Г     Д     Е     Ж     З  */
	0141, 0142, 0167, 0147, 0144, 0145, 0166, 0172,
/* 310   И     Й     К     Л     М     Н     О     П  */
	0151, 0152, 0153, 0154, 0155, 0156, 0157, 0160,
/* 320   Р     С     Т     У     Ф     Х     Ц     Ч  */
	0162, 0163, 0164, 0165, 0146, 0150, 0143, 0176,
/* 330   Ш     Щ     '     Ы     Ь     Э     Ю     Я  */
	0173, 0175, 0177, 0171, 0170, 0174, 0140, 0161};
#endif

@
