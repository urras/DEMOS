head     0.4;
access   ;
symbols  MNOS:0.3 SYSTEM2_9:0.2 DEMOS1_3:0.1;
locks    ;
comment  @ * @;


0.4
date     86.09.29.18.30.57;  author alex;  state Exp;
branches ;
next     0.3;

0.3
date     86.09.24.21.55.57;  author alex;  state Exp;
branches ;
next     0.2;

0.2
date     86.09.24.21.43.31;  author alex;  state Exp;
branches ;
next     0.1;

0.1
date     86.09.24.21.25.49;  author alex;  state Exp;
branches ;
next     ;


desc
@SHELL -интерпретатор
@


0.4
log
@Версия, слитая из 2.9 и ДЕМОС без русских диагностик
@
text
@#
/*
 *	KIAE shell
 *
 *
 */

/* To use stack as temporary workspace across
 * possible storage allocation (eg name lookup)
 * a) get ptr from `relstak'
 * b) can now use `pushstak'
 * c) then reset with `setstak'
 * d) `absstak' gives real address if needed
 */
#define		relstak()	(staktop-stakbot)
#define		absstak(x)	(stakbot+Rcheat(x))
#define		setstak(x)	(staktop=absstak(x))
#define		pushstak(c)	(*staktop++=(c))
#define		zerostak()	(*staktop=0)

/* Used to address an item left on the top of
 * the stack (very temporary)
 */
#define		curstak()	(staktop)

/* `usestak' before `pushstak' then `fixstak'
 * These routines are safe against heap
 * being allocated.
 */
#define		usestak()	{locstak();}

/* for local use only since it hands
 * out a real address for the stack top
 */
STKPTR		locstak();

/* Will allocate the item being used and return its
 * address (safe now).
 */
#define		fixstak()	endstak(staktop)

/* For use after `locstak' to hand back
 * new stack top and then allocate item
 */
STKPTR		endstak();

/* Copy a string onto the stack and
 * allocate the space.
 */
STKPTR		cpystak();

/* Allocate given ammount of stack space */
STKPTR		getstak();

/* A chain of ptrs of stack blocks that
 * have become covered by heap allocation.
 * `tdystak' will return them to the heap.
 */
BLKPTR		stakbsy;

/* Base of the entire stack */
STKPTR		stakbas;

/* Top of entire stack */
STKPTR		brkend;

/* Base of current item */
STKPTR		stakbot;

/* Top of current item */
STKPTR		staktop;

/* Used with tdystak */
STKPTR		savstak();
@


0.3
log
@Версия из МНОС
@
text
@d3 1
a3 1
 *	МНОС РЛ 1.2 shell
@


0.2
log
@Версия из 2.9
@
text
@d3 1
a3 1
 *	UNIX shell
a4 2
 *	S. R. Bourne
 *	Bell Telephone Laboratories
@


0.1
log
@Версия из ДЕМОС 1.3
@
text
@d3 1
a3 1
 *	KIAE shell
d5 2
@
