head     1.3;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.3
date     89.04.09.19.46.27;  author abs;  state Exp;
branches ;
next     1.2;

1.2
date     89.02.01.20.13.18;  author abs;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.03.20.30.14;  author root;  state Exp;
branches ;
next     ;


desc
@
@


1.3
log
@забыл посчитать ошибки.
@
text
@/*
** $Header: mkdir.c,v 1.2 89/02/01 20:13:18 abs Exp $
** $Log:        mkdir.c,v $
 * Revision 1.2  89/02/01  20:13:18  abs
 * все обалденно упростилось после появления системного вызова mkdir.
 *
 * Revision 1.1  88/05/03  20:30:14  root
 * Initial revision
 *
*/

# ifndef        lint
/* NOXSTR  */
static char     Rcs_id[] = "$Header: mkdir.c,v 1.2 89/02/01 20:13:18 abs Exp $";
/* YESXSTR */
# endif         lint

/*
** make directory
*/

#include        <signal.h>
#include        <stdio.h>
#include        <ediag.h>

int     Errors = 0;

main(argc, argv)
char *argv[];
{

	signal(SIGHUP, SIG_IGN);
	signal(SIGINT, SIG_IGN);
	signal(SIGQUIT, SIG_IGN);
	signal(SIGPIPE, SIG_IGN);
	signal(SIGTERM, SIG_IGN);

	if(argc < 2) {
		fprintf(stderr, "mkdir: %s\n",
		    ediag( "arg count", "мало аргументов" ));
		exit(1);
	}
	while(--argc){
		if( mkdir(*++argv, 0777) < 0 ){
			perror( *argv );
			Errors ++ ;
		}
	}
	exit(Errors);
}
@


1.2
log
@все обалденно упростилось после появления системного вызова mkdir.
@
text
@d2 1
a2 1
** $Header: mkdir.c,v 1.1 88/05/03 20:30:14 root Exp $
d4 3
d14 1
a14 1
static char     Rcs_id[] = "$Header: mkdir.c,v 1.1 88/05/03 20:30:14 root Exp $";
d44 1
a44 1
		if( mkdir(*++argv, 0777) < 0 )
d46 2
d49 1
a49 1
	exit(Errors!=0);
@


1.1
log
@Initial revision
@
text
@d2 5
a6 6
**
** Эта штука добавляется в исходный файл перед
** запуском rcs               Давидов 04.28.88
**
** $Header$
** $Log$
d11 1
a11 1
static char     Rcs_id[] = "$Header$";
d14 1
a14 1
 
d19 3
a21 2
#include	<signal.h>
#include	<stdio.h>
d23 1
a23 3
int	Errors = 0;
char	*strcat();
char	*strcpy();
d36 2
a37 1
		fprintf(stderr, "mkdir: arg count\n");
d40 4
a43 2
	while(--argc)
		mkdir(*++argv);
a44 42
}

mkdir(d)
char *d;
{
	char pname[128], dname[128];
	register i, slash = 0;

	pname[0] = '\0';
	for(i = 0; d[i]; ++i)
		if(d[i] == '/')
			slash = i + 1;
	if(slash)
		strncpy(pname, d, slash);
	strcpy(pname+slash, ".");
	if (access(pname, 02)) {
		fprintf(stderr,"mkdir: cannot access %s\n", pname);
		++Errors;
		return;
	}
	if ((mknod(d, 040777, 0)) < 0) {
		fprintf(stderr,"mkdir: cannot make directory %s\n", d);
		++Errors;
		return;
	}
	chown(d, getuid(), getgid());
	strcpy(dname, d);
	strcat(dname, "/.");
	if((link(d, dname)) < 0) {
		fprintf(stderr, "mkdir: cannot link %s\n", dname);
		unlink(d);
		++Errors;
		return;
	}
	strcat(dname, ".");
	if((link(pname, dname)) < 0) {
		fprintf(stderr, "mkdir: cannot link %s\n",dname);
		dname[strlen(dname)] = '\0';
		unlink(dname);
		unlink(d);
		++Errors;
	}
@
