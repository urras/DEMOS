head     1.3;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.3
date     88.10.21.20.16.28;  author ache;  state Exp;
branches ;
next     1.2;

1.2
date     88.04.05.20.06.35;  author andrew;  state Exp;
branches ;
next     1.1;

1.1
date     88.04.05.19.46.17;  author andrew;  state Exp;
branches ;
next     ;


desc
@
Передача сообщения пользователю
@


1.3
log
@Теперь может работать в пакете.
@
text
@/*
 * $Header: write.c,v 1.2 88/04/05 20:06:35 andrew Exp $
 * $Log:	write.c,v $
 * Revision 1.2  88/04/05  20:06:35  andrew
 * Добавлено предупреждение при отсутствии русских букв
 * на принимающем терминале.
 * 
 * Revision 1.1  88/04/05  19:46:17  andrew
 * Initial revision
 * 
 */
#ifndef lint
static char RCS_id[] = "$Header: write.c,v 1.2 88/04/05 20:06:35 andrew Exp $";
#endif lint
/*
 * write to another user
 */

#include <sgtty.h>
#include <ediag.h>
#include <whoami.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <signal.h>
#include <utmp.h>
#include <time.h>
#include <pwd.h>

struct  passwd  *pwent, *getpwuid();

#define	NMAX	sizeof(ubuf.ut_name)
#define	LMAX	sizeof(ubuf.ut_line)

char	*strcat();
char	*strcpy();
struct	utmp ubuf;
int	signum[] = {SIGHUP, SIGINT, SIGQUIT, 0};
char    me[NMAX + 1]  = "???";
char	*him;
char	*mytty;
char	histty[32];
char	*histtya;
char	*ttyname();
char	*rindex();
int	logcnt;
int	eof();
int	timout();
FILE	*tf;
char	*getenv();
time_t	time();
int     eflag = 1;

main(argc, argv)
	int argc;
	char *argv[];
{
	struct stat stbuf;
	struct sgttyb tty;
	register i;
	register FILE *uf;
	int c1, c2;
	time_t clock = time((time_t *) 0);
	struct tm *localtime();
	struct tm *localclock = localtime( &clock );

	if (argc < 2) {
		printf(ediag("usage: write user [ttyname]\n",
			     "вызов: write пользователь [терминал]\n"));
		exit(1);
	}
	him = argv[1];
	if (argc > 2)
		histtya = argv[2];
	if ((uf = fopen("/etc/utmp", "r")) == NULL) {
		perror("/etc/utmp");
		goto cont;
	}
	if (isatty(fileno(stderr))) {
		mytty = ttyname(fileno(stderr));
		if (mytty == NULL) {
			printf(ediag("Can't find your tty\n",
				     "Нельзя определить ваш терминал\n"));
			exit(1);
		}
		if (stat(mytty, &stbuf) < 0) {
			printf(ediag("Can't stat your tty\n",
				     "Нельзя сделать stat на ваш терминал\n"));
			exit(1);
		}
		if ((stbuf.st_mode&02) == 0) {
			printf(ediag("WARNING: You have write permission turned off.\n",
				     "ПРЕДУПРЕЖДЕНИЕ: Ваш терминал закрыт на прием сообщений.\n"));
			fflush (stdout);
		}
		mytty = rindex(mytty, '/') + 1;
	}
	else {
		mytty = NULL;
		pwent = getpwuid(getuid());
		if (pwent != (struct passwd *) NULL) {
			strncpy (me, pwent->pw_name, NMAX);
			me[NMAX] = '\0';
		}
	}
	if (histtya) {
		strcpy(histty, "/dev/");
		strcat(histty, histtya);
	}
	while (fread((char *)&ubuf, sizeof(ubuf), 1, uf) == 1) {
		if (ubuf.ut_name[0] == '\0')
			continue;
		if (mytty && strcmp(ubuf.ut_line, mytty)==0) {
			for (i=0; i<NMAX; i++) {
				c1 = ubuf.ut_name[i];
				if (c1 == ' ')
					c1 = 0;
				me[i] = c1;
				if (c1 == 0)
					break;
			}
		}
		if (him[0] != '-' || him[1] != 0)
		for (i=0; i<NMAX; i++) {
			c1 = him[i];
			c2 = ubuf.ut_name[i];
			if (c1 == 0)
				if (c2 == 0 || c2 == ' ')
					break;
			if (c1 != c2)
				goto nomat;
		}
		logcnt++;
		if (histty[0]==0) {
			strcpy(histty, "/dev/");
			strcat(histty, ubuf.ut_line);
		}
	nomat:
		;
	}
cont:
	if (logcnt==0 && histty[0]=='\0') {
		printf(ediag("%s not logged in.\n",
			     "%s сейчас не работает.\n"), him);
		exit(1);
	}
	fclose(uf);
	if (histtya==0 && logcnt > 1) {
	printf(ediag("%s logged more than once\nwriting to %s\n",
	"%s зарегестрирован на нескольких терминалах.\nПередается на %s.\n"),
		       him, histty+5);
	}
	if (histty[0] == 0) {
		printf(him);
		if (logcnt)
			printf(ediag(" not on that tty\n",
				     " не за терминалом\n"));
		else
			printf(ediag(" not logged in\n",
				     " сейчас не работает\n"));
		exit(1);
	}
	if (access(histty, 0) < 0) {
		printf(ediag("No such tty\n", "Нет такого терминала\n"));
		exit(1);
	}
	signal(SIGALRM, timout);
	alarm(5);
	if ((tf = fopen(histty, "w")) == NULL)
		goto perm;
	alarm(0);
	if (fstat(fileno(tf), &stbuf) < 0)
		goto perm;
	if ((stbuf.st_mode&02) == 0)
		goto perm;
	gtty(fileno(tf), &tty);
	eflag = !(tty.sg_flags & CYRILL);
	if (isatty(fileno(stdin))) {
		gtty(fileno(stdin), &tty);
		if ((tty.sg_flags & CYRILL) && eflag) {
		  printf(ediag("WARNING: %s has no Cyrillic capability.\n",
			       "ПРЕДУПРЕЖДЕНИЕ: на %s нет русских букв.\n"),
			histty+5);
		  fflush(stdout);
		}

	}
	sigs(eof);
	fprintf(tf, eflag ?
	"\r\nMessage from %s on %s at %d:%02d ...\r\n\7\7\7" :
	"\r\nСообщение от %s с %s в %d:%02d ...\r\n\7\7\7",
	      me, mytty ? mytty : "???", localclock->tm_hour, localclock->tm_min);
	fflush(tf);
	for (;;) {
		char buf[128];
		i = read(0, buf, 128);
		if (i <= 0)
			eof();
		if (buf[0] == '!') {
			buf[i] = 0;
			ex(buf);
			continue;
		}
		if (write(fileno(tf), buf, i) != i) {
			printf(ediag(
		   "\n\7Write failed (%s logged out?)\n",
		   "\n\7Передача прекращена (%s вышел из системы?)\n"), him);
			exit(1);
		}
		if (buf[i-1] == '\n')
			write(fileno(tf), "\r", 1);
	}
perm:
	printf(ediag("Permission denied\n",
		     "Терминал закрыт на прием сообщений\n"));
	exit(1);
}

timout()
{

	printf(ediag("Timeout opening their tty\n",
		     "Кончилось время ожидания\n"));
	exit(1);
}

eof()
{

	fprintf(tf, eflag ? "EOF\r\n": "КОНЕЦ СЕАНСА\r\n");
	exit(0);
}

ex(bp)
	char *bp;
{
	register i;

	sigs(SIG_IGN);
	i = fork();
	if (i < 0) {
		printf(ediag("Try again\n", "Попытайтесь еще раз\n"));
		goto out;
	}
	if (i == 0) {
		sigs((int (*)())0);
		execl(getenv("SHELL") ?
		    getenv("SHELL") : "/bin/sh", "sh", "-c", bp+1, 0);
		exit(0);
	}
	while (wait((int *)NULL) != i)
		;
	printf("!\n");
out:
	sigs(eof);
}

sigs(sig)
	int (*sig)();
{
	register i;

	for (i=0; signum[i]; i++)
		signal(signum[i], sig);
}
@


1.2
log
@Добавлено предупреждение при отсутствии русских букв
на принимающем терминале.
@
text
@d2 1
a2 1
 * $Header: write.c,v 1.1 88/04/05 19:46:17 andrew Exp $
d4 4
d13 1
a13 1
static char RCS_id[] = "$Header: write.c,v 1.1 88/04/05 19:46:17 andrew Exp $";
d28 1
d30 2
d39 1
a39 1
char	me[10]	= "???";
d79 18
a96 5
	mytty = ttyname(2);
	if (mytty == NULL) {
		printf(ediag("Can't find your tty\n",
			     "Нельзя определить ваш терминал\n"));
		exit(1);
d98 7
a104 4
	if (stat(mytty, &stbuf) < 0) {
		printf(ediag("Can't stat your tty\n",
			     "Нельзя сделать stat на ваш терминал\n"));
		exit(1);
a105 6
	if ((stbuf.st_mode&02) == 0) {
		printf(ediag("You have write permission turned off.\n",
			     "Ваш терминал закрыт на прием сообщений.\n"));
		exit(1);
	}
	mytty = rindex(mytty, '/') + 1;
d113 1
a113 1
		if (strcmp(ubuf.ut_line, mytty)==0) {
d178 2
a179 2
	if (isatty(0)) {
		gtty(0, &tty);
d192 1
a192 1
	      me, mytty, localclock->tm_hour, localclock->tm_min);
@


1.1
log
@Initial revision
@
text
@d2 5
a6 2
 * $Header$
 * $Log$
d9 1
a9 1
static char RCS_id[] = "$Header$";
d161 10
@
