head     1.3;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.3
date     89.01.18.15.39.21;  author root;  state Exp;
branches ;
next     1.2;

1.2
date     88.06.03.14.34.28;  author root;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.23.13.26.32;  author root;  state Exp;
branches ;
next     ;


desc
@
@


1.3
log
@Правлено обращение к lseek в случае ошибки при чтении.
@
text
@/*
 * ТЕСТ УСТРОЙСТВА: ЗАПИСЬ И ЧТЕНИЕ
 *
 *  tstdev [-v] device blocks [test]
 *  test = строка из букв: r(read) w(write) c(ompare) или пусто (=r)
 *
 *  Автор: Флеров М.Н., ИПК Минавтопрома, январь 1986.
 *
 * Версия для ДЕМОС + МНОС 2.
 *
 */

/*
**
** Эта штука добавляется в исходный файл перед
** запуском rcs               Давидов 04.28.88
**
** $Header: tstdev.c,v 1.2 88/06/03 14:34:28 root Exp $
** $Log:	tstdev.c,v $
 * Revision 1.2  88/06/03  14:34:28  root
 * Сделана блокировка по 10 К.
 * 
 * Revision 1.1  88/05/23  13:26:32  root
 * Initial revision
 *
*/

# ifndef        lint
/* NOXSTR  */
static char     Rcs_id[] = "$Header: tstdev.c,v 1.2 88/06/03 14:34:28 root Exp $";
/* YESXSTR */
# endif         lint


#include <ediag.h>
#include <stdio.h>

#define kb      20                           /* коэффициент блокирования */
#define lblock  512
#define lb2     (lblock/2)
#define lbuf    (kb*lblock)

int     Inpipe = 0;     /* признак того, что вывод направляется на терминал */

main( argc, argv )
char  **argv;
{
	int dev, tim[2], code, verbose, defect, all_defect;
	unsigned  buf[lbuf/2], lb, ttyflag;
	long bfrom, blocks, bl, nb;
	char *ptest, *V0;
	register int i, cd;
	register char c, *p;

	if( argc < 3  ||  argc > 5 ) {
		fprintf(stderr, ediag(
	    "Usage: %s [-v] raw-device nblocks [mode(rwc)]\n",
	    "Вызов: %s [-v] raw-устройство число_блоков [вид_теста(rwc)]\n"),
		  argv[0] );
		exit( 1 );
	}
	Inpipe = !isatty(fileno(stdout));

	V0 = argv[0];
	verbose = 1;
	if( !strcmp("-v",argv[1]) )  {
		verbose = 0;
		--argc;
		++argv;
	}

	if( (dev=open(argv[1],2)) == -1 ) {
		fprintf(stderr, ediag(
		   "%s: не могу открыть устройство %s\n",
		   "%s: can't open device %s\n"), V0, argv[1] );
		exit( 1 );
	}

	p = index(argv[2],'-');
	if( p == 0 ) {
		bfrom = 0;
		if( sscanf(argv[2],"%lu",&blocks) != 1 ) {
err_bl:                 fprintf(stderr, ediag(
		  "%s: bad number of blocks: %s\n",
		  "%s: неверное число блоков: %s\n"), V0, argv[2] );
			exit( 1 );
		}
	} else {
		if( sscanf(argv[2],"%lu-%lu",&bfrom,&blocks) != 2 ||
		    bfrom > blocks )
			goto err_bl;
	}

	if( argc==4 )
		ptest = argv[3];
	else
		ptest = "r";

	time( &tim );
	code = tim[1];
	ttyflag = isatty(fileno(stderr)) && verbose;
	all_defect = 0;
	while( c = *ptest++ ) {
		if( ttyflag )
			fprintf(stderr, "\n" );
		switch( c ) {
		    case 'r':
			if( verbose )
				fprintf(stderr, ediag( "READ:\n",
					       "ЧТЕНИЕ:\n" ) );
			break;
		    case 'w':
			if( verbose ) {
				fprintf(stderr, ediag( "WRITE:\n",
					       "ЗАПИСЬ:\n" ) );
				++code;
			}
			break;
		    case 'c':
			if( verbose )
				fprintf(stderr, ediag( "COMPARE:\n",
					       "СРАВНЕНИЕ:\n" ) );
		}
		defect = 0;
		for( bl = bfrom ; bl < blocks ; bl += kb ) {
			nb = blocks - bl;
			if( nb > kb )
				nb = kb;
			lb = nb * lblock;
			lseek( dev, bl*(long)lblock, 0 );
			if( ttyflag ) {
				fprintf(stderr, "%6lu\r", bl );
			}
			switch( c ) {
			    case 'r':
				if( read( dev, buf, lb ) != lb ) {
					for( i = 0 ; i<nb ; i++ ) {
						lseek( dev, (bl+i)*(long)lblock, 0 );
						if( read( dev, buf, lblock ) != lblock ) {
							fprintf(stdout, Inpipe? "%lu\n": ediag(
							   "  %6lu - read error\n",
							   "  %6lu - не читается\n"), bl+i );
							fflush(stdout);
							fprintf(stderr,"%6lu\n",bl+i);
							++defect;
						}
					}
				}
				break;

			    case 'w':
				cd = code + bl;
				for( i = 0 ; i<lb/2 ; ++i, ++cd )
					buf[i] = cd;
				if( write( dev, buf, lb ) != lb ) {
					for( i = 0 ; i<nb ; i++ ) {
						lseek( dev, bl+i*(long)lblock, 0 );
						if( write(dev,&buf[i*lb2],lblock) != lblock ) {
							fprintf(stdout, Inpipe? "%lu\n": ediag(
								"  %6lu - write error\n",
								"  %6lu - не пишется\n"), bl+i );
							fflush(stdout);
							fprintf(stderr,"%6lu\n",bl+i);
							++defect;
						}
					}
				}
				break;

			    case 'c':
				if( read( dev, buf, lb ) != lb ) {
					for( i = 0 ; i<nb ; i++ ) {
						lseek( dev, (bl+i)*(long)lblock, 0 );
						if( read( dev, &buf[i*lb2], lblock) != lblock ) {
							fprintf(stdout, Inpipe? "%lu\n": ediag(
								"  %6lu - read error\n",
								"  %6lu - не читается\n"), bl+i );
							fflush(stdout);
							fprintf(stderr,"%6lu\n",bl+i);
							++defect;
						}
					}
				}
				cd = code + bl;
				for( i = 0 ; i<lb/2 ; ++i ) {
					if( buf[i] != cd+i ) {
						fprintf(stdout, Inpipe? "%lu\n": ediag(
							"  %6lu - compare error\n",
							"  %6lu - не сравнился\n"), bl+(i/256) );
						fflush(stdout);
						++defect;
						i =  (i/256+1)*256;
					}
				}
				break;
			}
		}
		if( ttyflag ) { /* штобы было красивше */
			fprintf(stderr, "%6lu\r", blocks );
		}
		if( defect > all_defect )  all_defect = defect;
	}

	if( ttyflag )
		fprintf(stderr, "\n" );
	if( all_defect != 0 )
		fprintf(stderr, ediag(
			"%s: testing %s %d bad blocks found\n",
			"%s: на %s %d сбойных блоков\n"), V0, argv[1], all_defect );
	exit( all_defect != 0 );
}
@


1.2
log
@Сделана блокировка по 10 К.
@
text
@d18 5
a22 2
** $Header: tstdev.c,v 1.1 88/05/23 13:26:32 root Exp $
** $Log:        tstdev.c,v $
d30 1
a30 1
static char     Rcs_id[] = "$Header: tstdev.c,v 1.1 88/05/23 13:26:32 root Exp $";
d138 1
a138 1
						lseek( dev, (bl+i)*(long)lblock, 512 );
@


1.1
log
@Initial revision
@
text
@d18 5
a22 2
** $Header$
** $Log$
d27 1
a27 1
static char     Rcs_id[] = "$Header$";
d35 1
a35 1
#define kb      24                           /* коэффициент блокирования */
@
