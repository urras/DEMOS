head     1.1;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.1
date     88.11.18.18.05.53;  author korotaev;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@# define number 257
# define stop 258
# define DEFINED 259
# define EQ 260
# define NE 261
# define LE 262
# define GE 263
# define LS 264
# define RS 265
# define ANDAND 266
# define OROR 267
# define UMINUS 268

#define yyclearin yychar = -1
#define yyerrok yyerrflag = 0
extern int yychar;
extern short yyerrflag;
#ifndef YYMAXDEPTH
#define YYMAXDEPTH 150
#endif
#ifndef YYSTYPE
#define YYSTYPE int
#endif
YYSTYPE yylval, yyval;
# define YYERRCODE 256

# line 80 "cpy.y"

# include "yylex.c"
short yyexca[] ={
-1, 1,
	0, -1,
	-2, 0,
-1, 44,
	262, 0,
	263, 0,
	60, 0,
	62, 0,
	-2, 9,
-1, 45,
	262, 0,
	263, 0,
	60, 0,
	62, 0,
	-2, 10,
-1, 46,
	262, 0,
	263, 0,
	60, 0,
	62, 0,
	-2, 11,
-1, 47,
	262, 0,
	263, 0,
	60, 0,
	62, 0,
	-2, 12,
-1, 48,
	260, 0,
	261, 0,
	-2, 13,
-1, 49,
	260, 0,
	261, 0,
	-2, 14,
	};
# define YYNPROD 30
# define YYLAST 363
short yyact[]={

  13,  24,  35,  58,  13,  11,  14,  30,  15,  11,
  12,  60,  13,  24,  12,   1,  57,  11,  14,  30,
  15,  59,  12,  18,  13,  19,  29,   0,   0,  11,
  14,   0,  15,   0,  12,  18,   3,  19,  29,  13,
  24,  31,  32,  33,  11,  14,  30,  15,   0,  12,
  13,  24,   0,   0,   0,  11,  14,  25,  15,   5,
  12,   0,  18,   0,  19,  29,   7,   0,   0,  25,
   0,   4,   0,  18,   0,  19,  29,   0,  13,  24,
   0,   0,   0,  11,  14,   0,  15,  26,  12,   0,
   0,   0,  13,  24,   0,   0,  25,  11,  14,  26,
  15,  18,  12,  19,  13,  24,   0,  25,   0,  11,
  14,   0,  15,  13,  12,  18,   0,  19,  11,  14,
   0,  15,   0,  12,   0,   0,  26,  18,   0,  19,
   0,   0,   0,   0,  13,  25,  18,  26,  19,  11,
  14,   0,  15,   0,  12,  13,   0,   0,   0,  25,
  11,  14,   6,  15,   0,  12,   0,  18,   0,  19,
   0,   0,   0,   0,   0,  26,   0,   0,   0,   0,
   0,   0,   2,   0,   0,   0,   0,   0,   0,  26,
  34,   0,   0,   0,  37,  38,  39,  40,  41,  42,
  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,
  53,  54,  55,  56,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,   0,  36,
   0,   0,   0,  22,  23,  20,  21,  16,  17,  27,
  28,   0,  61,   0,   0,  22,  23,  20,  21,  16,
  17,  27,  28,   0,   0,   0,   0,   0,   0,   0,
   0,  16,  17,   0,   0,   0,   0,   0,   0,   0,
  10,   0,  22,  23,  20,  21,  16,  17,  27,  28,
   0,   0,   0,  22,  23,  20,  21,  16,  17,  27,
  28,   0,   0,   9,   0,   8,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
   0,  22,  23,  20,  21,  16,  17,  27,   0,   0,
   0,   0,   0,   0,   0,  22,  23,  20,  21,  16,
  17,   0,   0,   0,   0,   0,   0,  22,  23,  20,
  21,  16,  17,   0,   0,   0,  22,  23,  20,  21,
  16,  17,   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,   0,  20,
  21,  16,  17 };
short yypact[]={

  26,-1000,   2,-1000,  26,  26,  26,  26, -38,-1000,
-1000,  26,  26,  26,  26,  26,  26,  26,  26,  26,
  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,
  26,-1000,-1000,-1000, -25,-254,-1000,-1000,-1000,-1000,
 -33, -33, 108, 108, -13, -13, -13, -13,  97,  97,
  76,  67,  67,  55,  41, -37,  13,-1000, -30,  26,
-1000,  13 };
short yypgo[]={

   0,  15, 172,  36 };
short yyr1[]={

   0,   1,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   2,   2,   2,   2,   2,   2,   2,
   2,   2,   2,   3,   3,   3,   3,   3,   3,   3 };
short yyr2[]={

   0,   2,   3,   3,   3,   3,   3,   3,   3,   3,
   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,
   5,   3,   1,   2,   2,   2,   3,   4,   2,   1 };
short yychk[]={

-1000,  -1,  -2,  -3,  45,  33, 126,  40, 259, 257,
 258,  42,  47,  37,  43,  45, 264, 265,  60,  62,
 262, 263, 260, 261,  38,  94, 124, 266, 267,  63,
  44,  -3,  -3,  -3,  -2,  40, 257,  -2,  -2,  -2,
  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,  -2,
  -2,  -2,  -2,  -2,  -2,  -2,  -2,  41, 257,  58,
  41,  -2 };
short yydef[]={

   0,  -2,   0,  22,   0,   0,   0,   0,   0,  29,
   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
   0,  23,  24,  25,   0,   0,  28,   2,   3,   4,
   5,   6,   7,   8,  -2,  -2,  -2,  -2,  -2,  -2,
  15,  16,  17,  18,  19,   0,  21,  26,   0,   0,
  27,  20 };
#
/*
 * $Log:	yaccpar,v $
 *Revision 1.2  86/12/28  17:07:26  avg
 *Изменен на обратный смысл макроопределения
 *YYVX - теперь оно означает разрешение размещения 
 *yyv в стеке yaccpar.
 *
 */
#define YYFLAG   -1000
#define YYERROR  goto yyerrlab
#define YYACCEPT return(0)
#define YYABORT  return(1)

/*
 * Анализатор выдачи yacc-а
 */

#ifdef YYDEBUGON
int     yydebug = 1;    /* @@VG спец. случай */
#define YYDEBUG
#else
# ifdef YYDEBUG
int     yydebug = 0;    /* 1 для отладки */
# endif
#endif

#ifdef YYVX      /* Размещать YYV в стеке */
YYSTYPE yyv[YYMAXDEPTH]; /* стек для хранения значений */
#endif

int     yychar = -1;     /* номер текущей лексемы */
int     yynerrs = 0;     /* число ошибок */
short   yyerrflag = 0;   /* флаг восстановления после ошибок */

yyparse()
{
	extern            _ediag;  /* см. crt0.o @@VG */
	short             yys[YYMAXDEPTH];
#ifndef YYVX
	YYSTYPE yyv[YYMAXDEPTH];   /* стек для хранения значений */
#endif
	short             yyj, yym;
	register YYSTYPE *yypvt;
	register short    yystate, *yyps, yyn;
	register YYSTYPE *yypv;
	register short   *yyxi;

	yystate   = 0;
	yychar    = -1;
	yynerrs   = 0;
	yyerrflag = 0;
	yyps = &yys[-1];
	yypv = &yyv[-1];

    yystack:    /* занести состояние и значение в стек */

#ifdef YYDEBUG
	if( yydebug  ) printf( _ediag? "state %d, char %d\n":
				       "состояние %d, лексема %d\n",
			       yystate, yychar );
#endif
	if( ++yyps > &yys[YYMAXDEPTH] ) {
		yyerror( _ediag? "yacc stack overflow":
				 "переполнение стека yacc" );
		return(1);
	}
	*yyps = yystate;
	++yypv;
	*yypv = yyval;

    yynewstate:
	yyn = yypact[yystate];
	if( yyn <= YYFLAG )
		goto yydefault; /* простое состояние */

	if( yychar < 0 )
		if( (yychar = yylex()) < 0 )
			yychar = 0;
	if( (yyn += yychar) < 0 || yyn >= YYLAST )
		goto yydefault;

	if( yychk[yyn = yyact[yyn]] == yychar ) { /* возможен сдвиг */
		yychar  = -1;
		yyval   = yylval;
		yystate = yyn;
		if( yyerrflag > 0 )
			--yyerrflag;
		goto yystack;
	}

    yydefault:  /* действие по умолчанию */

	if( (yyn = yydef[yystate]) == -2 ) {
		if( yychar < 0 )
			if( (yychar = yylex()) < 0 )
				yychar = 0;

		/* просмотреть таблицу исключений */

		for( yyxi = yyexca ; (*yyxi != (-1)) || (yyxi[1] != yystate) ;
								   yyxi += 2 )
			/* ПУСТО */;

		while( *(yyxi += 2) >= 0 ) {
			if( *yyxi == yychar )
				break;
		}
		if( (yyn = yyxi[1]) < 0 )
			return(0);   /* принято */
	}

	if( yyn == 0 ) {        /* ошибка */

		/* ошибка ... попытка продолжить разбор */

		switch( yyerrflag ) {
		    case 0:     /* отметить новую ошибку */

#ifndef YYNOERRS  /* by @@VG */
			yyerror( _ediag? "syntax error":
					 "синтаксическая ошибка" );
#endif
		    yyerrlab:
			++yynerrs;

		    case 1:
		    case 2: /* неполностью восстановлено после ошибки ...
					      попробовать еще раз */

			yyerrflag = 3;

			/* поискать состояние где возможен сдвиг при "error" */

			while ( yyps >= yys ) {
				yyn = yypact[*yyps] + YYERRCODE;
				if( yyn >= 0 &&
				    yyn < YYLAST &&
				    yychk[yyact[yyn]] == YYERRCODE ) {

					/* имитировать сдвиг при "error" */
					yystate = yyact[yyn];
					goto yystack;
				}
				yyn = yypact[*yyps];

		 /* в текущем yyps нет сдвига для "error", поднять из стека */

#ifdef YYDEBUG
				if( yydebug )
					printf( _ediag ?
    "error recovery pops state %d, uncovers %d\n":
    "восстановление после ошибки подняло из стека состояние %d, осталось %d\n",
						*yyps, yyps[-1] );
#endif
				--yyps;
				--yypv;
			}

		/* в стеке нет состояний со сдвигом для ошибки ... облом */

		    yyabort:
			return(1);

		    case 3:  /* нет возможности сдвига; прочитать лексему */

#ifdef YYDEBUG
			if( yydebug )
				printf( _ediag?
		"error recovery discards char %d\n":
		"восстановление после ошибки: пропущена лексема %d\n",
					 yychar );
#endif

			if( yychar == 0 )
				goto yyabort; /* не пропускать EOF, конец */
			yychar = -1;
			goto yynewstate;   /* попробовать еще раз в том же состоянии */
		}
	}

	/* свертка правила yyn */

#ifdef YYDEBUG
	if( yydebug )
		printf( _ediag? "reduce %d\n": "свертка %d\n", yyn );
#endif
	yyps -= yyr2[yyn];
	yypvt = yypv;
	yypv -= yyr2[yyn];
	yyval = yypv[1];
	yym = yyn;

	/* обратиться к таблице переходов чтобы узнать след. состояние */
	yyn = yyr1[yyn];
	yyj = yypgo[yyn] + *yyps + 1;
	if( yyj >= YYLAST || yychk[yystate = yyact[yyj]] != -yyn )
		yystate = yyact[yypgo[yyn]];
	switch(yym){
		
case 1:
# line 20 "cpy.y"
{return(yypvt[-1]);} break;
case 2:
# line 24 "cpy.y"
{yyval = yypvt[-2] * yypvt[-0];} break;
case 3:
# line 26 "cpy.y"
{yyval = yypvt[-2] / yypvt[-0];} break;
case 4:
# line 28 "cpy.y"
{yyval = yypvt[-2] % yypvt[-0];} break;
case 5:
# line 30 "cpy.y"
{yyval = yypvt[-2] + yypvt[-0];} break;
case 6:
# line 32 "cpy.y"
{yyval = yypvt[-2] - yypvt[-0];} break;
case 7:
# line 34 "cpy.y"
{yyval = yypvt[-2] << yypvt[-0];} break;
case 8:
# line 36 "cpy.y"
{yyval = yypvt[-2] >> yypvt[-0];} break;
case 9:
# line 38 "cpy.y"
{yyval = yypvt[-2] < yypvt[-0];} break;
case 10:
# line 40 "cpy.y"
{yyval = yypvt[-2] > yypvt[-0];} break;
case 11:
# line 42 "cpy.y"
{yyval = yypvt[-2] <= yypvt[-0];} break;
case 12:
# line 44 "cpy.y"
{yyval = yypvt[-2] >= yypvt[-0];} break;
case 13:
# line 46 "cpy.y"
{yyval = yypvt[-2] == yypvt[-0];} break;
case 14:
# line 48 "cpy.y"
{yyval = yypvt[-2] != yypvt[-0];} break;
case 15:
# line 50 "cpy.y"
{yyval = yypvt[-2] & yypvt[-0];} break;
case 16:
# line 52 "cpy.y"
{yyval = yypvt[-2] ^ yypvt[-0];} break;
case 17:
# line 54 "cpy.y"
{yyval = yypvt[-2] | yypvt[-0];} break;
case 18:
# line 56 "cpy.y"
{yyval = yypvt[-2] && yypvt[-0];} break;
case 19:
# line 58 "cpy.y"
{yyval = yypvt[-2] || yypvt[-0];} break;
case 20:
# line 60 "cpy.y"
{yyval = yypvt[-4] ? yypvt[-2] : yypvt[-0];} break;
case 21:
# line 62 "cpy.y"
{yyval = yypvt[-0];} break;
case 22:
# line 64 "cpy.y"
{yyval = yypvt[-0];} break;
case 23:
# line 67 "cpy.y"
{yyval = -yypvt[-0];} break;
case 24:
# line 69 "cpy.y"
{yyval = !yypvt[-0];} break;
case 25:
# line 71 "cpy.y"
{yyval = ~yypvt[-0];} break;
case 26:
# line 73 "cpy.y"
{yyval = yypvt[-1];} break;
case 27:
# line 75 "cpy.y"
{yyval= yypvt[-1];} break;
case 28:
# line 77 "cpy.y"
{yyval = yypvt[-0];} break;
case 29:
# line 79 "cpy.y"
{yyval= yypvt[-0];} break;
	}
	goto yystack;  /* положить в стек новое состояние и значение */
}
@
