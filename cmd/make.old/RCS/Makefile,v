head     1.4;
access   ;
symbols  SM4:1.1;
locks    ;
comment  @# @;


1.4
date     89.01.17.17.59.35;  author dvolodin;  state Exp;
branches ;
next     1.3;

1.3
date     87.04.14.13.02.30;  author dmitry;  state Exp;
branches ;
next     1.2;

1.2
date     87.03.06.14.51.45;  author alex;  state Exp;
branches ;
next     1.1;

1.1
date     86.12.18.06.09.58;  author fox;  state Rel;
branches ;
next     ;


desc
@
Интерпретатор Make. 
@


1.4
log
@Overlaid.
@
text
@# $Header: Makefile,v 1.3 87/04/14 13:02:30 dmitry Exp $
# $Log:	Makefile,v $
# Revision 1.3  87/04/14  13:02:30  dmitry
# Приведен в чувство (т.е. к стандартному виду). by @@VG
# 
# Revision 1.2  87/03/06  14:51:45  alex
# ls -lt RCS
# Включено c7t10 для экономии памяти.
#
# Revision 1.1  86/12/18  06:09:58  fox
# Initial revision
#
# Revision 1.1  86/01/10  09:31:06  fox
# Initial revision
#

# Для версии исх. текстов без архивов RCS установите R=X
R=

RCS=RCS
COFLAGS=-q

P = print
T =
FILES = main.c doname.c misc.c files.c dosys.c defs.h make.rc
OBJECTS = main.o doname.o misc.o files.o dosys.o gram.o
LIBES=
LINT = lint -ps
CFLAGS = -O -DSMALL -DVFORK
COMP =
LDFLAGS = -Q

all:    make make.rc

install: make make.rc
	cp make /bin/make
	cp make.rc /lib/make.rc

make:  $(OBJECTS)
	$(CC) $(LDFLAGS) $(OBJECTS) $(LIBES) -o make

$(OBJECTS):  defs.h

clean clear:
	-rm -f *.o gram.c
	-rm -f *.b *.bak make

CLRSRC: clean
	-rm -f $(FILES)

save:                   # Запись в архив
	ci -N$(COMP) -q $(FILES) Makefile

#   Чтение исходных текстов из архивных файлов RCS.

$(R)defs.h:      $(RCS)/defs.h,v            ;   co ${COFLAGS} defs.h
$(R)main.c:      $(RCS)/main.c,v            ;   co ${COFLAGS} main.c
$(R)doname.c:    $(RCS)/doname.c,v          ;   co ${COFLAGS} doname.c
$(R)misc.c:      $(RCS)/misc.c,v            ;   co ${COFLAGS} misc.c
$(R)files.c:     $(RCS)/files.c,v           ;   co ${COFLAGS} files.c
$(R)dosys.c:     $(RCS)/dosys.c,v           ;   co ${COFLAGS} dosys.c
$(R)gram.y:      $(RCS)/gram.y,v            ;   co ${COFLAGS} gram.y
$(R)Makefile:    $(RCS)/Makefile,v          ;   co ${COFLAGS} Makefile
$(R)make.rc:     $(RCS)/make.rc,v           ;   co $(COFLAGS) make.rc
@


1.3
log
@Приведен в чувство (т.е. к стандартному виду). by @@VG
@
text
@d1 5
a5 2
# $Header: Makefile,v 1.2 87/03/06 14:51:45 alex Exp $
# $Log: Makefile,v $
d31 1
d40 1
a40 2
	$(CC) $(CFLAGS) $(OBJECTS) $(LIBES) -o make
	c7t10 make
@


1.2
log
@ls -lt RCS
Включено c7t10 для экономии памяти.
@
text
@d1 6
a6 2
# $Header: Makefile,v 1.1 86/12/18 06:09:58 fox Rel $
# $Log:	Makefile,v $
d9 1
a9 1
# 
d12 1
a12 1
# 
d14 6
d22 1
a22 1
FILES = Makefile main.c doname.c misc.c files.c dosys.c gram.c
a27 1
RCS = RCS/
d29 1
a29 1
all:	make
d31 1
a31 5
cmp:	make
	cmp make /bin/make
	rm *.o gram.c make

cp:	make
d33 1
a33 1
	rm *.o gram.c make
d41 3
a43 2
clean:
	-rm *.o gram.c
d45 2
a46 2
install: make
	install -s make $(DESTDIR)/bin/make
a47 8
printall:               # Печать всех файлов
	-pr $(FILES) | $P
	touch print

print:  $(FILES)        # Печать только измененых файлов
	-pr $? | $P
	touch print

d49 1
a49 1
	ci -N$(COMP) -q main.c doname.c misc.c files.c dosys.c gram.y defs.h
a50 22
test: 1zap 2zap
	diff 1zap 2zap
	rm 1zap 2zap

1zap:
	./make -dp | grep -v TIME >1zap

2zap:
	/bin/make -dp | grep -v TIME >2zap

time:  time1 time2 ;

time1 time2 :
	time ./make $T
	time /bin/make $T

lint :  dosys.c doname.c files.c main.c misc.c gram.c
	$(LINT) dosys.c doname.c files.c main.c misc.c gram.c

src:
	cp $(FILES) /usr/src/cmd/make

d53 9
a61 7
defs.h:    ;   co -r${COMP} defs.h
main.c:    ;   co -r${COMP} main.c
doname.c:  ;   co -r${COMP} doname.c
misc.c:    ;   co -r${COMP} misc.c
files.c:   ;   co -r${COMP} files.c
dosys.c:   ;   co -r${COMP} dosys.c
gram.y:    ;   co -r${COMP} gram.y
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $Header: Makefile,v 1.1 86/01/10 09:31:06 fox Exp $
d3 3
d16 2
a17 2
CFLAGS = -O
COMP = SM4
d31 2
a32 1
	$(CC) -n $(CFLAGS) $(OBJECTS) $(LIBES) -o make
d77 7
a83 7
defs.h:    $(RCS)defs.h,v;   co -r${COMP} defs.h
main.c:    $(RCS)main.c,v;   co -r${COMP} main.c
doname.c:  $(RCS)doname.c,v; co -r${COMP} doname.c
misc.c:    $(RCS)misc.c,v;   co -r${COMP} misc.c
files.c:   $(RCS)files.c,v;  co -r${COMP} files.c
dosys.c:   $(RCS)dosys.c,v;  co -r${COMP} dosys.c
gram.y:    $(RCS)gram.y,v;   co -r${COMP} gram.y
@
