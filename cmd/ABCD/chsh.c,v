head     1.1;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.1
date     88.08.23.21.20.11;  author root;  state Exp;
branches ;
next     ;


desc
@
Программа для измененя поля login_shell в /etc/passwd.
@



1.1
log
@Initial revision
@
text
@/*
 * chsh
 */
#include <stdio.h>
#include <whoami.h>
#include <signal.h>
#include <pwd.h>
#include <ediag.h>

char    passwd[] = "/etc/passwd";
char    temp[]   = "/etc/ptmp";
struct  passwd *pwd;
struct  passwd *getpwent();
int     endpwent();
char    *crypt();
char    *getpass();
char    buf[BUFSIZ];

main(argc, argv)
char *argv[];
{
	int u,fi,fo;
	FILE *tf;
	char *str;
	int found = 0;

	if(argc < 2 || argc > 3) {
		printf(ediag("Usage: %s user shell\n",
			     "Вызов: %s user shell\n"),*argv);
		goto bex;
	}
	if (argc == 2)
		argv[2] = "";
	else if (*argv[2] != '/') {
		str= malloc(strlen(argv[2])+6);
		strcpy(str,"/bin/");
		argv[2]=strcat(str,argv[2]);
	}
	if (argv[2][0] && access(argv[2],1)){
		perror(argv[2]);
		goto out;
	}
	while((pwd=getpwent()) != NULL){
		if(strcmp(pwd->pw_name,argv[1]) == 0){
			u = getuid();
			if(u!=0 && u != pwd->pw_uid){
				puts(ediag("Permission denied.",
					   "Не имеете права."));
				goto bex;
				}
			found++;
			break;
			}
		}
	endpwent();
	if (found == 0) {
		printf(ediag("Unknown user: %s\n",
			     "Неизвестный пользователь: %s\n"),argv[1]);
		goto bex;
	}
	signal(SIGHUP, 1);
	signal(SIGINT, 1);
	signal(SIGQUIT, 1);
#ifdef SIGTSTP
	signal(SIGTSTP, 1);
#endif

	if(access(temp, 0) >= 0) {
		puts(ediag("Temporary file busy -- try again",
			   "Занят временный файл -- повтори"));
		goto bex;
	}
	if((tf=fopen(temp,"w")) == NULL) {
		puts(ediag("Cannot create temporary file",
			   "Не могу создать временный файл"));
		goto bex;
	}

/*
 *      copy passwd to temp, replacing matching lines
 *      with new shell.
 */

	while((pwd=getpwent()) != NULL) {
		if(strcmp(pwd->pw_name,argv[1]) == 0) {
			u = getuid();
			if(u != 0 && u != pwd->pw_uid) {
				puts(ediag("Permission denied.",
					   "Не имеете права."));
				goto out;
			}
			pwd->pw_shell = argv[2];
		}
		fprintf(tf,"%s:%s:%d:%d:%s:%s:%s\n",
			pwd->pw_name,
			pwd->pw_passwd,
			pwd->pw_uid,
			pwd->pw_gid,
			pwd->pw_gecos,
			pwd->pw_dir,
			pwd->pw_shell);
	}
	endpwent();
	fclose(tf);

/*
 *      copy temp back to passwd file
 */

	if((fi=open(temp,0)) < 0) {
		puts(ediag("Temp file disappeared!",
			   "Потерян временный файл!"));
		goto out;
	}
	if((fo=creat(passwd, 0644)) < 0) {
		puts(ediag("Cannot recreate passwd file.",
			   "Не могу создать новый файл passwd."));
		goto out;
	}
	while((u=read(fi,buf,sizeof(buf))) > 0) write(fo,buf,u);

out:
	unlink(temp);

bex:
	exit(1);
}
@
