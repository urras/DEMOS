head     1.4;
access   ;
symbols  ;
locks    abs:1.4;
comment  @ * @;


1.4
date     89.01.10.12.04.14;  author abs;  state Exp;
branches ;
next     1.3;

1.3
date     88.12.02.19.00.15;  author dvolodin;  state Exp;
branches ;
next     1.2;

1.2
date     88.11.28.19.44.38;  author abs;  state Exp;
branches ;
next     1.1;

1.1
date     88.05.03.20.22.56;  author root;  state Exp;
branches ;
next     ;


desc
@
@


1.4
log
@заменил обратно lstat на stat.
Оказывается, в этом был глубокий смысл - сисвызов chmod
НЕПРИМЕНИМ к symlink-ам, а коды доступа, стоящие у symlinka
никогда и никем не проверяются ! (вообще игнорируются)
@
text
@/*
**
** Эта штука добавляется в исходный файл перед
** запуском rcs               Давидов 04.28.88
**
** $Header: chmod.c,v 1.3 88/12/02 19:00:15 dvolodin Exp $
** $Log:        chmod.c,v $
 * Revision 1.3  88/12/02  19:00:15  dvolodin
 * Не устанавливалась ncom. Поправлено.
 *
 * Revision 1.2  88/11/28  19:44:38  abs
 * Теперь chmod на symlink меняет доступ на САМУ ССЫЛКУ ,
 * а не на указываемый ею файл.
 *
 * Revision 1.1  88/05/03  20:22:56  root
 * Initial revision
 *
*/

# ifndef        lint
/* NOXSTR  */
static char     Rcs_id[] = "$Header: chmod.c,v 1.3 88/12/02 19:00:15 dvolodin Exp $";
/* YESXSTR */
# endif         lint

/*
 * chmod [ugoa][+-=][rwxstugo] files
 *  change mode of files
 */
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <ediag.h>

#define USER    05700   /* user's bits */
#define GROUP   02070   /* group's bits */
#define OTHER   00007   /* other's bits */
#define ALL     01777   /* all (note absence of setuid, etc) */

#define READ    00444   /* read permit */
#define WRITE   00222   /* write permit */
#define EXEC    00111   /* exec permit */
#define SETID   06000   /* set[ug]id */
#define STICKY  01000   /* sticky bit */

char    *ms;
int     um;
struct  stat st;
char    *ncom;

main(argc,argv)
char **argv;
{
	register i;
	register char *p;
	int status = 0;

	ncom = argv[0] ;
	if (argc < 3) {
		fprintf(stderr,ediag("Usage: %s [ugoa][+-=][rwxstugo] file ...\n",
				     "Вызов: %s [ugoa][+-=][rwxstugo] файл ...\n"),
				     ncom);
		exit(255);
	}
	ms = argv[1];
	um = umask(0);
	newmode(0);
	for (i = 2; i < argc; i++) {
		p = argv[i];
		if ( stat (p, &st) < 0) {
			fprintf(stderr,ediag("%s: can't access %s\n",
					     "%s: нет доступа %s\n"),
					     ncom, p);
			++status;
			continue;
		}
		ms = argv[1];
		if (chmod(p, newmode(st.st_mode)) < 0) {
			fprintf(stderr,ediag("%s: can't change %s\n",
					     "%s: не могу изменить %s\n"),
					     ncom, p);
			++status;
			continue;
		}
	}
	exit(status);
}

newmode(nm)
unsigned nm;
{
	register o, m, b;

	m = abs();
	if (!*ms)
		return(m);
	do {
		m = who();
		while (o = what()) {
			b = where(nm);
			switch (o) {
			case '+':
				nm |= b & m;
				break;
			case '-':
				nm &= ~(b & m);
				break;
			case '=':
				nm &= ~m;
				nm |= b & m;
				break;
			}
		}
	} while (*ms++ == ',');
	if (*--ms) {
		fprintf(stderr,ediag("%s: invalid mode\n",
				     "%s: неверная мода\n"),ncom);
		exit(255);
	}
	return(nm);
}

abs()
{
	register c, i;

	i = 0;
	while ((c = *ms++) >= '0' && c <= '7')
		i = (i << 3) + (c - '0');
	ms--;
	return(i);
}

who()
{
	register m;

	m = 0;
	for (;;) switch (*ms++) {
	case 'u':
		m |= USER;
		continue;
	case 'g':
		m |= GROUP;
		continue;
	case 'o':
		m |= OTHER;
		continue;
	case 'a':
		m |= ALL;
		continue;
	default:
		ms--;
		if (m == 0)
			m = ALL & ~um;
		return m;
	}
}

what()
{
	switch (*ms) {
	case '+':
	case '-':
	case '=':
		return *ms++;
	}
	return(0);
}

where(om)
register om;
{
	register m;

	m = 0;
	switch (*ms) {
	case 'u':
		m = (om & USER) >> 6;
		goto dup;
	case 'g':
		m = (om & GROUP) >> 3;
		goto dup;
	case 'o':
		m = (om & OTHER);
	dup:
		m &= (READ|WRITE|EXEC);
		m |= (m << 3) | (m << 6);
		++ms;
		return m;
	}
	for (;;) switch (*ms++) {
	case 'r':
		m |= READ;
		continue;
	case 'w':
		m |= WRITE;
		continue;
	case 'x':
		m |= EXEC;
		continue;
	case 's':
		m |= SETID;
		continue;
	case 't':
		m |= STICKY;
		continue;
	default:
		ms--;
		return m;
	}
}
@


1.3
log
@Не устанавливалась ncom. Поправлено.
@
text
@d6 5
a10 2
** $Header: chmod.c,v 1.2 88/11/28 19:44:38 abs Exp $
** $Log:	chmod.c,v $
d14 1
a14 1
 * 
d22 1
a22 1
static char     Rcs_id[] = "$Header: chmod.c,v 1.2 88/11/28 19:44:38 abs Exp $";
a56 2
	extern int stat(), lstat();
	int (*statf)() = lstat;
d70 1
a70 1
		if ((*statf)(p, &st) < 0) {
@


1.2
log
@Теперь chmod на symlink меняет доступ на САМУ ССЫЛКУ ,
а не на указываемый ею файл.
@
text
@d6 6
a11 2
** $Header: chmod.c,v 1.1 88/05/03 20:22:56 root Exp $
** $Log:        chmod.c,v $
d19 1
a19 1
static char     Rcs_id[] = "$Header: chmod.c,v 1.1 88/05/03 20:22:56 root Exp $";
d57 1
@


1.1
log
@Initial revision
@
text
@d6 5
a10 2
** $Header$
** $Log$
d15 1
a15 1
static char     Rcs_id[] = "$Header$";
d18 1
a18 1
 
d50 2
d64 1
a64 1
		if (stat(p, &st) < 0) {
@
