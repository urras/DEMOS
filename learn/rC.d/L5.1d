#print
Напишите программу подсчитывающую число пробелов, табуляций и
символов новой строки среди символов, поступающих ей на ввод, и
печатающих их общее количество.
Не забудте определить значение конца файла в начале Вашей
программы.
Самое лучшее - это добавить

 #include <stdio.h>

в первую строку Вашей программы.
____ должен быть в первой колонке
(См. страницу 143 учебника по языку C.)
Скомпилировать программу можно и так:

cc name.c -lS

#once #create Ref
Вот кое-какая рухлядь, которая
содержит
	пробелы
	табуляции
	и признаки новой строки.
#user
a.out <Ref >test1
a.out </dev/null >test2
grep 14 test1 >/dev/null && grep 0 test2 >/dev/null
#succeed
А вот наше решение:

 #include <stdio.h>

main()
{
	int n, c;

	n = 0;
	while ((c = getchar()) != EOF)
		if (c == ' ' || c == '\t' || c == '\n')
			n++;
	printf("%d\n", n);
}

Эта программа не будет работать с большими файлами, т.к.
описатель int не позволяет  больших чисел.
#log
#next
5.1e 10
5.2e 5
