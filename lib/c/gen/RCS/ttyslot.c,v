head     1.2;
access   avg dmitry alex;
symbols  ;
locks    ;
comment  @ * @;


1.2
date     86.04.21.21.06.15;  author avg;  state Exp;
branches ;
next     1.1;

1.1
date     86.04.21.20.07.17;  author root;  state Exp;
branches ;
next     ;


desc
@Библиотека C.
@


1.2
log
@Сделаны правки под новый формат ttys.
@
text
@/*
 * $Log:        ttyslot.c,v $
 * Revision 1.1  86/04/21  20:07:17  root
 * Initial revision
 *
 */

/*
 * Return the number of the slot in the utmp file
 * corresponding to the current user: try for file 0, 1, 2.
 * Definition is the line number in the /etc/ttys file.
 */


char    *ttyname();
char    *getttys();
char    *rindex();
static  char    ttys[]  = "/etc/ttys";

#define NULL    0

ttyslot()
{
	register char *tp, *p;
	register s, tf;

	if ((tp=ttyname(0))==NULL && (tp=ttyname(1))==NULL && (tp=ttyname(2))==NULL)
		return(0);
	if ((p = rindex(tp, '/')) == NULL)
		p = tp;
	else
		p++;
	if ((tf=open(ttys, 0)) < 0)
		return(0);
	s = 0;
	while (tp = getttys(tf)) {
		s++;
		if (strcmp(p, tp)==0) {
			close(tf);
			return(s);
		}
	}
	close(tf);
	return(0);
}

static char *
getttys(f)
{
	static char line[34];
	register char *lp;

	lp = line;
	for (;;) {
		if (read(f, lp, 1) != 1)
			return(NULL);
		if ( *lp == '\t' || *lp == ' ' )
		{
			while (read(f, lp, 1) == 1 && *lp != '\n');
			if(*lp != '\n')
				return(NULL);
		}
		if (*lp =='\n' )
		{
			*lp = '\0';
			return(line+1);
		}
		if( *lp == ':' ) {
			while( read(f, lp, 1)==1 && *lp != '\n' );
			*lp = '\0';
			return(line+1);
		}
		if (lp >= &line[32])
			return(line+1);
		lp++;
	}
}
@


1.1
log
@Initial revision
@
text
@d2 4
a5 1
 * $Log$
a8 6
 *! Change to support the new /etc/ttys format.
 *! getttys uses blank or tab as a line terminator
 *!     WFJolitz 4/7/80
 */

/*
d50 1
a50 1
	static char line[32];
d57 1
a57 1
		if ( *lp == '\t' || *lp == ' ')
d63 1
a63 1
		if (*lp =='\n')
d66 1
a66 1
			return(line+2);
d68 5
d74 1
a74 1
			return(line+2);
@
