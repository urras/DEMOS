head     1.3;
access   dmitry avg alex;
symbols  ;
locks    ;
comment  @/     @;


1.3
date     86.07.22.19.18.09;  author avg;  state Exp;
branches ;
next     1.2;

1.2
date     86.05.17.10.26.17;  author dmitry;  state Exp;
branches ;
next     1.1;

1.1
date     86.04.20.19.06.21;  author dmitry;  state Stab;
branches ;
next     0.0;

0.0
date     86.04.20.17.40.28;  author root;  state Exp;
branches ;
next     ;


desc
@
Стартовый модуль Си-программ.
Включается профилирование.
@


1.3
log
@Выброшена возможность исп. в MSG русских букв, т.к.
это зависит от кодировки.
Кроме того, буква в MSG преобразуется в маленькую -
for the sake of compatibility.
@
text
@/       $Header: mcrt0.s,v 1.2 86/05/17 10:26:17 dmitry Exp $
/
/       Стартовый модуль Си.
/
/       $Log:   mcrt0.s,v $
/     Revision 1.2  86/05/17  09:44:08  dmitry
/     Русский режим устанавливается по любому слову,
/     начинающемуся с любой из 4 букв:
/       r       R       р       Р
/                       (русские)
/
/     Revision 1.1  86/04/20  19:06:21  dmitry
/     Вставлена обработка MSG.
/

cbufs   = 300.

.globl  _monitor
.globl  _sbrk
.globl  _main
.globl  _exit
.globl  _environ
.globl  _etext
.globl  __cleanup
.globl  countbase
.globl  __ediag


start:
	setd
	mov     2(sp),r0
	clr     -2(r0)
	mov     sp,r0
	sub     $4,sp
	mov     4(sp),(sp)
	tst     (r0)+
	mov     r0,2(sp)
1:
	tst     (r0)+
	bne     1b
	cmp     r0,*2(sp)
	blo     1f
	tst     -(r0)
1:
	mov     r0,4(sp)
	mov     r0,_environ

2:
	mov     (r0)+,r2
	beq     2f
	mov     $msg,r3
	mov     $4,r4
1:
	cmpb    (r2)+,(r3)+
	bne     2b
	sob     r4,1b

	bisb    $40,(r2)
	cmpb    (r2),$'r
	bne     2f
	clr     __ediag
2:

	mov     $_etext,r1
	sub     $eprol,r1
	add     $7,r1
	ash     $-3,r1
	bic     $!17777,r1
	mov     $cbufs,-(sp)
	add     $3*[cbufs+1],r1
	mov     r1,-(sp)
	asl     r1
	mov     r1,-(sp)
	jsr     pc,_sbrk
	tst     (sp)+
	cmp     r0,$-1
	beq     9f
	mov     r0,-(sp)
	add     $6,r0
	mov     r0,countbase
	mov     $_etext,-(sp)
	mov     $eprol,-(sp)
	jsr     pc,_monitor
	add     $10.,sp
	jsr     pc,_main
	cmp     (sp)+,(sp)+
	mov     r0,(sp)
	jsr     pc,_exit

9:
	mov     $2,r0
	tst     __ediag
	bne     1f
	sys     write; 8f; 9f-8f
	br      2f
1:
	sys     write; 3f; 4f-3f
2:

.data; 8: <Нет места для буфера монитора\n>; 9:.even; .text
.data; 3: <No space for monitor buffer\n>; 4:.even; .text

_exit:
	mov     r5,-(sp)
	mov     sp,r5
	jsr     pc,__cleanup
	clr     -(sp)
	jsr     pc,_monitor
	tst     (sp)+
	mov     4(r5),r0
	sys     exit
eprol:
.bss
_environ:
	.=.+2
countbase:
	.=.+2
.data
	.=.+2
__ediag:        1
msg:            <MSG=>
@


1.2
log
@*** empty log message ***
@
text
@d1 1
a1 1
/       $Header: mcrt0.s,v 1.2 86/05/17 09:44:08 dmitry Exp $
a6 3
/     *** empty log message ***
/
/     Revision 1.2  86/05/17  09:44:08  dmitry
d58 2
a59 4
	bicb    $40,(r2)
	cmpb    (r2),$'R
	beq     1f
	cmpb    (r2),$320       / Р
a60 1
1:
@


1.1
log
@Вставлена обработка MSG.
@
text
@d1 1
a1 1
/       $Header$
d5 13
a17 1
/       $Log$
d61 4
a64 1
	cmpb    (r2),$'r
d66 1
@


0.0
log
@Исходная версия.
@
text
@d1 5
a5 2
/*     @@(#)mcrt0.s    2.1     SCCS id keyword */
/ C runtime startoff including monitoring
a7 2
exit    = 1
write   = 4
d17 1
d39 15
d82 2
d85 4
d90 2
a91 1
.data; 8: <No space for monitor buffer\n>; 9:.even; .text
d110 2
@
